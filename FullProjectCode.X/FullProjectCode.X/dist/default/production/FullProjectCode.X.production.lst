

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 12 21:09:53 2024

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  0B3D                     __pidataBANK0:	
   199                           
   200                           ;initializer for _chossenIndex
   201  0B3D  34FF               	retlw	255
   202  0B3E  34FF               	retlw	255
   203                           
   204                           ;initializer for _firstBeat
   205  0B3F  3401               	retlw	1
   206  0B40  3400               	retlw	0
   207                           
   208                           ;initializer for _amp
   209  0B41  3464               	retlw	100
   210  0B42  3400               	retlw	0
   211                           
   212                           ;initializer for _thresh
   213  0B43  3400               	retlw	0
   214  0B44  3402               	retlw	2
   215                           
   216                           ;initializer for _T
   217  0B45  3400               	retlw	0
   218  0B46  3402               	retlw	2
   219                           
   220                           ;initializer for _P
   221  0B47  3400               	retlw	0
   222  0B48  3402               	retlw	2
   223                           
   224                           ;initializer for _IBI
   225  0B49  3458               	retlw	88
   226  0B4A  3402               	retlw	2
   227                           
   228                           	psect	idataBANK3
   229  0B4B                     __pidataBANK3:	
   230                           
   231                           ;initializer for _keypad
   232  0B4B  3437               	retlw	55
   233  0B4C  3438               	retlw	56
   234  0B4D  3439               	retlw	57
   235  0B4E  342F               	retlw	47
   236  0B4F  3434               	retlw	52
   237  0B50  3435               	retlw	53
   238  0B51  3436               	retlw	54
   239  0B52  342A               	retlw	42
   240  0B53  3431               	retlw	49
   241  0B54  3432               	retlw	50
   242  0B55  3433               	retlw	51
   243  0B56  342D               	retlw	45
   244  0B57  3443               	retlw	67
   245  0B58  3430               	retlw	48
   246  0B59  343D               	retlw	61
   247  0B5A  342B               	retlw	43
   248  0010                     _T1CONbits	set	16
   249  000E                     _TMR1L	set	14
   250  000F                     _TMR1H	set	15
   251  0006                     _PORTB	set	6
   252  0008                     _PORTD	set	8
   253  0015                     _CCPR1L	set	21
   254  0017                     _CCP1CONbits	set	23
   255  0012                     _T2CONbits	set	18
   256  001E                     _ADRESH	set	30
   257  001F                     _ADCON0bits	set	31
   258  0037                     _RB7	set	55
   259  0036                     _RB6	set	54
   260  0035                     _RB5	set	53
   261  0034                     _RB4	set	52
   262  0033                     _RB3	set	51
   263  0032                     _RB2	set	50
   264  0031                     _RB1	set	49
   265  0030                     _RB0	set	48
   266  0043                     _RD3	set	67
   267  0042                     _RD2	set	66
   268  0080                     _TMR1ON	set	128
   269  0081                     _TMR1CS	set	129
   270  0085                     _T1CKPS1	set	133
   271  0084                     _T1CKPS0	set	132
   272  0060                     _TMR1IF	set	96
   273  005E                     _PEIE	set	94
   274  005F                     _GIE	set	95
   275  008C                     _PIE1bits	set	140
   276  0085                     _TRISA	set	133
   277  0088                     _TRISD	set	136
   278  0081                     _OPTION_REG	set	129
   279  0086                     _TRISB	set	134
   280  0087                     _TRISCbits	set	135
   281  0092                     _PR2	set	146
   282  009E                     _ADRESL	set	158
   283  009F                     _ADCON1bits	set	159
   284  0460                     _TMR1IE	set	1120
   285                           
   286                           	psect	strings
   287  0600                     __pstrings:	
   288  0600                     stringtab:	
   289  0600                     __stringtab:	
   290  0600                     stringcode:	
   291                           ;	String table - string pointers are 1 byte each
   292                           
   293  0600                     stringdir:	
   294  0600  3006               	movlw	high stringdir
   295  0601  008A               	movwf	10
   296  0602  0804               	movf	4,w
   297  0603  0A84               	incf	4,f
   298  0604  0782               	addwf	2,f
   299  0605                     __stringbase:	
   300  0605  3400               	retlw	0
   301  0606                     __end_of__stringtab:	
   302  0606                     STR_8:	
   303  0606  3453               	retlw	83	;'S'
   304  0607  3474               	retlw	116	;'t'
   305  0608  3461               	retlw	97	;'a'
   306  0609  3472               	retlw	114	;'r'
   307  060A  3474               	retlw	116	;'t'
   308  060B  3420               	retlw	32	;' '
   309  060C  3443               	retlw	67	;'C'
   310  060D  3461               	retlw	97	;'a'
   311  060E  346C               	retlw	108	;'l'
   312  060F  3463               	retlw	99	;'c'
   313  0610  3475               	retlw	117	;'u'
   314  0611  346C               	retlw	108	;'l'
   315  0612  3461               	retlw	97	;'a'
   316  0613  3474               	retlw	116	;'t'
   317  0614  3469               	retlw	105	;'i'
   318  0615  346E               	retlw	110	;'n'
   319  0616  3467               	retlw	103	;'g'
   320  0617  3420               	retlw	32	;' '
   321  0618  3400               	retlw	0
   322  0619                     STR_5:	
   323  0619  3450               	retlw	80	;'P'
   324  061A  3472               	retlw	114	;'r'
   325  061B  3465               	retlw	101	;'e'
   326  061C  3473               	retlw	115	;'s'
   327  061D  3473               	retlw	115	;'s'
   328  061E  3420               	retlw	32	;' '
   329  061F  3461               	retlw	97	;'a'
   330  0620  346E               	retlw	110	;'n'
   331  0621  3479               	retlw	121	;'y'
   332  0622  3420               	retlw	32	;' '
   333  0623  346B               	retlw	107	;'k'
   334  0624  3465               	retlw	101	;'e'
   335  0625  3479               	retlw	121	;'y'
   336  0626  3420               	retlw	32	;' '
   337  0627  342E               	retlw	46	;'.'
   338  0628  342E               	retlw	46	;'.'
   339  0629  342E               	retlw	46	;'.'
   340  062A  342E               	retlw	46	;'.'
   341  062B  3400               	retlw	0
   342  062C                     STR_3:	
   343  062C  3420               	retlw	32	;' '
   344  062D  3420               	retlw	32	;' '
   345  062E  3420               	retlw	32	;' '
   346  062F  3420               	retlw	32	;' '
   347  0630  3420               	retlw	32	;' '
   348  0631  3450               	retlw	80	;'P'
   349  0632  3472               	retlw	114	;'r'
   350  0633  346F               	retlw	111	;'o'
   351  0634  346A               	retlw	106	;'j'
   352  0635  3465               	retlw	101	;'e'
   353  0636  3463               	retlw	99	;'c'
   354  0637  3474               	retlw	116	;'t'
   355  0638  3420               	retlw	32	;' '
   356  0639  3420               	retlw	32	;' '
   357  063A  3420               	retlw	32	;' '
   358  063B  3420               	retlw	32	;' '
   359  063C  3400               	retlw	0
   360  063D                     STR_1:	
   361  063D  3420               	retlw	32	;' '
   362  063E  3420               	retlw	32	;' '
   363  063F  3420               	retlw	32	;' '
   364  0640  3457               	retlw	87	;'W'
   365  0641  3465               	retlw	101	;'e'
   366  0642  346C               	retlw	108	;'l'
   367  0643  3463               	retlw	99	;'c'
   368  0644  346F               	retlw	111	;'o'
   369  0645  346D               	retlw	109	;'m'
   370  0646  3465               	retlw	101	;'e'
   371  0647  3420               	retlw	32	;' '
   372  0648  3454               	retlw	84	;'T'
   373  0649  344F               	retlw	79	;'O'
   374  064A  3420               	retlw	32	;' '
   375  064B  3420               	retlw	32	;' '
   376  064C  3420               	retlw	32	;' '
   377  064D  3400               	retlw	0
   378  064E                     STR_2:	
   379  064E  3420               	retlw	32	;' '
   380  064F  3420               	retlw	32	;' '
   381  0650  3420               	retlw	32	;' '
   382  0651  3448               	retlw	72	;'H'
   383  0652  3465               	retlw	101	;'e'
   384  0653  3461               	retlw	97	;'a'
   385  0654  3472               	retlw	114	;'r'
   386  0655  3474               	retlw	116	;'t'
   387  0656  3420               	retlw	32	;' '
   388  0657  3452               	retlw	82	;'R'
   389  0658  3461               	retlw	97	;'a'
   390  0659  3474               	retlw	116	;'t'
   391  065A  3465               	retlw	101	;'e'
   392  065B  3420               	retlw	32	;' '
   393  065C  3420               	retlw	32	;' '
   394  065D  3420               	retlw	32	;' '
   395  065E  3400               	retlw	0
   396  065F                     STR_12:	
   397  065F  3445               	retlw	69	;'E'
   398  0660  346E               	retlw	110	;'n'
   399  0661  3464               	retlw	100	;'d'
   400  0662  3420               	retlw	32	;' '
   401  0663  3443               	retlw	67	;'C'
   402  0664  3461               	retlw	97	;'a'
   403  0665  346C               	retlw	108	;'l'
   404  0666  3463               	retlw	99	;'c'
   405  0667  3475               	retlw	117	;'u'
   406  0668  346C               	retlw	108	;'l'
   407  0669  3461               	retlw	97	;'a'
   408  066A  3474               	retlw	116	;'t'
   409  066B  3469               	retlw	105	;'i'
   410  066C  346E               	retlw	110	;'n'
   411  066D  3467               	retlw	103	;'g'
   412  066E  3420               	retlw	32	;' '
   413  066F  3400               	retlw	0
   414  0670                     STR_4:	
   415  0670  3455               	retlw	85	;'U'
   416  0671  3473               	retlw	115	;'s'
   417  0672  3469               	retlw	105	;'i'
   418  0673  346E               	retlw	110	;'n'
   419  0674  3467               	retlw	103	;'g'
   420  0675  3420               	retlw	32	;' '
   421  0676  3450               	retlw	80	;'P'
   422  0677  3449               	retlw	73	;'I'
   423  0678  3443               	retlw	67	;'C'
   424  0679  3431               	retlw	49	;'1'
   425  067A  3436               	retlw	54	;'6'
   426  067B  3446               	retlw	70	;'F'
   427  067C  3438               	retlw	56	;'8'
   428  067D  3437               	retlw	55	;'7'
   429  067E  3437               	retlw	55	;'7'
   430  067F  3441               	retlw	65	;'A'
   431  0680  3400               	retlw	0
   432  0681                     STR_7:	
   433  0681  3445               	retlw	69	;'E'
   434  0682  346E               	retlw	110	;'n'
   435  0683  3474               	retlw	116	;'t'
   436  0684  3465               	retlw	101	;'e'
   437  0685  3472               	retlw	114	;'r'
   438  0686  3420               	retlw	32	;' '
   439  0687  3441               	retlw	65	;'A'
   440  0688  3467               	retlw	103	;'g'
   441  0689  3465               	retlw	101	;'e'
   442  068A  3420               	retlw	32	;' '
   443  068B  343A               	retlw	58	;':'
   444  068C  3420               	retlw	32	;' '
   445  068D  3400               	retlw	0
   446  068E                     STR_6:	
   447  068E  3445               	retlw	69	;'E'
   448  068F  346E               	retlw	110	;'n'
   449  0690  3474               	retlw	116	;'t'
   450  0691  3465               	retlw	101	;'e'
   451  0692  3472               	retlw	114	;'r'
   452  0693  3420               	retlw	32	;' '
   453  0694  3449               	retlw	73	;'I'
   454  0695  3444               	retlw	68	;'D'
   455  0696  3420               	retlw	32	;' '
   456  0697  343A               	retlw	58	;':'
   457  0698  3420               	retlw	32	;' '
   458  0699  3400               	retlw	0
   459  069A                     STR_9:	
   460  069A  3442               	retlw	66	;'B'
   461  069B  344D               	retlw	77	;'M'
   462  069C  3450               	retlw	80	;'P'
   463  069D  3420               	retlw	32	;' '
   464  069E  3461               	retlw	97	;'a'
   465  069F  346E               	retlw	110	;'n'
   466  06A0  3464               	retlw	100	;'d'
   467  06A1  3420               	retlw	32	;' '
   468  06A2  3449               	retlw	73	;'I'
   469  06A3  3442               	retlw	66	;'B'
   470  06A4  3449               	retlw	73	;'I'
   471  06A5  3400               	retlw	0
   472  06A6                     STR_13:	
   473  06A6  3453               	retlw	83	;'S'
   474  06A7  3468               	retlw	104	;'h'
   475  06A8  346F               	retlw	111	;'o'
   476  06A9  3477               	retlw	119	;'w'
   477  06AA  3420               	retlw	32	;' '
   478  06AB  3444               	retlw	68	;'D'
   479  06AC  3461               	retlw	97	;'a'
   480  06AD  3474               	retlw	116	;'t'
   481  06AE  3461               	retlw	97	;'a'
   482  06AF  3420               	retlw	32	;' '
   483  06B0  3400               	retlw	0
   484  06B1                     STR_11:	
   485  06B1  3449               	retlw	73	;'I'
   486  06B2  3442               	retlw	66	;'B'
   487  06B3  3449               	retlw	73	;'I'
   488  06B4  3420               	retlw	32	;' '
   489  06B5  343A               	retlw	58	;':'
   490  06B6  342D               	retlw	45	;'-'
   491  06B7  3420               	retlw	32	;' '
   492  06B8  3400               	retlw	0
   493  06B9                     STR_10:	
   494  06B9  3442               	retlw	66	;'B'
   495  06BA  3450               	retlw	80	;'P'
   496  06BB  344D               	retlw	77	;'M'
   497  06BC  3420               	retlw	32	;' '
   498  06BD  343A               	retlw	58	;':'
   499  06BE  342D               	retlw	45	;'-'
   500  06BF  3420               	retlw	32	;' '
   501  06C0  3400               	retlw	0
   502  06C1                     STR_17:	
   503  06C1  3442               	retlw	66	;'B'
   504  06C2  3450               	retlw	80	;'P'
   505  06C3  344D               	retlw	77	;'M'
   506  06C4  343A               	retlw	58	;':'
   507  06C5  3400               	retlw	0
   508  06C6                     STR_16:	
   509  06C6  3441               	retlw	65	;'A'
   510  06C7  3467               	retlw	103	;'g'
   511  06C8  3465               	retlw	101	;'e'
   512  06C9  343A               	retlw	58	;':'
   513  06CA  3400               	retlw	0
   514  06CB                     STR_15:	
   515  06CB  3449               	retlw	73	;'I'
   516  06CC  3444               	retlw	68	;'D'
   517  06CD  343A               	retlw	58	;':'
   518  06CE  3400               	retlw	0
   519  068E                     
   520                           ; #config settings
   521  0000                     
   522                           	psect	cinit
   523  0015                     start_initialization:	
   524  0015                     __initialization:	
   525                           
   526                           ; Initialize objects allocated to BANK3
   527  0015  1783               	bsf	3,7	;select IRP bank2
   528  0016  30B4               	movlw	low (__pdataBANK3+16)
   529  0017  00FD               	movwf	btemp+-1
   530  0018  300B               	movlw	high __pidataBANK3
   531  0019  00FE               	movwf	btemp
   532  001A  304B               	movlw	low __pidataBANK3
   533  001B  00FF               	movwf	btemp+1
   534  001C  30A4               	movlw	low __pdataBANK3
   535  001D  0084               	movwf	4
   536  001E  120A  158A  235F  120A  118A  	fcall	init_ram0
   537                           
   538                           ; Initialize objects allocated to BANK0
   539  0023  1383               	bcf	3,7	;select IRP bank0
   540  0024  305A               	movlw	low (__pdataBANK0+14)
   541  0025  00FD               	movwf	btemp+-1
   542  0026  300B               	movlw	high __pidataBANK0
   543  0027  00FE               	movwf	btemp
   544  0028  303D               	movlw	low __pidataBANK0
   545  0029  00FF               	movwf	btemp+1
   546  002A  304C               	movlw	low __pdataBANK0
   547  002B  0084               	movwf	4
   548  002C  120A  158A  235F  120A  118A  	fcall	init_ram0
   549                           
   550                           ; Clear objects allocated to BANK3
   551  0031  1783               	bsf	3,7	;select IRP bank2
   552  0032  3090               	movlw	low __pbssBANK3
   553  0033  0084               	movwf	4
   554  0034  30A4               	movlw	low (__pbssBANK3+20)
   555  0035  120A  158A  2311  120A  118A  	fcall	clear_ram0
   556                           
   557                           ; Clear objects allocated to BANK1
   558  003A  1383               	bcf	3,7	;select IRP bank0
   559  003B  30A0               	movlw	low __pbssBANK1
   560  003C  0084               	movwf	4
   561  003D  30E6               	movlw	low (__pbssBANK1+70)
   562  003E  120A  158A  2311  120A  118A  	fcall	clear_ram0
   563                           
   564                           ; Clear objects allocated to BANK0
   565  0043  303C               	movlw	low __pbssBANK0
   566  0044  0084               	movwf	4
   567  0045  304C               	movlw	low (__pbssBANK0+16)
   568  0046  120A  158A  2311   	fcall	clear_ram0
   569  0049                     end_of_initialization:	
   570                           ;End of C runtime variable initialization code
   571                           
   572  0049                     __end_of__initialization:	
   573  0049  0183               	clrf	3
   574  004A  120A  118A  284D   	ljmp	_main	;jump to C main() function
   575                           
   576                           	psect	bssBANK0
   577  003C                     __pbssBANK0:	
   578  003C                     _secondBeat:	
   579  003C                     	ds	2
   580  003E                     _sampleCounter:	
   581  003E                     	ds	2
   582  0040                     _Signal:	
   583  0040                     	ds	2
   584  0042                     _BPM:	
   585  0042                     	ds	2
   586  0044                     _Pulse:	
   587  0044                     	ds	2
   588  0046                     _lastBeatTime:	
   589  0046                     	ds	2
   590  0048                     _Go:	
   591  0048                     	ds	2
   592  004A                     _colloc:	
   593  004A                     	ds	1
   594  004B                     _rowloc:	
   595  004B                     	ds	1
   596                           
   597                           	psect	dataBANK0
   598  004C                     __pdataBANK0:	
   599  004C                     _chossenIndex:	
   600  004C                     	ds	2
   601  004E                     _firstBeat:	
   602  004E                     	ds	2
   603  0050                     _amp:	
   604  0050                     	ds	2
   605  0052                     _thresh:	
   606  0052                     	ds	2
   607  0054                     _T:	
   608  0054                     	ds	2
   609  0056                     _P:	
   610  0056                     	ds	2
   611  0058                     _IBI:	
   612  0058                     	ds	2
   613                           
   614                           	psect	bssBANK1
   615  00A0                     __pbssBANK1:	
   616  00A0                     _BPMs:	
   617  00A0                     	ds	20
   618  00B4                     _Ages:	
   619  00B4                     	ds	20
   620  00C8                     _rate:	
   621  00C8                     	ds	20
   622  00DC                     _PWM_PERIOD:	
   623  00DC                     	ds	4
   624  00E0                     _counter:	
   625  00E0                     	ds	2
   626  00E2                     _PWM_FREQ:	
   627  00E2                     	ds	4
   628                           
   629                           	psect	bssBANK3
   630  0190                     __pbssBANK3:	
   631  0190                     _IDs:	
   632  0190                     	ds	20
   633                           
   634                           	psect	dataBANK3
   635  01A4                     __pdataBANK3:	
   636  01A4                     _keypad:	
   637  01A4                     	ds	16
   638                           
   639                           	psect	inittext
   640  0B5B                     init_fetch0:	
   641                           ;	Called with low address in FSR and high address in W
   642                           
   643  0B5B  087E               	movf	126,w
   644  0B5C  008A               	movwf	10
   645  0B5D  087F               	movf	127,w
   646  0B5E  0082               	movwf	2
   647  0B5F                     init_ram0:	
   648                           ;Called with:
   649                           ;	high address of idata address in btemp 
   650                           ;	low address of idata address in btemp+1 
   651                           ;	low address of data in FSR
   652                           ;	high address + 1 of data in btemp-1
   653                           
   654  0B5F  235B  120A  158A   	fcall	init_fetch0
   655  0B62  0080               	movwf	0
   656  0B63  0A84               	incf	4,f
   657  0B64  0804               	movf	4,w
   658  0B65  067D               	xorwf	125,w
   659  0B66  1903               	btfsc	3,2
   660  0B67  3400               	retlw	0
   661  0B68  0AFF               	incf	127,f
   662  0B69  1903               	btfsc	3,2
   663  0B6A  0AFE               	incf	126,f
   664  0B6B  2B5F               	goto	init_ram0
   665                           
   666                           	psect	clrtext
   667  0B11                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  0B11  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  0B12                     clrloop0:	
   673  0B12  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  0B13  0A84               	incf	4,f	;increment pointer
   675  0B14  0604               	xorwf	4,w	;XOR with final address
   676  0B15  1903               	btfsc	3,2	;have we reached the end yet?
   677  0B16  3400               	retlw	0	;all done for this memory range, return
   678  0B17  0604               	xorwf	4,w	;XOR again to restore value
   679  0B18  2B12               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackBANK3
   682  01B4                     __pcstackBANK3:	
   683  01B4                     main@age:	
   684                           
   685                           ; 2 bytes @ 0x0
   686  01B4                     	ds	2
   687  01B6                     main@IDGlo:	
   688                           
   689                           ; 2 bytes @ 0x2
   690  01B6                     	ds	2
   691  01B8                     main@AgeGlo:	
   692                           
   693                           ; 2 bytes @ 0x4
   694  01B8                     	ds	2
   695  01BA                     main@BPMGlo:	
   696                           
   697                           ; 2 bytes @ 0x6
   698  01BA                     	ds	2
   699  01BC                     main@flag:	
   700                           
   701                           ; 2 bytes @ 0x8
   702  01BC                     	ds	2
   703  01BE                     main@agebuf:	
   704                           
   705                           ; 2 bytes @ 0xA
   706  01BE                     	ds	2
   707  01C0                     main@k:	
   708                           
   709                           ; 1 bytes @ 0xC
   710  01C0                     	ds	1
   711                           
   712                           	psect	cstackBANK1
   713  00E6                     __pcstackBANK1:	
   714  00E6                     show@s:	
   715  00E6                     ___awdiv@counter:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  00E6                     ___awmod@counter:	
   719                           ; 1 bytes @ 0x0
   720                           
   721                           
   722                           ; 1 bytes @ 0x0
   723  00E6                     	ds	1
   724  00E7                     ___awdiv@sign:	
   725  00E7                     ___awmod@sign:	
   726                           ; 1 bytes @ 0x1
   727                           
   728                           
   729                           ; 1 bytes @ 0x1
   730  00E7                     	ds	1
   731  00E8                     ___awdiv@quotient:	
   732                           
   733                           ; 2 bytes @ 0x2
   734  00E8                     	ds	2
   735  00EA                     ?_show_num:	
   736  00EA                     show_num@number:	
   737                           ; 1 bytes @ 0x4
   738                           
   739                           
   740                           ; 2 bytes @ 0x4
   741  00EA                     	ds	2
   742  00EC                     ??_main:	
   743                           
   744                           ; 1 bytes @ 0x6
   745  00EC                     	ds	4
   746                           
   747                           	psect	cstackCOMMON
   748  0070                     __pcstackCOMMON:	
   749  0070                     ?_cmd:	
   750  0070                     ?_lcd_delay:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?___init_adc:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?___init_interrupt__:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?___init_timer__:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_lcd_init:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_dat:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_show:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_keyinit:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_key:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_isr:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_main:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?___adc_read:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?i1___awdiv:	
   787                           ; 2 bytes @ 0x0
   788                           
   789  0070                     ?___aldiv:	
   790                           ; 2 bytes @ 0x0
   791                           
   792  0070                     ___adc_read@adc_channel:	
   793                           ; 4 bytes @ 0x0
   794                           
   795  0070                     i1___awdiv@divisor:	
   796                           ; 2 bytes @ 0x0
   797                           
   798  0070                     ___aldiv@divisor:	
   799                           ; 2 bytes @ 0x0
   800                           
   801                           
   802                           ; 4 bytes @ 0x0
   803  0070                     	ds	2
   804  0072                     ??___adc_read:	
   805  0072                     i1___awdiv@dividend:	
   806                           ; 1 bytes @ 0x2
   807                           
   808                           
   809                           ; 2 bytes @ 0x2
   810  0072                     	ds	2
   811  0074                     ??i1___awdiv:	
   812  0074                     ___adc_read@adc_value:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ___aldiv@dividend:	
   816                           ; 2 bytes @ 0x4
   817                           
   818                           
   819                           ; 4 bytes @ 0x4
   820  0074                     	ds	1
   821  0075                     i1___awdiv@counter:	
   822                           
   823                           ; 1 bytes @ 0x5
   824  0075                     	ds	1
   825  0076                     i1___awdiv@sign:	
   826                           
   827                           ; 1 bytes @ 0x6
   828  0076                     	ds	1
   829  0077                     i1___awdiv@quotient:	
   830                           
   831                           ; 2 bytes @ 0x7
   832  0077                     	ds	1
   833  0078                     ??___aldiv:	
   834                           
   835                           ; 1 bytes @ 0x8
   836  0078                     	ds	1
   837  0079                     ?i1___wmul:	
   838  0079                     i1___wmul@multiplier:	
   839                           ; 2 bytes @ 0x9
   840                           
   841                           
   842                           ; 2 bytes @ 0x9
   843  0079                     	ds	2
   844  007B                     i1___wmul@multiplicand:	
   845                           
   846                           ; 2 bytes @ 0xB
   847  007B                     	ds	2
   848  007D                     ??i1___wmul:	
   849                           
   850                           	psect	cstackBANK0
   851  0020                     __pcstackBANK0:	
   852                           ; 1 bytes @ 0xD
   853                           
   854  0020                     ___aldiv@counter:	
   855  0020                     i1___wmul@product:	
   856                           ; 1 bytes @ 0x0
   857                           
   858                           
   859                           ; 2 bytes @ 0x0
   860  0020                     	ds	1
   861  0021                     ___aldiv@sign:	
   862                           
   863                           ; 1 bytes @ 0x1
   864  0021                     	ds	1
   865  0022                     ___aldiv@quotient:	
   866                           
   867                           ; 4 bytes @ 0x2
   868  0022                     	ds	4
   869  0026                     ??_isr:	
   870                           
   871                           ; 1 bytes @ 0x6
   872  0026                     	ds	8
   873  002E                     isr@runningTotal:	
   874                           
   875                           ; 2 bytes @ 0xE
   876  002E                     	ds	2
   877  0030                     isr@i:	
   878                           
   879                           ; 2 bytes @ 0x10
   880  0030                     	ds	2
   881  0032                     isr@N:	
   882                           
   883                           ; 2 bytes @ 0x12
   884  0032                     	ds	2
   885  0034                     isr@i_356:	
   886                           
   887                           ; 2 bytes @ 0x14
   888  0034                     	ds	2
   889  0036                     ??_lcd_delay:	
   890  0036                     ??___init_adc:	
   891                           ; 1 bytes @ 0x16
   892                           
   893  0036                     ??___init_interrupt__:	
   894                           ; 1 bytes @ 0x16
   895                           
   896  0036                     ??___init_timer__:	
   897                           ; 1 bytes @ 0x16
   898                           
   899  0036                     ??_keyinit:	
   900                           ; 1 bytes @ 0x16
   901                           
   902  0036                     ??_key:	
   903                           ; 1 bytes @ 0x16
   904                           
   905  0036                     ?___wmul:	
   906                           ; 1 bytes @ 0x16
   907                           
   908  0036                     ?___awdiv:	
   909                           ; 2 bytes @ 0x16
   910                           
   911  0036                     ?___awmod:	
   912                           ; 2 bytes @ 0x16
   913                           
   914  0036                     lcd_delay@lcd_delay:	
   915                           ; 2 bytes @ 0x16
   916                           
   917  0036                     ___wmul@multiplier:	
   918                           ; 2 bytes @ 0x16
   919                           
   920  0036                     ___awdiv@divisor:	
   921                           ; 2 bytes @ 0x16
   922                           
   923  0036                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0x16
   925                           
   926                           
   927                           ; 2 bytes @ 0x16
   928  0036                     	ds	2
   929  0038                     ??_cmd:	
   930  0038                     ??_dat:	
   931                           ; 1 bytes @ 0x18
   932                           
   933  0038                     ___wmul@multiplicand:	
   934                           ; 1 bytes @ 0x18
   935                           
   936  0038                     ___awdiv@dividend:	
   937                           ; 2 bytes @ 0x18
   938                           
   939  0038                     ___awmod@dividend:	
   940                           ; 2 bytes @ 0x18
   941                           
   942                           
   943                           ; 2 bytes @ 0x18
   944  0038                     	ds	1
   945  0039                     key@no_push:	
   946                           
   947                           ; 1 bytes @ 0x19
   948  0039                     	ds	1
   949  003A                     ??___wmul:	
   950  003A                     ??___awdiv:	
   951                           ; 1 bytes @ 0x1A
   952                           
   953  003A                     ??___awmod:	
   954                           ; 1 bytes @ 0x1A
   955                           
   956  003A                     cmd@a:	
   957                           ; 1 bytes @ 0x1A
   958                           
   959  003A                     dat@b:	
   960                           ; 1 bytes @ 0x1A
   961                           
   962  003A                     ___wmul@product:	
   963                           ; 1 bytes @ 0x1A
   964                           
   965                           
   966                           ; 2 bytes @ 0x1A
   967  003A                     	ds	1
   968  003B                     ??_lcd_init:	
   969  003B                     ??_show:	
   970                           ; 1 bytes @ 0x1B
   971                           
   972  003B                     ??_show_num:	
   973                           ; 1 bytes @ 0x1B
   974                           
   975                           
   976                           ; 1 bytes @ 0x1B
   977  003B                     	ds	1
   978                           
   979                           	psect	maintext
   980  004D                     __pmaintext:	
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 400 in file "newmain.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  BPMGlo          2    6[BANK3 ] int 
   991 ;;  AgeGlo          2    4[BANK3 ] int 
   992 ;;  IDGlo           2    2[BANK3 ] int 
   993 ;;  agebuf          2   10[BANK3 ] unsigned char [2]
   994 ;;  age             2    0[BANK3 ] int 
   995 ;;  flag            2    8[BANK3 ] int 
   996 ;;  k               1   12[BANK3 ] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : B00/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0      13       0
  1008 ;;      Temps:          0       0       4       0       0
  1009 ;;      Totals:         0       0       4      13       0
  1010 ;;Total ram usage:       17 bytes
  1011 ;; Hardware stack levels required when called:    5
  1012 ;; This function calls:
  1013 ;;		___init_adc
  1014 ;;		___init_interrupt__
  1015 ;;		___init_timer__
  1016 ;;		___wmul
  1017 ;;		_cmd
  1018 ;;		_dat
  1019 ;;		_key
  1020 ;;		_keyinit
  1021 ;;		_lcd_init
  1022 ;;		_show
  1023 ;;		_show_num
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _main
  1031  004D                     _main:	
  1032                           
  1033                           ;newmain.c: 402:     TRISD=0;
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1037  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1038  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1039  004F  0188               	clrf	8	;volatile
  1040                           
  1041                           ;newmain.c: 403:     lcd_init();
  1042  0050  120A  158A  236C  120A  118A  	fcall	_lcd_init
  1043                           
  1044                           ;newmain.c: 404:     keyinit();
  1045  0055  120A  158A  2322  120A  118A  	fcall	_keyinit
  1046                           
  1047                           ;newmain.c: 405:     cmd(0x80);
  1048  005A  3080               	movlw	128
  1049  005B  120A  158A  241B  120A  118A  	fcall	_cmd
  1050                           
  1051                           ;newmain.c: 406:     show("   Welcome TO   ");
  1052  0060  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1053  0061  120A  158A  2389  120A  118A  	fcall	_show
  1054                           
  1055                           ;newmain.c: 407:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1056  0066  300D               	movlw	13
  1057  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0068  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0069  00EE               	movwf	(??_main^(0+128)+2)
  1060  006A  30AF               	movlw	175
  1061  006B  00ED               	movwf	(??_main^(0+128)+1)
  1062  006C  30B5               	movlw	181
  1063  006D  00EC               	movwf	??_main^(0+128)
  1064  006E                     u5217:	
  1065  006E  0BEC               	decfsz	??_main^(0+128),f
  1066  006F  286E               	goto	u5217
  1067  0070  0BED               	decfsz	(??_main^(0+128)+1),f
  1068  0071  286E               	goto	u5217
  1069  0072  0BEE               	decfsz	(??_main^(0+128)+2),f
  1070  0073  286E               	goto	u5217
  1071  0074  2875               	nop2
  1072                           
  1073                           ;newmain.c: 408:     cmd(0x01);
  1074  0075  3001               	movlw	1
  1075  0076  120A  158A  241B  120A  118A  	fcall	_cmd
  1076                           
  1077                           ;newmain.c: 409:     cmd(0x80);
  1078  007B  3080               	movlw	128
  1079  007C  120A  158A  241B  120A  118A  	fcall	_cmd
  1080                           
  1081                           ;newmain.c: 410:     show("   Heart Rate   ");
  1082  0081  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1083  0082  120A  158A  2389  120A  118A  	fcall	_show
  1084                           
  1085                           ;newmain.c: 411:     cmd(0xC0);
  1086  0087  30C0               	movlw	192
  1087  0088  120A  158A  241B  120A  118A  	fcall	_cmd
  1088                           
  1089                           ;newmain.c: 412:     show("     Project    ");
  1090  008D  3027               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1091  008E  120A  158A  2389  120A  118A  	fcall	_show
  1092                           
  1093                           ;newmain.c: 413:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1094  0093  300D               	movlw	13
  1095  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1096  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1097  0096  00EE               	movwf	(??_main^(0+128)+2)
  1098  0097  30AF               	movlw	175
  1099  0098  00ED               	movwf	(??_main^(0+128)+1)
  1100  0099  30B5               	movlw	181
  1101  009A  00EC               	movwf	??_main^(0+128)
  1102  009B                     u5227:	
  1103  009B  0BEC               	decfsz	??_main^(0+128),f
  1104  009C  289B               	goto	u5227
  1105  009D  0BED               	decfsz	(??_main^(0+128)+1),f
  1106  009E  289B               	goto	u5227
  1107  009F  0BEE               	decfsz	(??_main^(0+128)+2),f
  1108  00A0  289B               	goto	u5227
  1109  00A1  28A2               	nop2
  1110                           
  1111                           ;newmain.c: 414:     cmd(0x01);
  1112  00A2  3001               	movlw	1
  1113  00A3  120A  158A  241B  120A  118A  	fcall	_cmd
  1114                           
  1115                           ;newmain.c: 415:     cmd(0x80);
  1116  00A8  3080               	movlw	128
  1117  00A9  120A  158A  241B  120A  118A  	fcall	_cmd
  1118                           
  1119                           ;newmain.c: 416:     show("Using PIC16F877A");
  1120  00AE  306B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1121  00AF  120A  158A  2389  120A  118A  	fcall	_show
  1122                           
  1123                           ;newmain.c: 417:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1124  00B4  300D               	movlw	13
  1125  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1126  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1127  00B7  00EE               	movwf	(??_main^(0+128)+2)
  1128  00B8  30AF               	movlw	175
  1129  00B9  00ED               	movwf	(??_main^(0+128)+1)
  1130  00BA  30B5               	movlw	181
  1131  00BB  00EC               	movwf	??_main^(0+128)
  1132  00BC                     u5237:	
  1133  00BC  0BEC               	decfsz	??_main^(0+128),f
  1134  00BD  28BC               	goto	u5237
  1135  00BE  0BED               	decfsz	(??_main^(0+128)+1),f
  1136  00BF  28BC               	goto	u5237
  1137  00C0  0BEE               	decfsz	(??_main^(0+128)+2),f
  1138  00C1  28BC               	goto	u5237
  1139  00C2  28C3               	nop2
  1140                           
  1141                           ;newmain.c: 418:     cmd(0x01);
  1142  00C3  3001               	movlw	1
  1143  00C4  120A  158A  241B  120A  118A  	fcall	_cmd
  1144                           
  1145                           ;newmain.c: 419:     cmd(0x80);
  1146  00C9  3080               	movlw	128
  1147  00CA  120A  158A  241B  120A  118A  	fcall	_cmd
  1148                           
  1149                           ;newmain.c: 420:     show("Press any key ....");
  1150  00CF  3014               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1151  00D0  120A  158A  2389  120A  118A  	fcall	_show
  1152  00D5                     l3279:	
  1153                           
  1154                           ;newmain.c: 430:     {;newmain.c: 431:         int flag = 0 ;
  1155  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  1156  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  1157  00D7  01BC               	clrf	main@flag^(0+384)
  1158  00D8  01BD               	clrf	(main@flag+1)^(0+384)
  1159                           
  1160                           ;newmain.c: 432:         unsigned char k = key();
  1161  00D9  120A  118A  26CF  120A  118A  	fcall	_key
  1162  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1163  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1164  00E0  00EC               	movwf	??_main^(0+128)
  1165  00E1  086C               	movf	??_main^(0+128),w
  1166  00E2  1683               	bsf	3,5	;RP0=1, select bank3
  1167  00E3  1703               	bsf	3,6	;RP1=1, select bank3
  1168  00E4  00C0               	movwf	main@k^(0+384)
  1169                           
  1170                           ;newmain.c: 433:         if( k != 255 ){
  1171  00E5  0A40               	incf	main@k^(0+384),w
  1172  00E6  1903               	btfsc	3,2
  1173  00E7  28D5               	goto	l3279
  1174                           
  1175                           ;newmain.c: 434:             cmd(0x01);
  1176  00E8  3001               	movlw	1
  1177  00E9  120A  158A  241B  120A  118A  	fcall	_cmd
  1178                           
  1179                           ;newmain.c: 435:             cmd(0x80);
  1180  00EE  3080               	movlw	128
  1181  00EF  120A  158A  241B  120A  118A  	fcall	_cmd
  1182                           
  1183                           ;newmain.c: 436:             if( k == '/' ){
  1184  00F4  302F               	movlw	47
  1185  00F5  1683               	bsf	3,5	;RP0=1, select bank3
  1186  00F6  1703               	bsf	3,6	;RP1=1, select bank3
  1187  00F7  0640               	xorwf	main@k^(0+384),w
  1188  00F8  1D03               	btfss	3,2
  1189  00F9  2944               	goto	l3309
  1190                           
  1191                           ;newmain.c: 437:                 show("Enter ID : ");
  1192  00FA  3089               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1193  00FB  120A  158A  2389  120A  118A  	fcall	_show
  1194  0100                     l243:	
  1195                           ;newmain.c: 438:                 IDagain:
  1196                           
  1197                           
  1198                           ;newmain.c: 439:                 k = key();
  1199  0100  120A  118A  26CF  120A  118A  	fcall	_key
  1200  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0107  00EC               	movwf	??_main^(0+128)
  1203  0108  086C               	movf	??_main^(0+128),w
  1204  0109  1683               	bsf	3,5	;RP0=1, select bank3
  1205  010A  1703               	bsf	3,6	;RP1=1, select bank3
  1206  010B  00C0               	movwf	main@k^(0+384)
  1207                           
  1208                           ;newmain.c: 440:                 if( k >= '1' && k <= '9'){
  1209  010C  3031               	movlw	49
  1210  010D  0240               	subwf	main@k^(0+384),w
  1211  010E  1C03               	skipc
  1212  010F  2900               	goto	l243
  1213  0110  303A               	movlw	58
  1214  0111  0240               	subwf	main@k^(0+384),w
  1215  0112  1803               	skipnc
  1216  0113  2900               	goto	l243
  1217                           
  1218                           ;newmain.c: 441:                     dat(k);
  1219  0114  0840               	movf	main@k^(0+384),w
  1220  0115  120A  158A  2457  120A  118A  	fcall	_dat
  1221                           
  1222                           ;newmain.c: 442:                     chossenIndex = (int)( k - '0' );
  1223  011A  1683               	bsf	3,5	;RP0=1, select bank3
  1224  011B  1703               	bsf	3,6	;RP1=1, select bank3
  1225  011C  0840               	movf	main@k^(0+384),w
  1226  011D  3ED0               	addlw	208
  1227  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1228  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0120  00CC               	movwf	_chossenIndex
  1230  0121  30FF               	movlw	255
  1231  0122  1803               	skipnc
  1232  0123  3000               	movlw	0
  1233  0124  00CD               	movwf	_chossenIndex+1
  1234                           
  1235                           ;newmain.c: 443:                     IDs[chossenIndex] = chossenIndex ;
  1236  0125  084C               	movf	_chossenIndex,w
  1237  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0128  00EC               	movwf	??_main^(0+128)
  1240  0129  076C               	addwf	??_main^(0+128),w
  1241  012A  3E90               	addlw	(low (_IDs| (0+256)))& (0+255)
  1242  012B  0084               	movwf	4
  1243  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1244  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1245  012E  084C               	movf	_chossenIndex,w
  1246  012F  1783               	bsf	3,7	;select IRP bank3
  1247  0130  0080               	movwf	0
  1248  0131  0A84               	incf	4,f
  1249  0132  084D               	movf	_chossenIndex+1,w
  1250  0133  0080               	movwf	0
  1251  0134                     l3301:	
  1252                           ;newmain.c: 444:                 }
  1253                           
  1254                           
  1255                           ;newmain.c: 449:                     k = key() ;
  1256  0134  120A  118A  26CF  120A  118A  	fcall	_key
  1257  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1258  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1259  013B  00EC               	movwf	??_main^(0+128)
  1260  013C  086C               	movf	??_main^(0+128),w
  1261  013D  1683               	bsf	3,5	;RP0=1, select bank3
  1262  013E  1703               	bsf	3,6	;RP1=1, select bank3
  1263  013F  00C0               	movwf	main@k^(0+384)
  1264                           
  1265                           ;newmain.c: 450:                     if( k == '=' ){
  1266  0140  303D               	movlw	61
  1267  0141  0640               	xorwf	main@k^(0+384),w
  1268  0142  1D03               	btfss	3,2
  1269  0143  2934               	goto	l3301
  1270  0144                     l3309:	
  1271                           
  1272                           ;newmain.c: 458:             if( k == '*' ){
  1273  0144  302A               	movlw	42
  1274  0145  0640               	xorwf	main@k^(0+384),w
  1275  0146  1D03               	btfss	3,2
  1276  0147  29EF               	goto	l3341
  1277                           
  1278                           ;newmain.c: 459:                 char agebuf[2] ;;newmain.c: 460:                 show("
      +                          Enter Age : ");
  1279  0148  307C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1280  0149  120A  158A  2389  120A  118A  	fcall	_show
  1281  014E                     l252:	
  1282                           ;newmain.c: 461:                 Ageagain1:
  1283                           
  1284                           
  1285                           ;newmain.c: 462:                 k = key();
  1286  014E  120A  118A  26CF  120A  118A  	fcall	_key
  1287  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0155  00EC               	movwf	??_main^(0+128)
  1290  0156  086C               	movf	??_main^(0+128),w
  1291  0157  1683               	bsf	3,5	;RP0=1, select bank3
  1292  0158  1703               	bsf	3,6	;RP1=1, select bank3
  1293  0159  00C0               	movwf	main@k^(0+384)
  1294                           
  1295                           ;newmain.c: 463:                 if( k >= '1' && k <= '9' ){
  1296  015A  3031               	movlw	49
  1297  015B  0240               	subwf	main@k^(0+384),w
  1298  015C  1C03               	skipc
  1299  015D  294E               	goto	l252
  1300  015E  303A               	movlw	58
  1301  015F  0240               	subwf	main@k^(0+384),w
  1302  0160  1803               	skipnc
  1303  0161  294E               	goto	l252
  1304                           
  1305                           ;newmain.c: 464:                     dat(k);
  1306  0162  0840               	movf	main@k^(0+384),w
  1307  0163  120A  158A  2457  120A  118A  	fcall	_dat
  1308                           
  1309                           ;newmain.c: 465:                     agebuf[0] = k ;
  1310  0168  1683               	bsf	3,5	;RP0=1, select bank3
  1311  0169  1703               	bsf	3,6	;RP1=1, select bank3
  1312  016A  0840               	movf	main@k^(0+384),w
  1313  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1314  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1315  016D  00EC               	movwf	??_main^(0+128)
  1316  016E  086C               	movf	??_main^(0+128),w
  1317  016F  1683               	bsf	3,5	;RP0=1, select bank3
  1318  0170  1703               	bsf	3,6	;RP1=1, select bank3
  1319  0171  00BE               	movwf	main@agebuf^(0+384)
  1320  0172                     l3321:	
  1321                           ;newmain.c: 466:                 }
  1322                           
  1323                           
  1324                           ;newmain.c: 471:                 k = key();
  1325  0172  120A  118A  26CF  120A  118A  	fcall	_key
  1326  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0179  00EC               	movwf	??_main^(0+128)
  1329  017A  086C               	movf	??_main^(0+128),w
  1330  017B  1683               	bsf	3,5	;RP0=1, select bank3
  1331  017C  1703               	bsf	3,6	;RP1=1, select bank3
  1332  017D  00C0               	movwf	main@k^(0+384)
  1333                           
  1334                           ;newmain.c: 472:                 if( k >= '0' && k <= '9' ){
  1335  017E  3030               	movlw	48
  1336  017F  0240               	subwf	main@k^(0+384),w
  1337  0180  1C03               	skipc
  1338  0181  2972               	goto	l3321
  1339  0182  303A               	movlw	58
  1340  0183  0240               	subwf	main@k^(0+384),w
  1341  0184  1803               	skipnc
  1342  0185  2972               	goto	l3321
  1343                           
  1344                           ;newmain.c: 473:                     dat(k);
  1345  0186  0840               	movf	main@k^(0+384),w
  1346  0187  120A  158A  2457  120A  118A  	fcall	_dat
  1347                           
  1348                           ;newmain.c: 474:                     agebuf[1] = k;
  1349  018C  1683               	bsf	3,5	;RP0=1, select bank3
  1350  018D  1703               	bsf	3,6	;RP1=1, select bank3
  1351  018E  0840               	movf	main@k^(0+384),w
  1352  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1353  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1354  0191  00EC               	movwf	??_main^(0+128)
  1355  0192  086C               	movf	??_main^(0+128),w
  1356  0193  1683               	bsf	3,5	;RP0=1, select bank3
  1357  0194  1703               	bsf	3,6	;RP1=1, select bank3
  1358  0195  00BF               	movwf	(main@agebuf^(0+384)+1)
  1359                           
  1360                           ;newmain.c: 479:                 int age = (int)( agebuf[0] - '0' )*10 + (int)( agebuf[1
      +                          ] - '0' ) ;
  1361                           
  1362                           ;newmain.c: 475:                 }
  1363  0196  083E               	movf	main@agebuf^(0+384),w
  1364  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0199  00EC               	movwf	??_main^(0+128)
  1367  019A  01ED               	clrf	(??_main^(0+128)+1)
  1368  019B  086C               	movf	??_main^(0+128),w
  1369  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1370  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1371  019E  00B6               	movwf	___wmul@multiplier
  1372  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1373  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1374  01A1  086D               	movf	(??_main+1)^(0+128),w
  1375  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1376  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1377  01A4  00B7               	movwf	___wmul@multiplier+1
  1378  01A5  300A               	movlw	10
  1379  01A6  00B8               	movwf	___wmul@multiplicand
  1380  01A7  3000               	movlw	0
  1381  01A8  00B9               	movwf	___wmul@multiplicand+1
  1382  01A9  120A  158A  23AB  120A  118A  	fcall	___wmul
  1383  01AE  1683               	bsf	3,5	;RP0=1, select bank3
  1384  01AF  1703               	bsf	3,6	;RP1=1, select bank3
  1385  01B0  083F               	movf	(main@agebuf^(0+384)+1),w
  1386  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1387  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1388  01B3  0736               	addwf	?___wmul,w
  1389  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1390  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1391  01B6  00EE               	movwf	(??_main+2)^(0+128)
  1392  01B7  3000               	movlw	0
  1393  01B8  1803               	skipnc
  1394  01B9  3001               	movlw	1
  1395  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1396  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1397  01BC  0737               	addwf	?___wmul+1,w
  1398  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1399  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1400  01BF  00EF               	movwf	(??_main+3)^(0+128)
  1401  01C0  086E               	movf	(??_main+2)^(0+128),w
  1402  01C1  3EF0               	addlw	240
  1403  01C2  1683               	bsf	3,5	;RP0=1, select bank3
  1404  01C3  1703               	bsf	3,6	;RP1=1, select bank3
  1405  01C4  00B4               	movwf	main@age^(0+384)
  1406  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1407  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1408  01C7  086F               	movf	(??_main+3)^(0+128),w
  1409  01C8  1803               	skipnc
  1410  01C9  3E01               	addlw	1
  1411  01CA  3EFD               	addlw	253
  1412  01CB  1683               	bsf	3,5	;RP0=1, select bank3
  1413  01CC  1703               	bsf	3,6	;RP1=1, select bank3
  1414  01CD  00B5               	movwf	(main@age+1)^(0+384)
  1415                           
  1416                           ;newmain.c: 480:                 Ages[chossenIndex] = age ;
  1417  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1418  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1419  01D0  084C               	movf	_chossenIndex,w
  1420  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1421  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1422  01D3  00EC               	movwf	??_main^(0+128)
  1423  01D4  076C               	addwf	??_main^(0+128),w
  1424  01D5  3EB4               	addlw	(low (_Ages| 0))& (0+255)
  1425  01D6  0084               	movwf	4
  1426  01D7  1683               	bsf	3,5	;RP0=1, select bank3
  1427  01D8  1703               	bsf	3,6	;RP1=1, select bank3
  1428  01D9  0834               	movf	main@age^(0+384),w
  1429  01DA  1383               	bcf	3,7	;select IRP bank1
  1430  01DB  0080               	movwf	0
  1431  01DC  0A84               	incf	4,f
  1432  01DD  0835               	movf	(main@age+1)^(0+384),w
  1433  01DE  0080               	movwf	0
  1434  01DF                     l3335:	
  1435                           
  1436                           ;newmain.c: 482:                     k = key() ;
  1437  01DF  120A  118A  26CF  120A  118A  	fcall	_key
  1438  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1439  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1440  01E6  00EC               	movwf	??_main^(0+128)
  1441  01E7  086C               	movf	??_main^(0+128),w
  1442  01E8  1683               	bsf	3,5	;RP0=1, select bank3
  1443  01E9  1703               	bsf	3,6	;RP1=1, select bank3
  1444  01EA  00C0               	movwf	main@k^(0+384)
  1445                           
  1446                           ;newmain.c: 483:                     if( k == '=' ){
  1447  01EB  303D               	movlw	61
  1448  01EC  0640               	xorwf	main@k^(0+384),w
  1449  01ED  1D03               	btfss	3,2
  1450  01EE  29DF               	goto	l3335
  1451  01EF                     l3341:	
  1452                           
  1453                           ;newmain.c: 491:             if( k == '+' ){
  1454  01EF  302B               	movlw	43
  1455  01F0  0640               	xorwf	main@k^(0+384),w
  1456  01F1  1D03               	btfss	3,2
  1457  01F2  2A96               	goto	l3379
  1458                           
  1459                           ;newmain.c: 492:                 show("Start Calculating ");
  1460  01F3  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1461  01F4  120A  158A  2389  120A  118A  	fcall	_show
  1462                           
  1463                           ;newmain.c: 493:                 cmd(0xC0);
  1464  01F9  30C0               	movlw	192
  1465  01FA  120A  158A  241B  120A  118A  	fcall	_cmd
  1466                           
  1467                           ;newmain.c: 494:                 show("BMP and IBI");
  1468  01FF  3095               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1469  0200  120A  158A  2389  120A  118A  	fcall	_show
  1470                           
  1471                           ;newmain.c: 495:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1472  0205  301A               	movlw	26
  1473  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0208  00EE               	movwf	(??_main^(0+128)+2)
  1476  0209  305E               	movlw	94
  1477  020A  00ED               	movwf	(??_main^(0+128)+1)
  1478  020B  306D               	movlw	109
  1479  020C  00EC               	movwf	??_main^(0+128)
  1480  020D                     u5247:	
  1481  020D  0BEC               	decfsz	??_main^(0+128),f
  1482  020E  2A0D               	goto	u5247
  1483  020F  0BED               	decfsz	(??_main^(0+128)+1),f
  1484  0210  2A0D               	goto	u5247
  1485  0211  0BEE               	decfsz	(??_main^(0+128)+2),f
  1486  0212  2A0D               	goto	u5247
  1487  0213  2A14               	nop2
  1488                           
  1489                           ;newmain.c: 496:                 cmd(0x01);
  1490  0214  3001               	movlw	1
  1491  0215  120A  158A  241B  120A  118A  	fcall	_cmd
  1492                           
  1493                           ;newmain.c: 497:                 __init_adc();
  1494  021A  120A  158A  232F  120A  118A  	fcall	___init_adc
  1495                           
  1496                           ;newmain.c: 498:                 TRISA = 0xFF;
  1497  021F  30FF               	movlw	255
  1498  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1499  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1500  0222  0085               	movwf	5	;volatile
  1501                           
  1502                           ;newmain.c: 499:                 __init_adc();
  1503  0223  120A  158A  232F  120A  118A  	fcall	___init_adc
  1504                           
  1505                           ;newmain.c: 500:                 __init_timer__();
  1506  0228  120A  158A  230A  120A  118A  	fcall	___init_timer__
  1507                           
  1508                           ;newmain.c: 501:                 __init_interrupt__();
  1509  022D  120A  158A  2319  120A  118A  	fcall	___init_interrupt__
  1510                           
  1511                           ;newmain.c: 508:                 }
  1512  0232  2A6D               	goto	l3361
  1513  0233                     l3369:	
  1514                           
  1515                           ;newmain.c: 510:                     cmd(0x80);
  1516  0233  3080               	movlw	128
  1517  0234  120A  158A  241B  120A  118A  	fcall	_cmd
  1518                           
  1519                           ;newmain.c: 511:                     show("BPM :- ");
  1520  0239  30B4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1521  023A  120A  158A  2389  120A  118A  	fcall	_show
  1522                           
  1523                           ;newmain.c: 512:                     show_num(BPM);
  1524  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0241  0843               	movf	_BPM+1,w
  1527  0242  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0243  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0244  00EB               	movwf	(show_num@number+1)^(0+128)
  1530  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0247  0842               	movf	_BPM,w
  1533  0248  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0249  1303               	bcf	3,6	;RP1=0, select bank1
  1535  024A  00EA               	movwf	show_num@number^(0+128)
  1536  024B  120A  118A  23B8  120A  118A  	fcall	_show_num
  1537                           
  1538                           ;newmain.c: 513:                     cmd(0xC0);
  1539  0250  30C0               	movlw	192
  1540  0251  120A  158A  241B  120A  118A  	fcall	_cmd
  1541                           
  1542                           ;newmain.c: 514:                     show("IBI :- ");
  1543  0256  30AC               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1544  0257  120A  158A  2389  120A  118A  	fcall	_show
  1545                           
  1546                           ;newmain.c: 515:                     show_num(IBI);
  1547  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1548  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1549  025E  0859               	movf	_IBI+1,w
  1550  025F  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0260  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0261  00EB               	movwf	(show_num@number+1)^(0+128)
  1553  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0264  0858               	movf	_IBI,w
  1556  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0267  00EA               	movwf	show_num@number^(0+128)
  1559  0268  120A  118A  23B8  120A  118A  	fcall	_show_num
  1560  026D                     l3361:	
  1561                           ;newmain.c: 516:                     goto Calcagain ;
  1562                           
  1563                           
  1564                           ;newmain.c: 503:                 k = key();
  1565  026D  120A  118A  26CF  120A  118A  	fcall	_key
  1566  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0274  00EC               	movwf	??_main^(0+128)
  1569  0275  086C               	movf	??_main^(0+128),w
  1570  0276  1683               	bsf	3,5	;RP0=1, select bank3
  1571  0277  1703               	bsf	3,6	;RP1=1, select bank3
  1572  0278  00C0               	movwf	main@k^(0+384)
  1573                           
  1574                           ;newmain.c: 504:                 if( k == '-' ){
  1575  0279  302D               	movlw	45
  1576  027A  0640               	xorwf	main@k^(0+384),w
  1577  027B  1D03               	btfss	3,2
  1578  027C  2A33               	goto	l3369
  1579                           
  1580                           ;newmain.c: 505:                     flag = 1 ;
  1581  027D  3001               	movlw	1
  1582  027E  00BC               	movwf	main@flag^(0+384)
  1583  027F  3000               	movlw	0
  1584  0280  00BD               	movwf	(main@flag^(0+384)+1)
  1585                           
  1586                           ;newmain.c: 506:                     _delay((unsigned long)((500)*(20000000/4000.0)));
  1587  0281  300D               	movlw	13
  1588  0282  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0283  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0284  00EE               	movwf	(??_main^(0+128)+2)
  1591  0285  30AF               	movlw	175
  1592  0286  00ED               	movwf	(??_main^(0+128)+1)
  1593  0287  30B5               	movlw	181
  1594  0288  00EC               	movwf	??_main^(0+128)
  1595  0289                     u5257:	
  1596  0289  0BEC               	decfsz	??_main^(0+128),f
  1597  028A  2A89               	goto	u5257
  1598  028B  0BED               	decfsz	(??_main^(0+128)+1),f
  1599  028C  2A89               	goto	u5257
  1600  028D  0BEE               	decfsz	(??_main^(0+128)+2),f
  1601  028E  2A89               	goto	u5257
  1602  028F  2A90               	nop2
  1603                           
  1604                           ;newmain.c: 507:                     cmd(0x01);
  1605  0290  3001               	movlw	1
  1606  0291  120A  158A  241B  120A  118A  	fcall	_cmd
  1607  0296                     l3379:	
  1608                           
  1609                           ;newmain.c: 519:             if( k == '-' && flag == 1 ){
  1610  0296  302D               	movlw	45
  1611  0297  1683               	bsf	3,5	;RP0=1, select bank3
  1612  0298  1703               	bsf	3,6	;RP1=1, select bank3
  1613  0299  0640               	xorwf	main@k^(0+384),w
  1614  029A  1D03               	btfss	3,2
  1615  029B  2AD9               	goto	l3407
  1616  029C  033C               	decf	main@flag^(0+384),w
  1617  029D  043D               	iorwf	(main@flag+1)^(0+384),w
  1618  029E  1D03               	btfss	3,2
  1619  029F  2AD9               	goto	l3407
  1620                           
  1621                           ;newmain.c: 520:                 show("End Calculating ");
  1622  02A0  305A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1623  02A1  120A  158A  2389  120A  118A  	fcall	_show
  1624                           
  1625                           ;newmain.c: 521:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  1626  02A6  301A               	movlw	26
  1627  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  1628  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  1629  02A9  00EE               	movwf	(??_main^(0+128)+2)
  1630  02AA  305E               	movlw	94
  1631  02AB  00ED               	movwf	(??_main^(0+128)+1)
  1632  02AC  306D               	movlw	109
  1633  02AD  00EC               	movwf	??_main^(0+128)
  1634  02AE                     u5267:	
  1635  02AE  0BEC               	decfsz	??_main^(0+128),f
  1636  02AF  2AAE               	goto	u5267
  1637  02B0  0BED               	decfsz	(??_main^(0+128)+1),f
  1638  02B1  2AAE               	goto	u5267
  1639  02B2  0BEE               	decfsz	(??_main^(0+128)+2),f
  1640  02B3  2AAE               	goto	u5267
  1641  02B4  2AB5               	nop2
  1642                           
  1643                           ;newmain.c: 522:                 cmd(0x01);
  1644  02B5  3001               	movlw	1
  1645  02B6  120A  158A  241B  120A  118A  	fcall	_cmd
  1646                           
  1647                           ;newmain.c: 524:                 BPMs[chossenIndex] = BPM ;
  1648  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1649  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1650  02BD  084C               	movf	_chossenIndex,w
  1651  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  1652  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  1653  02C0  00EC               	movwf	??_main^(0+128)
  1654  02C1  076C               	addwf	??_main^(0+128),w
  1655  02C2  3EA0               	addlw	(low (_BPMs| 0))& (0+255)
  1656  02C3  0084               	movwf	4
  1657  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1658  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1659  02C6  0842               	movf	_BPM,w
  1660  02C7  1383               	bcf	3,7	;select IRP bank1
  1661  02C8  0080               	movwf	0
  1662  02C9  0A84               	incf	4,f
  1663  02CA  0843               	movf	_BPM+1,w
  1664  02CB  0080               	movwf	0
  1665                           
  1666                           ;newmain.c: 525:                 ADCON0bits.ADON = 0;
  1667  02CC  101F               	bcf	31,0	;volatile
  1668                           
  1669                           ;newmain.c: 526:                 PIE1bits.TMR1IE = 0;
  1670  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  1671  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  1672  02CF  100C               	bcf	12,0	;volatile
  1673                           
  1674                           ;newmain.c: 527:                 T1CONbits.TMR1ON = 0;
  1675  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1676  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1677  02D2  1010               	bcf	16,0	;volatile
  1678                           
  1679                           ;newmain.c: 528:                 GIE = 0;
  1680  02D3  138B               	bcf	11,7	;volatile
  1681                           
  1682                           ;newmain.c: 529:                 PEIE = 0;
  1683  02D4  130B               	bcf	11,6	;volatile
  1684                           
  1685                           ;newmain.c: 530:                 IBI = 0 ;
  1686  02D5  01D8               	clrf	_IBI
  1687  02D6  01D9               	clrf	_IBI+1
  1688                           
  1689                           ;newmain.c: 531:                 BPM = 0 ;
  1690  02D7  01C2               	clrf	_BPM
  1691  02D8  01C3               	clrf	_BPM+1
  1692  02D9                     l3407:	
  1693                           
  1694                           ;newmain.c: 533:             if( k == 'C' ){
  1695  02D9  3043               	movlw	67
  1696  02DA  1683               	bsf	3,5	;RP0=1, select bank3
  1697  02DB  1703               	bsf	3,6	;RP1=1, select bank3
  1698  02DC  0640               	xorwf	main@k^(0+384),w
  1699  02DD  1D03               	btfss	3,2
  1700  02DE  28D5               	goto	l3279
  1701                           
  1702                           ;newmain.c: 534:                 show("Show Data ");
  1703  02DF  30A1               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1704  02E0  120A  158A  2389  120A  118A  	fcall	_show
  1705                           
  1706                           ;newmain.c: 535:                 cmd(0xC0);
  1707  02E5  30C0               	movlw	192
  1708  02E6  120A  158A  241B  120A  118A  	fcall	_cmd
  1709                           
  1710                           ;newmain.c: 536:                 show("Enter ID : ");
  1711  02EB  3089               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1712  02EC  120A  158A  2389  120A  118A  	fcall	_show
  1713  02F1                     l3415:	
  1714                           
  1715                           ;newmain.c: 538:                 k = key();
  1716  02F1  120A  118A  26CF  120A  118A  	fcall	_key
  1717  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1718  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1719  02F8  00EC               	movwf	??_main^(0+128)
  1720  02F9  086C               	movf	??_main^(0+128),w
  1721  02FA  1683               	bsf	3,5	;RP0=1, select bank3
  1722  02FB  1703               	bsf	3,6	;RP1=1, select bank3
  1723  02FC  00C0               	movwf	main@k^(0+384)
  1724                           
  1725                           ;newmain.c: 539:                 if( k >= '1' && k <= '9'){
  1726  02FD  3031               	movlw	49
  1727  02FE  0240               	subwf	main@k^(0+384),w
  1728  02FF  1C03               	skipc
  1729  0300  2AF1               	goto	l3415
  1730  0301  303A               	movlw	58
  1731  0302  0240               	subwf	main@k^(0+384),w
  1732  0303  1803               	skipnc
  1733  0304  2AF1               	goto	l3415
  1734                           
  1735                           ;newmain.c: 540:                     dat(k);
  1736  0305  0840               	movf	main@k^(0+384),w
  1737  0306  120A  158A  2457  120A  118A  	fcall	_dat
  1738                           
  1739                           ;newmain.c: 541:                     _delay((unsigned long)((500)*(20000000/4000.0)));
  1740  030B  300D               	movlw	13
  1741  030C  1683               	bsf	3,5	;RP0=1, select bank1
  1742  030D  1303               	bcf	3,6	;RP1=0, select bank1
  1743  030E  00EE               	movwf	(??_main^(0+128)+2)
  1744  030F  30AF               	movlw	175
  1745  0310  00ED               	movwf	(??_main^(0+128)+1)
  1746  0311  30B5               	movlw	181
  1747  0312  00EC               	movwf	??_main^(0+128)
  1748  0313                     u5277:	
  1749  0313  0BEC               	decfsz	??_main^(0+128),f
  1750  0314  2B13               	goto	u5277
  1751  0315  0BED               	decfsz	(??_main^(0+128)+1),f
  1752  0316  2B13               	goto	u5277
  1753  0317  0BEE               	decfsz	(??_main^(0+128)+2),f
  1754  0318  2B13               	goto	u5277
  1755  0319  2B1A               	nop2
  1756                           
  1757                           ;newmain.c: 542:                     chossenIndex = (int)( k - '0' );
  1758  031A  1683               	bsf	3,5	;RP0=1, select bank3
  1759  031B  1703               	bsf	3,6	;RP1=1, select bank3
  1760  031C  0840               	movf	main@k^(0+384),w
  1761  031D  3ED0               	addlw	208
  1762  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1763  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0320  00CC               	movwf	_chossenIndex
  1765  0321  30FF               	movlw	255
  1766  0322  1803               	skipnc
  1767  0323  3000               	movlw	0
  1768  0324  00CD               	movwf	_chossenIndex+1
  1769                           
  1770                           ;newmain.c: 547:                 int IDGlo = chossenIndex;
  1771                           
  1772                           ;newmain.c: 543:                 }
  1773  0325  084D               	movf	_chossenIndex+1,w
  1774  0326  1683               	bsf	3,5	;RP0=1, select bank3
  1775  0327  1703               	bsf	3,6	;RP1=1, select bank3
  1776  0328  00B7               	movwf	(main@IDGlo+1)^(0+384)
  1777  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1778  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1779  032B  084C               	movf	_chossenIndex,w
  1780  032C  1683               	bsf	3,5	;RP0=1, select bank3
  1781  032D  1703               	bsf	3,6	;RP1=1, select bank3
  1782  032E  00B6               	movwf	main@IDGlo^(0+384)
  1783                           
  1784                           ;newmain.c: 548:                 int AgeGlo = Ages[chossenIndex];
  1785  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0331  084C               	movf	_chossenIndex,w
  1788  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0334  00EC               	movwf	??_main^(0+128)
  1791  0335  076C               	addwf	??_main^(0+128),w
  1792  0336  3EB4               	addlw	(low (_Ages| 0))& (0+255)
  1793  0337  0084               	movwf	4
  1794  0338  1383               	bcf	3,7	;select IRP bank1
  1795  0339  0800               	movf	0,w
  1796  033A  1683               	bsf	3,5	;RP0=1, select bank3
  1797  033B  1703               	bsf	3,6	;RP1=1, select bank3
  1798  033C  00B8               	movwf	main@AgeGlo^(0+384)
  1799  033D  0A84               	incf	4,f
  1800  033E  0800               	movf	0,w
  1801  033F  00B9               	movwf	(main@AgeGlo+1)^(0+384)
  1802                           
  1803                           ;newmain.c: 549:                 int BPMGlo = BPMs[chossenIndex];
  1804  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0342  084C               	movf	_chossenIndex,w
  1807  0343  1683               	bsf	3,5	;RP0=1, select bank1
  1808  0344  1303               	bcf	3,6	;RP1=0, select bank1
  1809  0345  00EC               	movwf	??_main^(0+128)
  1810  0346  076C               	addwf	??_main^(0+128),w
  1811  0347  3EA0               	addlw	(low (_BPMs| 0))& (0+255)
  1812  0348  0084               	movwf	4
  1813  0349  0800               	movf	0,w
  1814  034A  1683               	bsf	3,5	;RP0=1, select bank3
  1815  034B  1703               	bsf	3,6	;RP1=1, select bank3
  1816  034C  00BA               	movwf	main@BPMGlo^(0+384)
  1817  034D  0A84               	incf	4,f
  1818  034E  0800               	movf	0,w
  1819  034F  00BB               	movwf	(main@BPMGlo+1)^(0+384)
  1820                           
  1821                           ;newmain.c: 550:                 cmd(0x01);
  1822  0350  3001               	movlw	1
  1823  0351  120A  158A  241B  120A  118A  	fcall	_cmd
  1824                           
  1825                           ;newmain.c: 551:                 cmd(0x80);
  1826  0356  3080               	movlw	128
  1827  0357  120A  158A  241B  120A  118A  	fcall	_cmd
  1828                           
  1829                           ;newmain.c: 552:                 show("ID:");
  1830  035C  30C6               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1831  035D  120A  158A  2389  120A  118A  	fcall	_show
  1832                           
  1833                           ;newmain.c: 553:                 show_num(IDGlo);
  1834  0362  1683               	bsf	3,5	;RP0=1, select bank3
  1835  0363  1703               	bsf	3,6	;RP1=1, select bank3
  1836  0364  0837               	movf	(main@IDGlo+1)^(0+384),w
  1837  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1838  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1839  0367  00EB               	movwf	(show_num@number+1)^(0+128)
  1840  0368  1683               	bsf	3,5	;RP0=1, select bank3
  1841  0369  1703               	bsf	3,6	;RP1=1, select bank3
  1842  036A  0836               	movf	main@IDGlo^(0+384),w
  1843  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1844  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1845  036D  00EA               	movwf	show_num@number^(0+128)
  1846  036E  120A  118A  23B8  120A  118A  	fcall	_show_num
  1847                           
  1848                           ;newmain.c: 554:                 show("Age:");
  1849  0373  30C1               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1850  0374  120A  158A  2389  120A  118A  	fcall	_show
  1851                           
  1852                           ;newmain.c: 555:                 show_num(AgeGlo);
  1853  0379  1683               	bsf	3,5	;RP0=1, select bank3
  1854  037A  1703               	bsf	3,6	;RP1=1, select bank3
  1855  037B  0839               	movf	(main@AgeGlo+1)^(0+384),w
  1856  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1857  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1858  037E  00EB               	movwf	(show_num@number+1)^(0+128)
  1859  037F  1683               	bsf	3,5	;RP0=1, select bank3
  1860  0380  1703               	bsf	3,6	;RP1=1, select bank3
  1861  0381  0838               	movf	main@AgeGlo^(0+384),w
  1862  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0384  00EA               	movwf	show_num@number^(0+128)
  1865  0385  120A  118A  23B8  120A  118A  	fcall	_show_num
  1866                           
  1867                           ;newmain.c: 556:                 cmd(0xC0);
  1868  038A  30C0               	movlw	192
  1869  038B  120A  158A  241B  120A  118A  	fcall	_cmd
  1870                           
  1871                           ;newmain.c: 557:                 show("BPM:");
  1872  0390  30BC               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1873  0391  120A  158A  2389  120A  118A  	fcall	_show
  1874                           
  1875                           ;newmain.c: 558:                 show_num(BPMGlo);
  1876  0396  1683               	bsf	3,5	;RP0=1, select bank3
  1877  0397  1703               	bsf	3,6	;RP1=1, select bank3
  1878  0398  083B               	movf	(main@BPMGlo+1)^(0+384),w
  1879  0399  1683               	bsf	3,5	;RP0=1, select bank1
  1880  039A  1303               	bcf	3,6	;RP1=0, select bank1
  1881  039B  00EB               	movwf	(show_num@number+1)^(0+128)
  1882  039C  1683               	bsf	3,5	;RP0=1, select bank3
  1883  039D  1703               	bsf	3,6	;RP1=1, select bank3
  1884  039E  083A               	movf	main@BPMGlo^(0+384),w
  1885  039F  1683               	bsf	3,5	;RP0=1, select bank1
  1886  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  1887  03A1  00EA               	movwf	show_num@number^(0+128)
  1888  03A2  120A  118A  23B8  120A  118A  	fcall	_show_num
  1889  03A7                     l3451:	
  1890                           
  1891                           ;newmain.c: 560:                     k = key() ;
  1892  03A7  120A  118A  26CF  120A  118A  	fcall	_key
  1893  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  1894  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  1895  03AE  00EC               	movwf	??_main^(0+128)
  1896  03AF  086C               	movf	??_main^(0+128),w
  1897  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  1898  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  1899  03B2  00C0               	movwf	main@k^(0+384)
  1900                           
  1901                           ;newmain.c: 561:                     if( k == '=' ){
  1902  03B3  303D               	movlw	61
  1903  03B4  0640               	xorwf	main@k^(0+384),w
  1904  03B5  1903               	btfsc	3,2
  1905  03B6  28D5               	goto	l3279
  1906  03B7  2BA7               	goto	l3451
  1907  03B8                     __end_of_main:	
  1908                           
  1909                           	psect	text1
  1910  03B8                     __ptext1:	
  1911 ;; *************** function _show_num *****************
  1912 ;; Defined at:
  1913 ;;		line 252 in file "newmain.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  number          2    4[BANK1 ] int 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       2       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         0       0       2       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    4
  1934 ;; This function calls:
  1935 ;;		___awdiv
  1936 ;;		___awmod
  1937 ;;		_dat
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _show_num
  1945  03B8                     _show_num:	
  1946                           
  1947                           ;newmain.c: 253:     if( number >= 1000 ){
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _show_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1951  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1952  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1953  03BA  086B               	movf	(show_num@number+1)^(0+128),w
  1954  03BB  3A80               	xorlw	128
  1955  03BC  00FF               	movwf	127
  1956  03BD  3083               	movlw	131
  1957  03BE  027F               	subwf	127,w
  1958  03BF  1D03               	skipz
  1959  03C0  2BC3               	goto	u4905
  1960  03C1  30E8               	movlw	232
  1961  03C2  026A               	subwf	show_num@number^(0+128),w
  1962  03C3                     u4905:	
  1963  03C3  1C03               	skipc
  1964  03C4  2C94               	goto	l3185
  1965                           
  1966                           ;newmain.c: 254:         dat( ( number/1000 + '0' ) );
  1967  03C5  30E8               	movlw	232
  1968  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1969  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1970  03C8  00B6               	movwf	___awdiv@divisor
  1971  03C9  3003               	movlw	3
  1972  03CA  00B7               	movwf	___awdiv@divisor+1
  1973  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1974  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1975  03CD  086B               	movf	(show_num@number+1)^(0+128),w
  1976  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1977  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1978  03D0  00B9               	movwf	___awdiv@dividend+1
  1979  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1980  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1981  03D3  086A               	movf	show_num@number^(0+128),w
  1982  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1983  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1984  03D6  00B8               	movwf	___awdiv@dividend
  1985  03D7  120A  158A  254C  120A  118A  	fcall	___awdiv
  1986  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1987  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1988  03DE  0836               	movf	?___awdiv,w
  1989  03DF  3E30               	addlw	48
  1990  03E0  120A  158A  2457  120A  118A  	fcall	_dat
  1991                           
  1992                           ;newmain.c: 255:         number %= 1000 ;
  1993  03E5  30E8               	movlw	232
  1994  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1995  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1996  03E8  00B6               	movwf	___awmod@divisor
  1997  03E9  3003               	movlw	3
  1998  03EA  00B7               	movwf	___awmod@divisor+1
  1999  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2000  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2001  03ED  086B               	movf	(show_num@number+1)^(0+128),w
  2002  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2003  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2004  03F0  00B9               	movwf	___awmod@dividend+1
  2005  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2006  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2007  03F3  086A               	movf	show_num@number^(0+128),w
  2008  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2009  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2010  03F6  00B8               	movwf	___awmod@dividend
  2011  03F7  120A  158A  24EC  120A  118A  	fcall	___awmod
  2012  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2013  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2014  03FE  0837               	movf	?___awmod+1,w
  2015  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0401  00EB               	movwf	(show_num@number+1)^(0+128)
  2018  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0404  0836               	movf	?___awmod,w
  2021  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2023  0407  00EA               	movwf	show_num@number^(0+128)
  2024                           
  2025                           ;newmain.c: 256:         dat( ( number/100 + '0' ) );
  2026  0408  3064               	movlw	100
  2027  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2028  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2029  040B  00B6               	movwf	___awdiv@divisor
  2030  040C  3000               	movlw	0
  2031  040D  00B7               	movwf	___awdiv@divisor+1
  2032  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2033  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0410  086B               	movf	(show_num@number+1)^(0+128),w
  2035  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0413  00B9               	movwf	___awdiv@dividend+1
  2038  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0415  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0416  086A               	movf	show_num@number^(0+128),w
  2041  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0419  00B8               	movwf	___awdiv@dividend
  2044  041A  120A  158A  254C  120A  118A  	fcall	___awdiv
  2045  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0421  0836               	movf	?___awdiv,w
  2048  0422  3E30               	addlw	48
  2049  0423  120A  158A  2457  120A  118A  	fcall	_dat
  2050                           
  2051                           ;newmain.c: 257:         number %= 100 ;
  2052  0428  3064               	movlw	100
  2053  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2054  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2055  042B  00B6               	movwf	___awmod@divisor
  2056  042C  3000               	movlw	0
  2057  042D  00B7               	movwf	___awmod@divisor+1
  2058  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2059  042F  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0430  086B               	movf	(show_num@number+1)^(0+128),w
  2061  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0433  00B9               	movwf	___awmod@dividend+1
  2064  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2066  0436  086A               	movf	show_num@number^(0+128),w
  2067  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0439  00B8               	movwf	___awmod@dividend
  2070  043A  120A  158A  24EC  120A  118A  	fcall	___awmod
  2071  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0441  0837               	movf	?___awmod+1,w
  2074  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0444  00EB               	movwf	(show_num@number+1)^(0+128)
  2077  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0447  0836               	movf	?___awmod,w
  2080  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2082  044A  00EA               	movwf	show_num@number^(0+128)
  2083                           
  2084                           ;newmain.c: 258:         dat( ( number/10 + '0' ) );
  2085  044B  300A               	movlw	10
  2086  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2087  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2088  044E  00B6               	movwf	___awdiv@divisor
  2089  044F  3000               	movlw	0
  2090  0450  00B7               	movwf	___awdiv@divisor+1
  2091  0451  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0452  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0453  086B               	movf	(show_num@number+1)^(0+128),w
  2094  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0456  00B9               	movwf	___awdiv@dividend+1
  2097  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2098  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2099  0459  086A               	movf	show_num@number^(0+128),w
  2100  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2101  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2102  045C  00B8               	movwf	___awdiv@dividend
  2103  045D  120A  158A  254C  120A  118A  	fcall	___awdiv
  2104  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0464  0836               	movf	?___awdiv,w
  2107  0465  3E30               	addlw	48
  2108  0466  120A  158A  2457  120A  118A  	fcall	_dat
  2109                           
  2110                           ;newmain.c: 259:         number %= 10 ;
  2111  046B  300A               	movlw	10
  2112  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2113  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2114  046E  00B6               	movwf	___awmod@divisor
  2115  046F  3000               	movlw	0
  2116  0470  00B7               	movwf	___awmod@divisor+1
  2117  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2118  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2119  0473  086B               	movf	(show_num@number+1)^(0+128),w
  2120  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0476  00B9               	movwf	___awmod@dividend+1
  2123  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0479  086A               	movf	show_num@number^(0+128),w
  2126  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2127  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2128  047C  00B8               	movwf	___awmod@dividend
  2129  047D  120A  158A  24EC  120A  118A  	fcall	___awmod
  2130  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0484  0837               	movf	?___awmod+1,w
  2133  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0487  00EB               	movwf	(show_num@number+1)^(0+128)
  2136  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2138  048A  0836               	movf	?___awmod,w
  2139  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2140  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2141  048D  00EA               	movwf	show_num@number^(0+128)
  2142                           
  2143                           ;newmain.c: 260:         dat( ( number/1 + '0' ) );
  2144  048E  086A               	movf	show_num@number^(0+128),w
  2145  048F  3E30               	addlw	48
  2146  0490  120A  158A  2457   	fcall	_dat
  2147                           
  2148                           ;newmain.c: 262:     }
  2149  0493  0008               	return
  2150  0494                     l3185:	
  2151  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0496  086B               	movf	(show_num@number+1)^(0+128),w
  2154  0497  3A80               	xorlw	128
  2155  0498  00FF               	movwf	127
  2156  0499  3083               	movlw	131
  2157  049A  027F               	subwf	127,w
  2158  049B  1D03               	skipz
  2159  049C  2C9F               	goto	u4915
  2160  049D  30E8               	movlw	232
  2161  049E  026A               	subwf	show_num@number^(0+128),w
  2162  049F                     u4915:	
  2163  049F  1803               	skipnc
  2164  04A0  2D40               	goto	l3195
  2165  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2166  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2167  04A3  086B               	movf	(show_num@number+1)^(0+128),w
  2168  04A4  3A80               	xorlw	128
  2169  04A5  00FF               	movwf	127
  2170  04A6  3080               	movlw	128
  2171  04A7  027F               	subwf	127,w
  2172  04A8  1D03               	skipz
  2173  04A9  2CAC               	goto	u4925
  2174  04AA  3064               	movlw	100
  2175  04AB  026A               	subwf	show_num@number^(0+128),w
  2176  04AC                     u4925:	
  2177  04AC  1C03               	skipc
  2178  04AD  2D40               	goto	l3195
  2179                           
  2180                           ;newmain.c: 264:         dat( ( number/100 + '0' ) );
  2181  04AE  3064               	movlw	100
  2182  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2183  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2184  04B1  00B6               	movwf	___awdiv@divisor
  2185  04B2  3000               	movlw	0
  2186  04B3  00B7               	movwf	___awdiv@divisor+1
  2187  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2188  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2189  04B6  086B               	movf	(show_num@number+1)^(0+128),w
  2190  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2191  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2192  04B9  00B9               	movwf	___awdiv@dividend+1
  2193  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2194  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2195  04BC  086A               	movf	show_num@number^(0+128),w
  2196  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2197  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2198  04BF  00B8               	movwf	___awdiv@dividend
  2199  04C0  120A  158A  254C  120A  118A  	fcall	___awdiv
  2200  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2201  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2202  04C7  0836               	movf	?___awdiv,w
  2203  04C8  3E30               	addlw	48
  2204  04C9  120A  158A  2457  120A  118A  	fcall	_dat
  2205                           
  2206                           ;newmain.c: 265:         number %= 100 ;
  2207  04CE  3064               	movlw	100
  2208  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2209  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2210  04D1  00B6               	movwf	___awmod@divisor
  2211  04D2  3000               	movlw	0
  2212  04D3  00B7               	movwf	___awmod@divisor+1
  2213  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2214  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2215  04D6  086B               	movf	(show_num@number+1)^(0+128),w
  2216  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2217  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2218  04D9  00B9               	movwf	___awmod@dividend+1
  2219  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2220  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2221  04DC  086A               	movf	show_num@number^(0+128),w
  2222  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2223  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2224  04DF  00B8               	movwf	___awmod@dividend
  2225  04E0  120A  158A  24EC  120A  118A  	fcall	___awmod
  2226  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2227  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2228  04E7  0837               	movf	?___awmod+1,w
  2229  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2230  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2231  04EA  00EB               	movwf	(show_num@number+1)^(0+128)
  2232  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2233  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2234  04ED  0836               	movf	?___awmod,w
  2235  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2236  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2237  04F0  00EA               	movwf	show_num@number^(0+128)
  2238                           
  2239                           ;newmain.c: 266:         dat( ( number/10 + '0' ) );
  2240  04F1  300A               	movlw	10
  2241  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2242  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2243  04F4  00B6               	movwf	___awdiv@divisor
  2244  04F5  3000               	movlw	0
  2245  04F6  00B7               	movwf	___awdiv@divisor+1
  2246  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2247  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2248  04F9  086B               	movf	(show_num@number+1)^(0+128),w
  2249  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2250  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2251  04FC  00B9               	movwf	___awdiv@dividend+1
  2252  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  2253  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  2254  04FF  086A               	movf	show_num@number^(0+128),w
  2255  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0502  00B8               	movwf	___awdiv@dividend
  2258  0503  120A  158A  254C  120A  118A  	fcall	___awdiv
  2259  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2261  050A  0836               	movf	?___awdiv,w
  2262  050B  3E30               	addlw	48
  2263  050C  120A  158A  2457  120A  118A  	fcall	_dat
  2264                           
  2265                           ;newmain.c: 267:         number %= 10 ;
  2266  0511  300A               	movlw	10
  2267  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0514  00B6               	movwf	___awmod@divisor
  2270  0515  3000               	movlw	0
  2271  0516  00B7               	movwf	___awmod@divisor+1
  2272  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0519  086B               	movf	(show_num@number+1)^(0+128),w
  2275  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2276  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2277  051C  00B9               	movwf	___awmod@dividend+1
  2278  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2279  051E  1303               	bcf	3,6	;RP1=0, select bank1
  2280  051F  086A               	movf	show_num@number^(0+128),w
  2281  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0522  00B8               	movwf	___awmod@dividend
  2284  0523  120A  158A  24EC  120A  118A  	fcall	___awmod
  2285  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2287  052A  0837               	movf	?___awmod+1,w
  2288  052B  1683               	bsf	3,5	;RP0=1, select bank1
  2289  052C  1303               	bcf	3,6	;RP1=0, select bank1
  2290  052D  00EB               	movwf	(show_num@number+1)^(0+128)
  2291  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2292  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0530  0836               	movf	?___awmod,w
  2294  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0533  00EA               	movwf	show_num@number^(0+128)
  2297                           
  2298                           ;newmain.c: 268:         dat( ( number/1 + '0' ) );
  2299  0534  086A               	movf	show_num@number^(0+128),w
  2300  0535  3E30               	addlw	48
  2301  0536  120A  158A  2457  120A  118A  	fcall	_dat
  2302                           
  2303                           ;newmain.c: 270:         dat(' ');
  2304  053B  3020               	movlw	32
  2305  053C  120A  158A  2457   	fcall	_dat
  2306                           
  2307                           ;newmain.c: 271:     }
  2308  053F  0008               	return
  2309  0540                     l3195:	
  2310  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2312  0542  086B               	movf	(show_num@number+1)^(0+128),w
  2313  0543  3A80               	xorlw	128
  2314  0544  00FF               	movwf	127
  2315  0545  3080               	movlw	128
  2316  0546  027F               	subwf	127,w
  2317  0547  1D03               	skipz
  2318  0548  2D4B               	goto	u4935
  2319  0549  3064               	movlw	100
  2320  054A  026A               	subwf	show_num@number^(0+128),w
  2321  054B                     u4935:	
  2322  054B  1803               	skipnc
  2323  054C  2DAF               	goto	l3207
  2324  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2325  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2326  054F  086B               	movf	(show_num@number+1)^(0+128),w
  2327  0550  3A80               	xorlw	128
  2328  0551  00FF               	movwf	127
  2329  0552  3080               	movlw	128
  2330  0553  027F               	subwf	127,w
  2331  0554  1D03               	skipz
  2332  0555  2D58               	goto	u4945
  2333  0556  300A               	movlw	10
  2334  0557  026A               	subwf	show_num@number^(0+128),w
  2335  0558                     u4945:	
  2336  0558  1C03               	skipc
  2337  0559  2DAF               	goto	l3207
  2338                           
  2339                           ;newmain.c: 273:         dat( ( number/10 + '0' ) );
  2340  055A  300A               	movlw	10
  2341  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2342  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2343  055D  00B6               	movwf	___awdiv@divisor
  2344  055E  3000               	movlw	0
  2345  055F  00B7               	movwf	___awdiv@divisor+1
  2346  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0562  086B               	movf	(show_num@number+1)^(0+128),w
  2349  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0565  00B9               	movwf	___awdiv@dividend+1
  2352  0566  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0567  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0568  086A               	movf	show_num@number^(0+128),w
  2355  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2356  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2357  056B  00B8               	movwf	___awdiv@dividend
  2358  056C  120A  158A  254C  120A  118A  	fcall	___awdiv
  2359  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0573  0836               	movf	?___awdiv,w
  2362  0574  3E30               	addlw	48
  2363  0575  120A  158A  2457  120A  118A  	fcall	_dat
  2364                           
  2365                           ;newmain.c: 274:         number %= 10 ;
  2366  057A  300A               	movlw	10
  2367  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2368  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2369  057D  00B6               	movwf	___awmod@divisor
  2370  057E  3000               	movlw	0
  2371  057F  00B7               	movwf	___awmod@divisor+1
  2372  0580  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0581  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0582  086B               	movf	(show_num@number+1)^(0+128),w
  2375  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0585  00B9               	movwf	___awmod@dividend+1
  2378  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0588  086A               	movf	show_num@number^(0+128),w
  2381  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2382  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2383  058B  00B8               	movwf	___awmod@dividend
  2384  058C  120A  158A  24EC  120A  118A  	fcall	___awmod
  2385  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0593  0837               	movf	?___awmod+1,w
  2388  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0596  00EB               	movwf	(show_num@number+1)^(0+128)
  2391  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0599  0836               	movf	?___awmod,w
  2394  059A  1683               	bsf	3,5	;RP0=1, select bank1
  2395  059B  1303               	bcf	3,6	;RP1=0, select bank1
  2396  059C  00EA               	movwf	show_num@number^(0+128)
  2397                           
  2398                           ;newmain.c: 275:         dat( ( number/1 + '0' ) );
  2399  059D  086A               	movf	show_num@number^(0+128),w
  2400  059E  3E30               	addlw	48
  2401  059F  120A  158A  2457  120A  118A  	fcall	_dat
  2402                           
  2403                           ;newmain.c: 277:         dat(' ');
  2404  05A4  3020               	movlw	32
  2405  05A5  120A  158A  2457  120A  118A  	fcall	_dat
  2406                           
  2407                           ;newmain.c: 278:         dat(' ');
  2408  05AA  3020               	movlw	32
  2409  05AB  120A  158A  2457   	fcall	_dat
  2410                           
  2411                           ;newmain.c: 279:     }
  2412  05AE  0008               	return
  2413  05AF                     l3207:	
  2414  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  2415  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  2416  05B1  086B               	movf	(show_num@number+1)^(0+128),w
  2417  05B2  3A80               	xorlw	128
  2418  05B3  00FF               	movwf	127
  2419  05B4  3080               	movlw	128
  2420  05B5  027F               	subwf	127,w
  2421  05B6  1D03               	skipz
  2422  05B7  2DBA               	goto	u4955
  2423  05B8  300A               	movlw	10
  2424  05B9  026A               	subwf	show_num@number^(0+128),w
  2425  05BA                     u4955:	
  2426  05BA  1803               	skipnc
  2427  05BB  2DE3               	goto	l3221
  2428  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2429  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2430  05BE  086B               	movf	(show_num@number+1)^(0+128),w
  2431  05BF  3A80               	xorlw	128
  2432  05C0  00FF               	movwf	127
  2433  05C1  3080               	movlw	128
  2434  05C2  027F               	subwf	127,w
  2435  05C3  1D03               	skipz
  2436  05C4  2DC7               	goto	u4965
  2437  05C5  3001               	movlw	1
  2438  05C6  026A               	subwf	show_num@number^(0+128),w
  2439  05C7                     u4965:	
  2440  05C7  1C03               	skipc
  2441  05C8  2DE3               	goto	l3221
  2442                           
  2443                           ;newmain.c: 281:         dat( ( number/1 + '0' ) );
  2444  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2445  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2446  05CB  086A               	movf	show_num@number^(0+128),w
  2447  05CC  3E30               	addlw	48
  2448  05CD  120A  158A  2457  120A  118A  	fcall	_dat
  2449                           
  2450                           ;newmain.c: 283:         dat(' ');
  2451  05D2  3020               	movlw	32
  2452  05D3  120A  158A  2457  120A  118A  	fcall	_dat
  2453                           
  2454                           ;newmain.c: 284:         dat(' ');
  2455  05D8  3020               	movlw	32
  2456  05D9  120A  158A  2457  120A  118A  	fcall	_dat
  2457                           
  2458                           ;newmain.c: 285:         dat(' ');
  2459  05DE  3020               	movlw	32
  2460  05DF  120A  158A  2457   	fcall	_dat
  2461                           
  2462                           ;newmain.c: 286:     }
  2463  05E2  0008               	return
  2464  05E3                     l3221:	
  2465  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2466  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2467  05E5  086A               	movf	show_num@number^(0+128),w
  2468  05E6  046B               	iorwf	(show_num@number+1)^(0+128),w
  2469  05E7  1D03               	btfss	3,2
  2470  05E8  0008               	return
  2471                           
  2472                           ;newmain.c: 288:         dat('0');
  2473  05E9  3030               	movlw	48
  2474  05EA  120A  158A  2457  120A  118A  	fcall	_dat
  2475                           
  2476                           ;newmain.c: 289:         dat(' ');
  2477  05EF  3020               	movlw	32
  2478  05F0  120A  158A  2457  120A  118A  	fcall	_dat
  2479                           
  2480                           ;newmain.c: 290:         dat(' ');
  2481  05F5  3020               	movlw	32
  2482  05F6  120A  158A  2457  120A  118A  	fcall	_dat
  2483                           
  2484                           ;newmain.c: 291:         dat(' ');
  2485  05FB  3020               	movlw	32
  2486  05FC  120A  158A  2457   	fcall	_dat
  2487  05FF  0008               	return
  2488  0600                     __end_of_show_num:	
  2489                           
  2490                           	psect	text2
  2491  0CEC                     __ptext2:	
  2492 ;; *************** function ___awmod *****************
  2493 ;; Defined at:
  2494 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  divisor         2   22[BANK0 ] int 
  2497 ;;  dividend        2   24[BANK0 ] int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  sign            1    1[BANK1 ] unsigned char 
  2500 ;;  counter         1    0[BANK1 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  2   22[BANK0 ] int 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       4       0       0       0
  2511 ;;      Locals:         0       0       2       0       0
  2512 ;;      Temps:          0       1       0       0       0
  2513 ;;      Totals:         0       5       2       0       0
  2514 ;;Total ram usage:        7 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_show_num
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function ___awmod
  2526  0CEC                     ___awmod:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2530  0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0CED  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0CEE  01E7               	clrf	___awmod@sign^(0+128)
  2533  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0CF1  1FB9               	btfss	___awmod@dividend+1,7
  2536  0CF2  2CFC               	goto	l3037
  2537  0CF3  09B8               	comf	___awmod@dividend,f
  2538  0CF4  09B9               	comf	___awmod@dividend+1,f
  2539  0CF5  0AB8               	incf	___awmod@dividend,f
  2540  0CF6  1903               	skipnz
  2541  0CF7  0AB9               	incf	___awmod@dividend+1,f
  2542  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0CFA  01E7               	clrf	___awmod@sign^(0+128)
  2545  0CFB  0AE7               	incf	___awmod@sign^(0+128),f
  2546  0CFC                     l3037:	
  2547  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0CFD  1FB7               	btfss	___awmod@divisor+1,7
  2549  0CFE  2D04               	goto	l3041
  2550  0CFF  09B6               	comf	___awmod@divisor,f
  2551  0D00  09B7               	comf	___awmod@divisor+1,f
  2552  0D01  0AB6               	incf	___awmod@divisor,f
  2553  0D02  1903               	skipnz
  2554  0D03  0AB7               	incf	___awmod@divisor+1,f
  2555  0D04                     l3041:	
  2556  0D04  0836               	movf	___awmod@divisor,w
  2557  0D05  0437               	iorwf	___awmod@divisor+1,w
  2558  0D06  1903               	btfsc	3,2
  2559  0D07  2D3A               	goto	l3059
  2560  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  2562  0D0A  01E6               	clrf	___awmod@counter^(0+128)
  2563  0D0B  0AE6               	incf	___awmod@counter^(0+128),f
  2564  0D0C                     l3049:	
  2565  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0D0E  1BB7               	btfsc	___awmod@divisor+1,7
  2568  0D0F  2D1E               	goto	l3051
  2569  0D10  3001               	movlw	1
  2570  0D11                     u4385:	
  2571  0D11  1003               	clrc
  2572  0D12  0DB6               	rlf	___awmod@divisor,f
  2573  0D13  0DB7               	rlf	___awmod@divisor+1,f
  2574  0D14  3EFF               	addlw	-1
  2575  0D15  1D03               	skipz
  2576  0D16  2D11               	goto	u4385
  2577  0D17  3001               	movlw	1
  2578  0D18  00BA               	movwf	??___awmod
  2579  0D19  083A               	movf	??___awmod,w
  2580  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0D1C  07E6               	addwf	___awmod@counter^(0+128),f
  2583  0D1D  2D0C               	goto	l3049
  2584  0D1E                     l3051:	
  2585  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0D1F  0837               	movf	___awmod@divisor+1,w
  2587  0D20  0239               	subwf	___awmod@dividend+1,w
  2588  0D21  1D03               	skipz
  2589  0D22  2D25               	goto	u4405
  2590  0D23  0836               	movf	___awmod@divisor,w
  2591  0D24  0238               	subwf	___awmod@dividend,w
  2592  0D25                     u4405:	
  2593  0D25  1C03               	skipc
  2594  0D26  2D2D               	goto	l3055
  2595  0D27  0836               	movf	___awmod@divisor,w
  2596  0D28  02B8               	subwf	___awmod@dividend,f
  2597  0D29  0837               	movf	___awmod@divisor+1,w
  2598  0D2A  1C03               	skipc
  2599  0D2B  03B9               	decf	___awmod@dividend+1,f
  2600  0D2C  02B9               	subwf	___awmod@dividend+1,f
  2601  0D2D                     l3055:	
  2602  0D2D  3001               	movlw	1
  2603  0D2E                     u4415:	
  2604  0D2E  1003               	clrc
  2605  0D2F  0CB7               	rrf	___awmod@divisor+1,f
  2606  0D30  0CB6               	rrf	___awmod@divisor,f
  2607  0D31  3EFF               	addlw	-1
  2608  0D32  1D03               	skipz
  2609  0D33  2D2E               	goto	u4415
  2610  0D34  3001               	movlw	1
  2611  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0D37  02E6               	subwf	___awmod@counter^(0+128),f
  2614  0D38  1D03               	btfss	3,2
  2615  0D39  2D1E               	goto	l3051
  2616  0D3A                     l3059:	
  2617  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0D3C  0867               	movf	___awmod@sign^(0+128),w
  2620  0D3D  1903               	btfsc	3,2
  2621  0D3E  2D46               	goto	l3063
  2622  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0D41  09B8               	comf	___awmod@dividend,f
  2625  0D42  09B9               	comf	___awmod@dividend+1,f
  2626  0D43  0AB8               	incf	___awmod@dividend,f
  2627  0D44  1903               	skipnz
  2628  0D45  0AB9               	incf	___awmod@dividend+1,f
  2629  0D46                     l3063:	
  2630  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0D47  0839               	movf	___awmod@dividend+1,w
  2632  0D48  00B7               	movwf	?___awmod+1
  2633  0D49  0838               	movf	___awmod@dividend,w
  2634  0D4A  00B6               	movwf	?___awmod
  2635  0D4B  0008               	return
  2636  0D4C                     __end_of___awmod:	
  2637                           
  2638                           	psect	text3
  2639  0D4C                     __ptext3:	
  2640 ;; *************** function ___awdiv *****************
  2641 ;; Defined at:
  2642 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  divisor         2   22[BANK0 ] int 
  2645 ;;  dividend        2   24[BANK0 ] int 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  quotient        2    2[BANK1 ] int 
  2648 ;;  sign            1    1[BANK1 ] unsigned char 
  2649 ;;  counter         1    0[BANK1 ] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2   22[BANK0 ] int 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       4       0       0       0
  2660 ;;      Locals:         0       0       4       0       0
  2661 ;;      Temps:          0       1       0       0       0
  2662 ;;      Totals:         0       5       4       0       0
  2663 ;;Total ram usage:        9 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_show_num
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function ___awdiv
  2675  0D4C                     ___awdiv:	
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2679  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0D4E  01E7               	clrf	___awdiv@sign^(0+128)
  2682  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0D51  1FB7               	btfss	___awdiv@divisor+1,7
  2685  0D52  2D5C               	goto	l2993
  2686  0D53  09B6               	comf	___awdiv@divisor,f
  2687  0D54  09B7               	comf	___awdiv@divisor+1,f
  2688  0D55  0AB6               	incf	___awdiv@divisor,f
  2689  0D56  1903               	skipnz
  2690  0D57  0AB7               	incf	___awdiv@divisor+1,f
  2691  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0D5A  01E7               	clrf	___awdiv@sign^(0+128)
  2694  0D5B  0AE7               	incf	___awdiv@sign^(0+128),f
  2695  0D5C                     l2993:	
  2696  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0D5D  1FB9               	btfss	___awdiv@dividend+1,7
  2698  0D5E  2D6A               	goto	l2999
  2699  0D5F  09B8               	comf	___awdiv@dividend,f
  2700  0D60  09B9               	comf	___awdiv@dividend+1,f
  2701  0D61  0AB8               	incf	___awdiv@dividend,f
  2702  0D62  1903               	skipnz
  2703  0D63  0AB9               	incf	___awdiv@dividend+1,f
  2704  0D64  3001               	movlw	1
  2705  0D65  00BA               	movwf	??___awdiv
  2706  0D66  083A               	movf	??___awdiv,w
  2707  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0D69  06E7               	xorwf	___awdiv@sign^(0+128),f
  2710  0D6A                     l2999:	
  2711  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  2713  0D6C  01E8               	clrf	___awdiv@quotient^(0+128)
  2714  0D6D  01E9               	clrf	(___awdiv@quotient+1)^(0+128)
  2715  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0D70  0836               	movf	___awdiv@divisor,w
  2718  0D71  0437               	iorwf	___awdiv@divisor+1,w
  2719  0D72  1903               	btfsc	3,2
  2720  0D73  2DB4               	goto	l3021
  2721  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0D76  01E6               	clrf	___awdiv@counter^(0+128)
  2724  0D77  0AE6               	incf	___awdiv@counter^(0+128),f
  2725  0D78                     l3009:	
  2726  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0D7A  1BB7               	btfsc	___awdiv@divisor+1,7
  2729  0D7B  2D8A               	goto	l3011
  2730  0D7C  3001               	movlw	1
  2731  0D7D                     u4285:	
  2732  0D7D  1003               	clrc
  2733  0D7E  0DB6               	rlf	___awdiv@divisor,f
  2734  0D7F  0DB7               	rlf	___awdiv@divisor+1,f
  2735  0D80  3EFF               	addlw	-1
  2736  0D81  1D03               	skipz
  2737  0D82  2D7D               	goto	u4285
  2738  0D83  3001               	movlw	1
  2739  0D84  00BA               	movwf	??___awdiv
  2740  0D85  083A               	movf	??___awdiv,w
  2741  0D86  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0D87  1303               	bcf	3,6	;RP1=0, select bank1
  2743  0D88  07E6               	addwf	___awdiv@counter^(0+128),f
  2744  0D89  2D78               	goto	l3009
  2745  0D8A                     l3011:	
  2746  0D8A  3001               	movlw	1
  2747  0D8B  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0D8C  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0D8D                     u4305:	
  2750  0D8D  1003               	clrc
  2751  0D8E  0DE8               	rlf	___awdiv@quotient^(0+128),f
  2752  0D8F  0DE9               	rlf	(___awdiv@quotient+1)^(0+128),f
  2753  0D90  3EFF               	addlw	-1
  2754  0D91  1D03               	skipz
  2755  0D92  2D8D               	goto	u4305
  2756  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0D95  0837               	movf	___awdiv@divisor+1,w
  2759  0D96  0239               	subwf	___awdiv@dividend+1,w
  2760  0D97  1D03               	skipz
  2761  0D98  2D9B               	goto	u4315
  2762  0D99  0836               	movf	___awdiv@divisor,w
  2763  0D9A  0238               	subwf	___awdiv@dividend,w
  2764  0D9B                     u4315:	
  2765  0D9B  1C03               	skipc
  2766  0D9C  2DA6               	goto	l3017
  2767  0D9D  0836               	movf	___awdiv@divisor,w
  2768  0D9E  02B8               	subwf	___awdiv@dividend,f
  2769  0D9F  0837               	movf	___awdiv@divisor+1,w
  2770  0DA0  1C03               	skipc
  2771  0DA1  03B9               	decf	___awdiv@dividend+1,f
  2772  0DA2  02B9               	subwf	___awdiv@dividend+1,f
  2773  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0DA4  1303               	bcf	3,6	;RP1=0, select bank1
  2775  0DA5  1468               	bsf	___awdiv@quotient^(0+128),0
  2776  0DA6                     l3017:	
  2777  0DA6  3001               	movlw	1
  2778  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0DA8                     u4325:	
  2780  0DA8  1003               	clrc
  2781  0DA9  0CB7               	rrf	___awdiv@divisor+1,f
  2782  0DAA  0CB6               	rrf	___awdiv@divisor,f
  2783  0DAB  3EFF               	addlw	-1
  2784  0DAC  1D03               	skipz
  2785  0DAD  2DA8               	goto	u4325
  2786  0DAE  3001               	movlw	1
  2787  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0DB1  02E6               	subwf	___awdiv@counter^(0+128),f
  2790  0DB2  1D03               	btfss	3,2
  2791  0DB3  2D8A               	goto	l3011
  2792  0DB4                     l3021:	
  2793  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0DB6  0867               	movf	___awdiv@sign^(0+128),w
  2796  0DB7  1903               	btfsc	3,2
  2797  0DB8  2DBE               	goto	l3025
  2798  0DB9  09E8               	comf	___awdiv@quotient^(0+128),f
  2799  0DBA  09E9               	comf	(___awdiv@quotient+1)^(0+128),f
  2800  0DBB  0AE8               	incf	___awdiv@quotient^(0+128),f
  2801  0DBC  1903               	skipnz
  2802  0DBD  0AE9               	incf	(___awdiv@quotient+1)^(0+128),f
  2803  0DBE                     l3025:	
  2804  0DBE  0869               	movf	(___awdiv@quotient+1)^(0+128),w
  2805  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0DC1  00B7               	movwf	?___awdiv+1
  2808  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0DC4  0868               	movf	___awdiv@quotient^(0+128),w
  2811  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0DC7  00B6               	movwf	?___awdiv
  2814  0DC8  0008               	return
  2815  0DC9                     __end_of___awdiv:	
  2816                           
  2817                           	psect	text4
  2818  0B89                     __ptext4:	
  2819 ;; *************** function _show *****************
  2820 ;; Defined at:
  2821 ;;		line 191 in file "newmain.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  s               1    wreg     PTR unsigned char 
  2824 ;;		 -> STR_17(5), STR_16(5), STR_15(4), STR_14(12), 
  2825 ;;		 -> STR_13(11), STR_12(17), STR_11(8), STR_10(8), 
  2826 ;;		 -> STR_9(12), STR_8(19), STR_7(13), STR_6(12), 
  2827 ;;		 -> STR_5(19), STR_4(17), STR_3(17), STR_2(17), 
  2828 ;;		 -> STR_1(17), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  s               1    0[BANK1 ] PTR unsigned char 
  2831 ;;		 -> STR_17(5), STR_16(5), STR_15(4), STR_14(12), 
  2832 ;;		 -> STR_13(11), STR_12(17), STR_11(8), STR_10(8), 
  2833 ;;		 -> STR_9(12), STR_8(19), STR_7(13), STR_6(12), 
  2834 ;;		 -> STR_5(19), STR_4(17), STR_3(17), STR_2(17), 
  2835 ;;		 -> STR_1(17), 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       0       0       0       0
  2846 ;;      Locals:         0       0       1       0       0
  2847 ;;      Temps:          0       1       0       0       0
  2848 ;;      Totals:         0       1       1       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    4
  2852 ;; This function calls:
  2853 ;;		_dat
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _show
  2861  0B89                     _show:	
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2865                           ;show@s stored from wreg
  2866  0B89  1683               	bsf	3,5	;RP0=1, select bank1
  2867  0B8A  1303               	bcf	3,6	;RP1=0, select bank1
  2868  0B8B  00E6               	movwf	show@s^(0+128)
  2869  0B8C                     l3087:	
  2870                           ;newmain.c: 191: void show(unsigned char *s);newmain.c: 192: {;newmain.c: 193:     while
      +                          (*s) {
  2871                           
  2872                           
  2873                           ;newmain.c: 193:     while(*s) {
  2874  0B8C  0866               	movf	show@s^(0+128),w
  2875  0B8D  0084               	movwf	4
  2876  0B8E  120A  118A  2600  120A  158A  	fcall	stringdir
  2877  0B93  3A00               	xorlw	0
  2878  0B94  1903               	btfsc	3,2
  2879  0B95  0008               	return
  2880                           
  2881                           ;newmain.c: 194:         dat(*s++);
  2882  0B96  0866               	movf	show@s^(0+128),w
  2883  0B97  0084               	movwf	4
  2884  0B98  120A  118A  2600  120A  158A  	fcall	stringdir
  2885  0B9D  120A  158A  2457  120A  158A  	fcall	_dat
  2886  0BA2  3001               	movlw	1
  2887  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0BA5  00BB               	movwf	??_show
  2890  0BA6  083B               	movf	??_show,w
  2891  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  2892  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  2893  0BA9  07E6               	addwf	show@s^(0+128),f
  2894  0BAA  2B8C               	goto	l3087
  2895  0BAB                     __end_of_show:	
  2896                           
  2897                           	psect	text5
  2898  0C57                     __ptext5:	
  2899 ;; *************** function _dat *****************
  2900 ;; Defined at:
  2901 ;;		line 174 in file "newmain.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  b               1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  b               1   26[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         0       1       0       0       0
  2917 ;;      Temps:          0       2       0       0       0
  2918 ;;      Totals:         0       3       0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    3
  2922 ;; This function calls:
  2923 ;;		_lcd_delay
  2924 ;; This function is called by:
  2925 ;;		_show
  2926 ;;		_show_num
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _dat
  2933  0C57                     _dat:	
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _dat: [wreg+status,2+status,0+pclath+cstack]
  2937                           ;dat@b stored from wreg
  2938  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0C59  00BA               	movwf	dat@b
  2941                           
  2942                           ;newmain.c: 174: void dat(unsigned char b);newmain.c: 175: {;newmain.c: 176:     RD2=1;
  2943  0C5A  1508               	bsf	8,2	;volatile
  2944                           
  2945                           ;newmain.c: 177:     PORTD&=0x0F;
  2946  0C5B  300F               	movlw	15
  2947  0C5C  00B8               	movwf	??_dat
  2948  0C5D  0838               	movf	??_dat,w
  2949  0C5E  0588               	andwf	8,f	;volatile
  2950                           
  2951                           ;newmain.c: 178:     PORTD|=(b&0xf0);
  2952  0C5F  083A               	movf	dat@b,w
  2953  0C60  39F0               	andlw	240
  2954  0C61  00B8               	movwf	??_dat
  2955  0C62  0838               	movf	??_dat,w
  2956  0C63  0488               	iorwf	8,f	;volatile
  2957                           
  2958                           ;newmain.c: 179:     RD3=1;
  2959  0C64  1588               	bsf	8,3	;volatile
  2960                           
  2961                           ;newmain.c: 180:     lcd_delay();
  2962  0C65  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  2963                           
  2964                           ;newmain.c: 181:     RD3=0;
  2965  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0C6C  1188               	bcf	8,3	;volatile
  2968                           
  2969                           ;newmain.c: 182:     lcd_delay();
  2970  0C6D  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  2971                           
  2972                           ;newmain.c: 183:     PORTD&=0x0f;
  2973  0C72  300F               	movlw	15
  2974  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0C75  00B8               	movwf	??_dat
  2977  0C76  0838               	movf	??_dat,w
  2978  0C77  0588               	andwf	8,f	;volatile
  2979                           
  2980                           ;newmain.c: 184:     PORTD|=(b<<4&0xf0);
  2981  0C78  083A               	movf	dat@b,w
  2982  0C79  00B8               	movwf	??_dat
  2983  0C7A  3003               	movlw	3
  2984  0C7B                     u4245:	
  2985  0C7B  1003               	clrc
  2986  0C7C  0DB8               	rlf	??_dat,f
  2987  0C7D  3EFF               	addlw	-1
  2988  0C7E  1D03               	skipz
  2989  0C7F  2C7B               	goto	u4245
  2990  0C80  1003               	clrc
  2991  0C81  0D38               	rlf	??_dat,w
  2992  0C82  39F0               	andlw	240
  2993  0C83  00B9               	movwf	??_dat+1
  2994  0C84  0839               	movf	??_dat+1,w
  2995  0C85  0488               	iorwf	8,f	;volatile
  2996                           
  2997                           ;newmain.c: 185:     RD3=1;
  2998  0C86  1588               	bsf	8,3	;volatile
  2999                           
  3000                           ;newmain.c: 186:     lcd_delay();
  3001  0C87  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  3002                           
  3003                           ;newmain.c: 187:     RD3=0;
  3004  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0C8E  1188               	bcf	8,3	;volatile
  3007                           
  3008                           ;newmain.c: 188:     lcd_delay();
  3009  0C8F  120A  118A  27EE   	fcall	_lcd_delay
  3010  0C92  0008               	return
  3011  0C93                     __end_of_dat:	
  3012                           
  3013                           	psect	text6
  3014  0B6C                     __ptext6:	
  3015 ;; *************** function _lcd_init *****************
  3016 ;; Defined at:
  3017 ;;		line 148 in file "newmain.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    4
  3038 ;; This function calls:
  3039 ;;		_cmd
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _lcd_init
  3047  0B6C                     _lcd_init:	
  3048                           
  3049                           ;newmain.c: 150:     cmd(0x02);
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3053  0B6C  3002               	movlw	2
  3054  0B6D  120A  158A  241B  120A  158A  	fcall	_cmd
  3055                           
  3056                           ;newmain.c: 151:     cmd(0x28);
  3057  0B72  3028               	movlw	40
  3058  0B73  120A  158A  241B  120A  158A  	fcall	_cmd
  3059                           
  3060                           ;newmain.c: 152:     cmd(0x0e);
  3061  0B78  300E               	movlw	14
  3062  0B79  120A  158A  241B  120A  158A  	fcall	_cmd
  3063                           
  3064                           ;newmain.c: 153:     cmd(0x06);
  3065  0B7E  3006               	movlw	6
  3066  0B7F  120A  158A  241B  120A  158A  	fcall	_cmd
  3067                           
  3068                           ;newmain.c: 154:     cmd(0x80);
  3069  0B84  3080               	movlw	128
  3070  0B85  120A  158A  241B   	fcall	_cmd
  3071  0B88  0008               	return
  3072  0B89                     __end_of_lcd_init:	
  3073                           
  3074                           	psect	text7
  3075  0C1B                     __ptext7:	
  3076 ;; *************** function _cmd *****************
  3077 ;; Defined at:
  3078 ;;		line 157 in file "newmain.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  a               1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  a               1   26[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         0       1       0       0       0
  3094 ;;      Temps:          0       2       0       0       0
  3095 ;;      Totals:         0       3       0       0       0
  3096 ;;Total ram usage:        3 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    3
  3099 ;; This function calls:
  3100 ;;		_lcd_delay
  3101 ;; This function is called by:
  3102 ;;		_lcd_init
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _cmd
  3109  0C1B                     _cmd:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
  3113                           ;cmd@a stored from wreg
  3114  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0C1D  00BA               	movwf	cmd@a
  3117                           
  3118                           ;newmain.c: 157: void cmd(unsigned char a);newmain.c: 158: {;newmain.c: 159:     RD2=0;
  3119  0C1E  1108               	bcf	8,2	;volatile
  3120                           
  3121                           ;newmain.c: 160:     PORTD&=0x0F;
  3122  0C1F  300F               	movlw	15
  3123  0C20  00B8               	movwf	??_cmd
  3124  0C21  0838               	movf	??_cmd,w
  3125  0C22  0588               	andwf	8,f	;volatile
  3126                           
  3127                           ;newmain.c: 161:     PORTD|=(a&0xf0);
  3128  0C23  083A               	movf	cmd@a,w
  3129  0C24  39F0               	andlw	240
  3130  0C25  00B8               	movwf	??_cmd
  3131  0C26  0838               	movf	??_cmd,w
  3132  0C27  0488               	iorwf	8,f	;volatile
  3133                           
  3134                           ;newmain.c: 162:     RD3=1;
  3135  0C28  1588               	bsf	8,3	;volatile
  3136                           
  3137                           ;newmain.c: 163:     lcd_delay();
  3138  0C29  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  3139                           
  3140                           ;newmain.c: 164:     RD3=0;
  3141  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0C30  1188               	bcf	8,3	;volatile
  3144                           
  3145                           ;newmain.c: 165:     lcd_delay();
  3146  0C31  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  3147                           
  3148                           ;newmain.c: 166:     PORTD&=0x0f;
  3149  0C36  300F               	movlw	15
  3150  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0C39  00B8               	movwf	??_cmd
  3153  0C3A  0838               	movf	??_cmd,w
  3154  0C3B  0588               	andwf	8,f	;volatile
  3155                           
  3156                           ;newmain.c: 167:     PORTD|=(a<<4&0xf0);
  3157  0C3C  083A               	movf	cmd@a,w
  3158  0C3D  00B8               	movwf	??_cmd
  3159  0C3E  3003               	movlw	3
  3160  0C3F                     u4235:	
  3161  0C3F  1003               	clrc
  3162  0C40  0DB8               	rlf	??_cmd,f
  3163  0C41  3EFF               	addlw	-1
  3164  0C42  1D03               	skipz
  3165  0C43  2C3F               	goto	u4235
  3166  0C44  1003               	clrc
  3167  0C45  0D38               	rlf	??_cmd,w
  3168  0C46  39F0               	andlw	240
  3169  0C47  00B9               	movwf	??_cmd+1
  3170  0C48  0839               	movf	??_cmd+1,w
  3171  0C49  0488               	iorwf	8,f	;volatile
  3172                           
  3173                           ;newmain.c: 168:     RD3=1;
  3174  0C4A  1588               	bsf	8,3	;volatile
  3175                           
  3176                           ;newmain.c: 169:     lcd_delay();
  3177  0C4B  120A  118A  27EE  120A  158A  	fcall	_lcd_delay
  3178                           
  3179                           ;newmain.c: 170:     RD3=0;
  3180  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0C52  1188               	bcf	8,3	;volatile
  3183                           
  3184                           ;newmain.c: 171:     lcd_delay();
  3185  0C53  120A  118A  27EE   	fcall	_lcd_delay
  3186  0C56  0008               	return
  3187  0C57                     __end_of_cmd:	
  3188                           
  3189                           	psect	text8
  3190  07EE                     __ptext8:	
  3191 ;; *************** function _lcd_delay *****************
  3192 ;; Defined at:
  3193 ;;		line 198 in file "newmain.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  lcd_delay       2   22[BANK0 ] unsigned int 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       2       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       2       0       0       0
  3211 ;;Total ram usage:        2 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    2
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_cmd
  3218 ;;		_dat
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _lcd_delay
  3224  07EE                     _lcd_delay:	
  3225                           
  3226                           ;newmain.c: 200:     unsigned int lcd_delay;;newmain.c: 201:     for(lcd_delay=0;lcd_del
      +                          ay<=1000;lcd_delay++);
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _lcd_delay: [wreg+status,2]
  3230  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3231  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3232  07F0  01B6               	clrf	lcd_delay@lcd_delay
  3233  07F1  01B7               	clrf	lcd_delay@lcd_delay+1
  3234  07F2                     l2943:	
  3235  07F2  3001               	movlw	1
  3236  07F3  07B6               	addwf	lcd_delay@lcd_delay,f
  3237  07F4  1803               	skipnc
  3238  07F5  0AB7               	incf	lcd_delay@lcd_delay+1,f
  3239  07F6  3000               	movlw	0
  3240  07F7  07B7               	addwf	lcd_delay@lcd_delay+1,f
  3241  07F8  3003               	movlw	3
  3242  07F9  0237               	subwf	lcd_delay@lcd_delay+1,w
  3243  07FA  30E9               	movlw	233
  3244  07FB  1903               	skipnz
  3245  07FC  0236               	subwf	lcd_delay@lcd_delay,w
  3246  07FD  1803               	btfsc	3,0
  3247  07FE  0008               	return
  3248  07FF  2FF2               	goto	l2943
  3249  0800                     __end_of_lcd_delay:	
  3250                           
  3251                           	psect	text9
  3252  0B22                     __ptext9:	
  3253 ;; *************** function _keyinit *****************
  3254 ;; Defined at:
  3255 ;;		line 204 in file "newmain.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3269 ;;      Params:         0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0
  3271 ;;      Temps:          0       1       0       0       0
  3272 ;;      Totals:         0       1       0       0       0
  3273 ;;Total ram usage:        1 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _keyinit
  3285  0B22                     _keyinit:	
  3286                           
  3287                           ;newmain.c: 206:     TRISB=0XF0;
  3288                           
  3289                           ;incstack = 0
  3290                           ; Regs used in _keyinit: [wreg+status,2+status,0]
  3291  0B22  30F0               	movlw	240
  3292  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  3294  0B25  0086               	movwf	6	;volatile
  3295                           
  3296                           ;newmain.c: 207:     OPTION_REG&=0X7F;
  3297  0B26  307F               	movlw	127
  3298  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0B29  00B6               	movwf	??_keyinit
  3301  0B2A  0836               	movf	??_keyinit,w
  3302  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0B2C  1303               	bcf	3,6	;RP1=0, select bank1
  3304  0B2D  0581               	andwf	1,f	;volatile
  3305  0B2E  0008               	return
  3306  0B2F                     __end_of_keyinit:	
  3307                           
  3308                           	psect	text10
  3309  06CF                     __ptext10:	
  3310 ;; *************** function _key *****************
  3311 ;; Defined at:
  3312 ;;		line 210 in file "newmain.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  no_push         1   25[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      unsigned char 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       1       0       0       0
  3328 ;;      Temps:          0       3       0       0       0
  3329 ;;      Totals:         0       4       0       0       0
  3330 ;;Total ram usage:        4 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _key
  3342  06CF                     _key:	
  3343                           
  3344                           ;newmain.c: 212:     char no_push = 0 ;
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0]
  3348  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3349  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3350  06D1  01B9               	clrf	key@no_push
  3351                           
  3352                           ;newmain.c: 213:     PORTB=0X00;
  3353  06D2  0186               	clrf	6	;volatile
  3354  06D3                     l146:	
  3355                           ;newmain.c: 238:     }
  3356                           
  3357                           ;newmain.c: 215:     while(!RB4||!RB5||!RB6||!RB7) {
  3358                           
  3359                           
  3360                           ;newmain.c: 215:     while(!RB4||!RB5||!RB6||!RB7) {
  3361  06D3  1A06               	btfsc	6,4	;volatile
  3362  06D4  2F19               	goto	l3125
  3363  06D5                     l147:	
  3364                           
  3365                           ;newmain.c: 216:         no_push = 1 ;
  3366  06D5  01B9               	clrf	key@no_push
  3367  06D6  0AB9               	incf	key@no_push,f
  3368                           
  3369                           ;newmain.c: 217:         RB0=0;
  3370  06D7  1006               	bcf	6,0	;volatile
  3371                           
  3372                           ;newmain.c: 218:         RB1=RB2=RB3=1;
  3373  06D8  1586               	bsf	6,3	;volatile
  3374  06D9  1D86               	btfss	6,3	;volatile
  3375  06DA  2EDF               	goto	u4450
  3376  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  3377  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  3378  06DD  1506               	bsf	6,2	;volatile
  3379  06DE  2EE2               	goto	u4464
  3380  06DF                     u4450:	
  3381  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3382  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3383  06E1  1106               	bcf	6,2	;volatile
  3384  06E2                     u4464:	
  3385  06E2  1D06               	btfss	6,2	;volatile
  3386  06E3  2EE8               	goto	u4460
  3387  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3388  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3389  06E6  1486               	bsf	6,1	;volatile
  3390  06E7  2EEB               	goto	u4474
  3391  06E8                     u4460:	
  3392  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  3393  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  3394  06EA  1086               	bcf	6,1	;volatile
  3395  06EB                     u4474:	
  3396                           
  3397                           ;newmain.c: 219:         if(!RB4||!RB5||!RB6||!RB7) {
  3398  06EB  1A06               	btfsc	6,4	;volatile
  3399  06EC  1E86               	btfss	6,5	;volatile
  3400  06ED  2EF2               	goto	l3101
  3401  06EE  1F06               	btfss	6,6	;volatile
  3402  06EF  2EF2               	goto	l3101
  3403  06F0  1B86               	btfsc	6,7	;volatile
  3404  06F1  2EF4               	goto	l148
  3405  06F2                     l3101:	
  3406                           
  3407                           ;newmain.c: 220:             rowloc=0;
  3408  06F2  01CB               	clrf	_rowloc
  3409                           
  3410                           ;newmain.c: 221:             break;
  3411  06F3  2F1E               	goto	l151
  3412  06F4                     l148:	
  3413                           ;newmain.c: 222:         }
  3414                           
  3415                           
  3416                           ;newmain.c: 223:         RB1=0;RB0=1;
  3417  06F4  1086               	bcf	6,1	;volatile
  3418  06F5  1406               	bsf	6,0	;volatile
  3419                           
  3420                           ;newmain.c: 224:         if(!RB4||!RB5||!RB6||!RB7) {
  3421  06F6  1A06               	btfsc	6,4	;volatile
  3422  06F7  1E86               	btfss	6,5	;volatile
  3423  06F8  2EFD               	goto	l154
  3424  06F9  1F06               	btfss	6,6	;volatile
  3425  06FA  2EFD               	goto	l154
  3426  06FB  1B86               	btfsc	6,7	;volatile
  3427  06FC  2F00               	goto	l152
  3428  06FD                     l154:	
  3429                           
  3430                           ;newmain.c: 225:             rowloc=1;
  3431  06FD  01CB               	clrf	_rowloc
  3432  06FE  0ACB               	incf	_rowloc,f
  3433                           
  3434                           ;newmain.c: 226:             break;
  3435  06FF  2F1E               	goto	l151
  3436  0700                     l152:	
  3437                           ;newmain.c: 227:         }
  3438                           
  3439                           
  3440                           ;newmain.c: 228:         RB2=0;RB1=1;
  3441  0700  1106               	bcf	6,2	;volatile
  3442  0701  1486               	bsf	6,1	;volatile
  3443                           
  3444                           ;newmain.c: 229:         if(!RB4||!RB5||!RB6||!RB7) {
  3445  0702  1A06               	btfsc	6,4	;volatile
  3446  0703  1E86               	btfss	6,5	;volatile
  3447  0704  2F09               	goto	l3115
  3448  0705  1F06               	btfss	6,6	;volatile
  3449  0706  2F09               	goto	l3115
  3450  0707  1B86               	btfsc	6,7	;volatile
  3451  0708  2F0B               	goto	l155
  3452  0709                     l3115:	
  3453                           
  3454                           ;newmain.c: 230:             rowloc=2;
  3455  0709  3002               	movlw	2
  3456  070A  2F15               	goto	L1
  3457  070B                     l155:	
  3458                           ;newmain.c: 232:         }
  3459                           
  3460                           ;newmain.c: 231:             break;
  3461                           
  3462                           
  3463                           ;newmain.c: 233:         RB3=0; RB2=1;
  3464  070B  1186               	bcf	6,3	;volatile
  3465  070C  1506               	bsf	6,2	;volatile
  3466                           
  3467                           ;newmain.c: 234:         if(!RB4||!RB5||!RB6||!RB7){
  3468  070D  1A06               	btfsc	6,4	;volatile
  3469  070E  1E86               	btfss	6,5	;volatile
  3470  070F  2F14               	goto	l3123
  3471  0710  1F06               	btfss	6,6	;volatile
  3472  0711  2F14               	goto	l3123
  3473  0712  1B86               	btfsc	6,7	;volatile
  3474  0713  2ED3               	goto	l146
  3475  0714                     l3123:	
  3476                           
  3477                           ;newmain.c: 235:             rowloc=3;
  3478  0714  3003               	movlw	3
  3479  0715                     L1:	
  3480  0715  00B6               	movwf	??_key
  3481  0716  0836               	movf	??_key,w
  3482  0717  00CB               	movwf	_rowloc
  3483                           
  3484                           ;newmain.c: 236:             break;
  3485  0718  2F1E               	goto	l151
  3486  0719                     l3125:	
  3487  0719  1A86               	btfsc	6,5	;volatile
  3488  071A  1F06               	btfss	6,6	;volatile
  3489  071B  2ED5               	goto	l147
  3490  071C  1F86               	btfss	6,7	;volatile
  3491  071D  2ED5               	goto	l147
  3492  071E                     l151:	
  3493                           
  3494                           ;newmain.c: 239:     if(RB4==0&&RB5!=0&&RB6!=0&&RB7!=0)
  3495  071E  1E06               	btfss	6,4	;volatile
  3496  071F  1E86               	btfss	6,5	;volatile
  3497  0720  2F26               	goto	l161
  3498  0721  1B06               	btfsc	6,6	;volatile
  3499  0722  1F86               	btfss	6,7	;volatile
  3500  0723  2F26               	goto	l161
  3501                           
  3502                           ;newmain.c: 240:             colloc=0;
  3503  0724  01CA               	clrf	_colloc
  3504  0725  2F41               	goto	l168
  3505  0726                     l161:	
  3506                           ;newmain.c: 241:     else if(RB4!=0&&RB5==0&&RB6!=0&&RB7!=0)
  3507                           
  3508  0726  1A06               	btfsc	6,4	;volatile
  3509  0727  1A86               	btfsc	6,5	;volatile
  3510  0728  2F2F               	goto	l163
  3511  0729  1B06               	btfsc	6,6	;volatile
  3512  072A  1F86               	btfss	6,7	;volatile
  3513  072B  2F2F               	goto	l163
  3514                           
  3515                           ;newmain.c: 242:             colloc=1;
  3516  072C  01CA               	clrf	_colloc
  3517  072D  0ACA               	incf	_colloc,f
  3518  072E  2F41               	goto	l168
  3519  072F                     l163:	
  3520                           ;newmain.c: 243:     else if(RB4!=0&&RB5!=0&&RB6==0&&RB7!=0)
  3521                           
  3522  072F  1A06               	btfsc	6,4	;volatile
  3523  0730  1E86               	btfss	6,5	;volatile
  3524  0731  2F37               	goto	l165
  3525  0732  1F06               	btfss	6,6	;volatile
  3526  0733  1F86               	btfss	6,7	;volatile
  3527  0734  2F37               	goto	l165
  3528                           
  3529                           ;newmain.c: 244:             colloc=2;
  3530  0735  3002               	movlw	2
  3531  0736  2F3E               	goto	L2
  3532  0737                     l165:	
  3533                           ;newmain.c: 245:     else if(RB4!=0&&RB5!=0&&RB6!=0&&RB7==0)
  3534                           
  3535  0737  1A06               	btfsc	6,4	;volatile
  3536  0738  1E86               	btfss	6,5	;volatile
  3537  0739  2F41               	goto	l168
  3538  073A  1B06               	btfsc	6,6	;volatile
  3539  073B  1B86               	btfsc	6,7	;volatile
  3540  073C  2F41               	goto	l168
  3541                           
  3542                           ;newmain.c: 246:             colloc=3;
  3543  073D  3003               	movlw	3
  3544  073E                     L2:	
  3545  073E  00B6               	movwf	??_key
  3546  073F  0836               	movf	??_key,w
  3547  0740  00CA               	movwf	_colloc
  3548  0741                     l168:	
  3549  0741  1A06               	btfsc	6,4	;volatile
  3550  0742  1E86               	btfss	6,5	;volatile
  3551  0743  2F41               	goto	l168
  3552  0744  1B06               	btfsc	6,6	;volatile
  3553  0745  1F86               	btfss	6,7	;volatile
  3554  0746  2F41               	goto	l168
  3555                           
  3556                           ;newmain.c: 248:     if( no_push == 0 ) return 255 ;
  3557  0747  0839               	movf	key@no_push,w
  3558  0748  1D03               	btfss	3,2
  3559  0749  2F4C               	goto	l3175
  3560  074A  30FF               	movlw	255
  3561  074B  0008               	return
  3562  074C                     l3175:	
  3563                           
  3564                           ;newmain.c: 249:     return (keypad[rowloc][colloc]);
  3565  074C  084B               	movf	_rowloc,w
  3566  074D  00B6               	movwf	??_key
  3567  074E  3002               	movlw	2
  3568  074F                     u4895:	
  3569  074F  1003               	clrc
  3570  0750  0DB6               	rlf	??_key,f
  3571  0751  3EFF               	addlw	-1
  3572  0752  1D03               	skipz
  3573  0753  2F4F               	goto	u4895
  3574  0754  30A4               	movlw	(low (_keypad| (0+256)))& (0+255)
  3575  0755  0736               	addwf	??_key,w
  3576  0756  00B7               	movwf	??_key+1
  3577  0757  084A               	movf	_colloc,w
  3578  0758  0737               	addwf	??_key+1,w
  3579  0759  00B8               	movwf	??_key+2
  3580  075A  0838               	movf	??_key+2,w
  3581  075B  0084               	movwf	4
  3582  075C  1783               	bsf	3,7	;select IRP bank3
  3583  075D  0800               	movf	0,w
  3584  075E  0008               	return
  3585  075F                     __end_of_key:	
  3586                           
  3587                           	psect	text11
  3588  0BAB                     __ptext11:	
  3589 ;; *************** function ___wmul *****************
  3590 ;; Defined at:
  3591 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3594 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  product         2   26[BANK0 ] unsigned int 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  2   22[BANK0 ] unsigned int 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       4       0       0       0
  3607 ;;      Locals:         0       2       0       0       0
  3608 ;;      Temps:          0       0       0       0       0
  3609 ;;      Totals:         0       6       0       0       0
  3610 ;;Total ram usage:        6 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function ___wmul
  3622  0BAB                     ___wmul:	
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3626  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0BAD  01BA               	clrf	___wmul@product
  3629  0BAE  01BB               	clrf	___wmul@product+1
  3630  0BAF                     l3229:	
  3631  0BAF  1C36               	btfss	___wmul@multiplier,0
  3632  0BB0  2BB7               	goto	l365
  3633  0BB1  0838               	movf	___wmul@multiplicand,w
  3634  0BB2  07BA               	addwf	___wmul@product,f
  3635  0BB3  1803               	skipnc
  3636  0BB4  0ABB               	incf	___wmul@product+1,f
  3637  0BB5  0839               	movf	___wmul@multiplicand+1,w
  3638  0BB6  07BB               	addwf	___wmul@product+1,f
  3639  0BB7                     l365:	
  3640  0BB7  3001               	movlw	1
  3641  0BB8                     u4995:	
  3642  0BB8  1003               	clrc
  3643  0BB9  0DB8               	rlf	___wmul@multiplicand,f
  3644  0BBA  0DB9               	rlf	___wmul@multiplicand+1,f
  3645  0BBB  3EFF               	addlw	-1
  3646  0BBC  1D03               	skipz
  3647  0BBD  2BB8               	goto	u4995
  3648  0BBE  3001               	movlw	1
  3649  0BBF                     u5005:	
  3650  0BBF  1003               	clrc
  3651  0BC0  0CB7               	rrf	___wmul@multiplier+1,f
  3652  0BC1  0CB6               	rrf	___wmul@multiplier,f
  3653  0BC2  3EFF               	addlw	-1
  3654  0BC3  1D03               	skipz
  3655  0BC4  2BBF               	goto	u5005
  3656  0BC5  0836               	movf	___wmul@multiplier,w
  3657  0BC6  0437               	iorwf	___wmul@multiplier+1,w
  3658  0BC7  1D03               	btfss	3,2
  3659  0BC8  2BAF               	goto	l3229
  3660  0BC9  083B               	movf	___wmul@product+1,w
  3661  0BCA  00B7               	movwf	?___wmul+1
  3662  0BCB  083A               	movf	___wmul@product,w
  3663  0BCC  00B6               	movwf	?___wmul
  3664  0BCD  0008               	return
  3665  0BCE                     __end_of___wmul:	
  3666                           
  3667                           	psect	text12
  3668  0B0A                     __ptext12:	
  3669 ;; *************** function ___init_timer__ *****************
  3670 ;; Defined at:
  3671 ;;		line 114 in file "newmain.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		None
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    2
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function ___init_timer__
  3701  0B0A                     ___init_timer__:	
  3702                           
  3703                           ;newmain.c: 117:     T1CKPS0 = 1;
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in ___init_timer__: []
  3707  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0B0C  1610               	bsf	16,4	;volatile
  3710                           
  3711                           ;newmain.c: 118:     T1CKPS1 = 1;
  3712  0B0D  1690               	bsf	16,5	;volatile
  3713                           
  3714                           ;newmain.c: 119:     TMR1CS = 0;
  3715  0B0E  1090               	bcf	16,1	;volatile
  3716                           
  3717                           ;newmain.c: 120:     TMR1ON = 1;
  3718  0B0F  1410               	bsf	16,0	;volatile
  3719  0B10  0008               	return
  3720  0B11                     __end_of___init_timer__:	
  3721                           
  3722                           	psect	text13
  3723  0B19                     __ptext13:	
  3724 ;; *************** function ___init_interrupt__ *****************
  3725 ;; Defined at:
  3726 ;;		line 104 in file "newmain.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		None
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    2
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function ___init_interrupt__
  3756  0B19                     ___init_interrupt__:	
  3757                           
  3758                           ;newmain.c: 106:     GIE = 1;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in ___init_interrupt__: []
  3762  0B19  178B               	bsf	11,7	;volatile
  3763                           
  3764                           ;newmain.c: 107:     PEIE = 1;
  3765  0B1A  170B               	bsf	11,6	;volatile
  3766                           
  3767                           ;newmain.c: 109:     TMR1IE = 1;
  3768  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  3770  0B1D  140C               	bsf	12,0	;volatile
  3771                           
  3772                           ;newmain.c: 111:     TMR1IF = 0;
  3773  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0B20  100C               	bcf	12,0	;volatile
  3776  0B21  0008               	return
  3777  0B22                     __end_of___init_interrupt__:	
  3778                           
  3779                           	psect	text14
  3780  0B2F                     __ptext14:	
  3781 ;; *************** function ___init_adc *****************
  3782 ;; Defined at:
  3783 ;;		line 31 in file "newmain.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3797 ;;      Params:         0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    2
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function ___init_adc
  3813  0B2F                     ___init_adc:	
  3814                           
  3815                           ;newmain.c: 41:     ADCON0bits.ADCS = 0b00;
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in ___init_adc: [wreg+status,2+status,0]
  3819  0B2F  303F               	movlw	-193
  3820  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0B32  059F               	andwf	31,f	;volatile
  3823                           
  3824                           ;newmain.c: 42:     ADCON0bits.CHS = 0b000;
  3825  0B33  30C7               	movlw	-57
  3826  0B34  059F               	andwf	31,f	;volatile
  3827                           
  3828                           ;newmain.c: 43:     ADCON0bits.ADON = 0;
  3829  0B35  101F               	bcf	31,0	;volatile
  3830                           
  3831                           ;newmain.c: 54:     ADCON1bits.ADFM = 1;
  3832  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0B37  1303               	bcf	3,6	;RP1=0, select bank1
  3834  0B38  179F               	bsf	31,7	;volatile
  3835                           
  3836                           ;newmain.c: 55:     ADCON1bits.ADCS2 = 0;
  3837  0B39  131F               	bcf	31,6	;volatile
  3838                           
  3839                           ;newmain.c: 56:     ADCON1bits.PCFG = 0b0000;
  3840  0B3A  30F0               	movlw	-16
  3841  0B3B  059F               	andwf	31,f	;volatile
  3842  0B3C  0008               	return
  3843  0B3D                     __end_of___init_adc:	
  3844                           
  3845                           	psect	text15
  3846  0DC9                     __ptext15:	
  3847 ;; *************** function _isr *****************
  3848 ;; Defined at:
  3849 ;;		line 310 in file "newmain.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  i               2   16[BANK0 ] int 
  3854 ;;  i               2   20[BANK0 ] int 
  3855 ;;  runningTotal    2   14[BANK0 ] int 
  3856 ;;  N               2   18[BANK0 ] int 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       0       0       0       0
  3867 ;;      Locals:         0       8       0       0       0
  3868 ;;      Temps:          0       8       0       0       0
  3869 ;;      Totals:         0      16       0       0       0
  3870 ;;Total ram usage:       16 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    1
  3873 ;; This function calls:
  3874 ;;		___adc_read
  3875 ;;		___aldiv
  3876 ;;		i1___awdiv
  3877 ;;		i1___wmul
  3878 ;; This function is called by:
  3879 ;;		Interrupt level 1
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _isr
  3885  0DC9                     _isr:	
  3886                           
  3887                           ;newmain.c: 311:     if (TMR1IF == 1) {
  3888  0DC9  1C0C               	btfss	12,0	;volatile
  3889  0DCA  2FF3               	goto	i1l223
  3890                           
  3891                           ;newmain.c: 312:         TMR1H = 0x3C;
  3892  0DCB  303C               	movlw	60
  3893  0DCC  008F               	movwf	15	;volatile
  3894                           
  3895                           ;newmain.c: 313:         TMR1L = 0xB0;
  3896  0DCD  30B0               	movlw	176
  3897  0DCE  008E               	movwf	14	;volatile
  3898                           
  3899                           ;newmain.c: 314:         TMR1IF = 0;
  3900  0DCF  100C               	bcf	12,0	;volatile
  3901                           
  3902                           ;newmain.c: 316:         sampleCounter += 2;
  3903  0DD0  3002               	movlw	2
  3904  0DD1  07BE               	addwf	_sampleCounter,f
  3905  0DD2  1803               	skipnc
  3906  0DD3  0ABF               	incf	_sampleCounter+1,f
  3907  0DD4  3000               	movlw	0
  3908  0DD5  07BF               	addwf	_sampleCounter+1,f
  3909                           
  3910                           ;newmain.c: 317:         int N = sampleCounter - lastBeatTime;
  3911  0DD6  0846               	movf	_lastBeatTime,w
  3912  0DD7  023E               	subwf	_sampleCounter,w
  3913  0DD8  00B2               	movwf	isr@N
  3914  0DD9  0847               	movf	_lastBeatTime+1,w
  3915  0DDA  1C03               	skipc
  3916  0DDB  0A47               	incf	_lastBeatTime+1,w
  3917  0DDC  023F               	subwf	_sampleCounter+1,w
  3918  0DDD  00B3               	movwf	isr@N+1
  3919                           
  3920                           ;newmain.c: 318:         Go = N ;
  3921  0DDE  0833               	movf	isr@N+1,w
  3922  0DDF  00C9               	movwf	_Go+1
  3923  0DE0  0832               	movf	isr@N,w
  3924  0DE1  00C8               	movwf	_Go
  3925                           
  3926                           ;newmain.c: 320:         Signal = __adc_read(0);
  3927  0DE2  3000               	movlw	0
  3928  0DE3  00F0               	movwf	___adc_read@adc_channel
  3929  0DE4  00F1               	movwf	___adc_read@adc_channel+1
  3930  0DE5  120A  158A  23CE  120A  158A  	fcall	___adc_read
  3931  0DEA  0871               	movf	?___adc_read+1,w
  3932  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0DED  00C1               	movwf	_Signal+1
  3935  0DEE  0870               	movf	?___adc_read,w
  3936  0DEF  00C0               	movwf	_Signal
  3937                           
  3938                           ;newmain.c: 323:         if (Signal < thresh && N > (IBI / 5) * 3) {
  3939  0DF0  0841               	movf	_Signal+1,w
  3940  0DF1  3A80               	xorlw	128
  3941  0DF2  00A6               	movwf	??_isr
  3942  0DF3  0853               	movf	_thresh+1,w
  3943  0DF4  3A80               	xorlw	128
  3944  0DF5  0226               	subwf	??_isr,w
  3945  0DF6  1D03               	skipz
  3946  0DF7  2DFA               	goto	u295_25
  3947  0DF8  0852               	movf	_thresh,w
  3948  0DF9  0240               	subwf	_Signal,w
  3949  0DFA                     u295_25:	
  3950  0DFA  1803               	skipnc
  3951  0DFB  2E3A               	goto	i1l214
  3952  0DFC  3005               	movlw	5
  3953  0DFD  00F0               	movwf	i1___awdiv@divisor
  3954  0DFE  3000               	movlw	0
  3955  0DFF  00F1               	movwf	i1___awdiv@divisor+1
  3956  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0E02  0859               	movf	_IBI+1,w
  3959  0E03  00F3               	movwf	i1___awdiv@dividend+1
  3960  0E04  0858               	movf	_IBI,w
  3961  0E05  00F2               	movwf	i1___awdiv@dividend
  3962  0E06  120A  158A  2493  120A  158A  	fcall	i1___awdiv
  3963  0E0B  0871               	movf	?i1___awdiv+1,w
  3964  0E0C  00FA               	movwf	i1___wmul@multiplier+1
  3965  0E0D  0870               	movf	?i1___awdiv,w
  3966  0E0E  00F9               	movwf	i1___wmul@multiplier
  3967  0E0F  3003               	movlw	3
  3968  0E10  00FB               	movwf	i1___wmul@multiplicand
  3969  0E11  3000               	movlw	0
  3970  0E12  00FC               	movwf	i1___wmul@multiplicand+1
  3971  0E13  120A  158A  23F4  120A  158A  	fcall	i1___wmul
  3972  0E18  087A               	movf	?i1___wmul+1,w
  3973  0E19  3A80               	xorlw	128
  3974  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0E1C  00A6               	movwf	??_isr
  3977  0E1D  0833               	movf	isr@N+1,w
  3978  0E1E  3A80               	xorlw	128
  3979  0E1F  0226               	subwf	??_isr,w
  3980  0E20  1D03               	skipz
  3981  0E21  2E24               	goto	u296_25
  3982  0E22  0832               	movf	isr@N,w
  3983  0E23  0279               	subwf	?i1___wmul,w
  3984  0E24                     u296_25:	
  3985  0E24  1803               	skipnc
  3986  0E25  2E3A               	goto	i1l214
  3987                           
  3988                           ;newmain.c: 324:             if (Signal < T) {
  3989  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0E28  0841               	movf	_Signal+1,w
  3992  0E29  3A80               	xorlw	128
  3993  0E2A  00A6               	movwf	??_isr
  3994  0E2B  0855               	movf	_T+1,w
  3995  0E2C  3A80               	xorlw	128
  3996  0E2D  0226               	subwf	??_isr,w
  3997  0E2E  1D03               	skipz
  3998  0E2F  2E32               	goto	u297_25
  3999  0E30  0854               	movf	_T,w
  4000  0E31  0240               	subwf	_Signal,w
  4001  0E32                     u297_25:	
  4002  0E32  1803               	skipnc
  4003  0E33  2E3A               	goto	i1l214
  4004                           
  4005                           ;newmain.c: 325:                 T = Signal;
  4006  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0E36  0841               	movf	_Signal+1,w
  4009  0E37  00D5               	movwf	_T+1
  4010  0E38  0840               	movf	_Signal,w
  4011  0E39  00D4               	movwf	_T
  4012  0E3A                     i1l214:	
  4013                           ;newmain.c: 327:         }
  4014                           
  4015                           
  4016                           ;newmain.c: 329:         if (Signal > thresh && Signal > P) {
  4017  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0E3C  0853               	movf	_thresh+1,w
  4020  0E3D  3A80               	xorlw	128
  4021  0E3E  00A6               	movwf	??_isr
  4022  0E3F  0841               	movf	_Signal+1,w
  4023  0E40  3A80               	xorlw	128
  4024  0E41  0226               	subwf	??_isr,w
  4025  0E42  1D03               	skipz
  4026  0E43  2E46               	goto	u298_25
  4027  0E44  0840               	movf	_Signal,w
  4028  0E45  0252               	subwf	_thresh,w
  4029  0E46                     u298_25:	
  4030  0E46  1803               	skipnc
  4031  0E47  2E5C               	goto	i1l2265
  4032  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0E4A  0857               	movf	_P+1,w
  4035  0E4B  3A80               	xorlw	128
  4036  0E4C  00A6               	movwf	??_isr
  4037  0E4D  0841               	movf	_Signal+1,w
  4038  0E4E  3A80               	xorlw	128
  4039  0E4F  0226               	subwf	??_isr,w
  4040  0E50  1D03               	skipz
  4041  0E51  2E54               	goto	u299_25
  4042  0E52  0840               	movf	_Signal,w
  4043  0E53  0256               	subwf	_P,w
  4044  0E54                     u299_25:	
  4045  0E54  1803               	skipnc
  4046  0E55  2E5C               	goto	i1l2265
  4047                           
  4048                           ;newmain.c: 330:             P = Signal;
  4049  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0E58  0841               	movf	_Signal+1,w
  4052  0E59  00D7               	movwf	_P+1
  4053  0E5A  0840               	movf	_Signal,w
  4054  0E5B  00D6               	movwf	_P
  4055  0E5C                     i1l2265:	
  4056                           
  4057                           ;newmain.c: 334:         if (N > 250) {
  4058  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0E5E  0833               	movf	isr@N+1,w
  4061  0E5F  3A80               	xorlw	128
  4062  0E60  00FF               	movwf	127
  4063  0E61  3080               	movlw	128
  4064  0E62  027F               	subwf	127,w
  4065  0E63  1D03               	skipz
  4066  0E64  2E67               	goto	u300_25
  4067  0E65  30FB               	movlw	251
  4068  0E66  0232               	subwf	isr@N,w
  4069  0E67                     u300_25:	
  4070  0E67  1C03               	skipc
  4071  0E68  2F85               	goto	i1l217
  4072                           
  4073                           ;newmain.c: 335:             if ((Signal > thresh) && (N > (IBI / 5) * 3)) {
  4074  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0E6B  0853               	movf	_thresh+1,w
  4077  0E6C  3A80               	xorlw	128
  4078  0E6D  00A6               	movwf	??_isr
  4079  0E6E  0841               	movf	_Signal+1,w
  4080  0E6F  3A80               	xorlw	128
  4081  0E70  0226               	subwf	??_isr,w
  4082  0E71  1D03               	skipz
  4083  0E72  2E75               	goto	u301_25
  4084  0E73  0840               	movf	_Signal,w
  4085  0E74  0252               	subwf	_thresh,w
  4086  0E75                     u301_25:	
  4087  0E75  1803               	skipnc
  4088  0E76  2F85               	goto	i1l217
  4089  0E77  3005               	movlw	5
  4090  0E78  00F0               	movwf	i1___awdiv@divisor
  4091  0E79  3000               	movlw	0
  4092  0E7A  00F1               	movwf	i1___awdiv@divisor+1
  4093  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0E7D  0859               	movf	_IBI+1,w
  4096  0E7E  00F3               	movwf	i1___awdiv@dividend+1
  4097  0E7F  0858               	movf	_IBI,w
  4098  0E80  00F2               	movwf	i1___awdiv@dividend
  4099  0E81  120A  158A  2493  120A  158A  	fcall	i1___awdiv
  4100  0E86  0871               	movf	?i1___awdiv+1,w
  4101  0E87  00FA               	movwf	i1___wmul@multiplier+1
  4102  0E88  0870               	movf	?i1___awdiv,w
  4103  0E89  00F9               	movwf	i1___wmul@multiplier
  4104  0E8A  3003               	movlw	3
  4105  0E8B  00FB               	movwf	i1___wmul@multiplicand
  4106  0E8C  3000               	movlw	0
  4107  0E8D  00FC               	movwf	i1___wmul@multiplicand+1
  4108  0E8E  120A  158A  23F4  120A  158A  	fcall	i1___wmul
  4109  0E93  087A               	movf	?i1___wmul+1,w
  4110  0E94  3A80               	xorlw	128
  4111  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0E97  00A6               	movwf	??_isr
  4114  0E98  0833               	movf	isr@N+1,w
  4115  0E99  3A80               	xorlw	128
  4116  0E9A  0226               	subwf	??_isr,w
  4117  0E9B  1D03               	skipz
  4118  0E9C  2E9F               	goto	u302_25
  4119  0E9D  0832               	movf	isr@N,w
  4120  0E9E  0279               	subwf	?i1___wmul,w
  4121  0E9F                     u302_25:	
  4122  0E9F  1803               	skipnc
  4123  0EA0  2F85               	goto	i1l217
  4124                           
  4125                           ;newmain.c: 336:                 Pulse = 1;
  4126  0EA1  3001               	movlw	1
  4127  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4128  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4129  0EA4  00C4               	movwf	_Pulse
  4130  0EA5  3000               	movlw	0
  4131  0EA6  00C5               	movwf	_Pulse+1
  4132                           
  4133                           ;newmain.c: 337:                 IBI = sampleCounter - lastBeatTime;
  4134  0EA7  0846               	movf	_lastBeatTime,w
  4135  0EA8  023E               	subwf	_sampleCounter,w
  4136  0EA9  00D8               	movwf	_IBI
  4137  0EAA  0847               	movf	_lastBeatTime+1,w
  4138  0EAB  1C03               	skipc
  4139  0EAC  0A47               	incf	_lastBeatTime+1,w
  4140  0EAD  023F               	subwf	_sampleCounter+1,w
  4141  0EAE  00D9               	movwf	_IBI+1
  4142                           
  4143                           ;newmain.c: 338:                 lastBeatTime = sampleCounter;
  4144  0EAF  083F               	movf	_sampleCounter+1,w
  4145  0EB0  00C7               	movwf	_lastBeatTime+1
  4146  0EB1  083E               	movf	_sampleCounter,w
  4147  0EB2  00C6               	movwf	_lastBeatTime
  4148                           
  4149                           ;newmain.c: 340:                 if (secondBeat) {
  4150  0EB3  083C               	movf	_secondBeat,w
  4151  0EB4  043D               	iorwf	_secondBeat+1,w
  4152  0EB5  1903               	btfsc	3,2
  4153  0EB6  2EF5               	goto	i1l2293
  4154                           
  4155                           ;newmain.c: 341:                     secondBeat = 0;
  4156  0EB7  01BC               	clrf	_secondBeat
  4157  0EB8  01BD               	clrf	_secondBeat+1
  4158                           
  4159                           ;newmain.c: 343:                     BPM = 60000 / IBI;
  4160  0EB9  0858               	movf	_IBI,w
  4161  0EBA  00F0               	movwf	___aldiv@divisor
  4162  0EBB  0859               	movf	_IBI+1,w
  4163  0EBC  00F1               	movwf	___aldiv@divisor+1
  4164  0EBD  3000               	movlw	0
  4165  0EBE  1BF1               	btfsc	___aldiv@divisor+1,7
  4166  0EBF  30FF               	movlw	255
  4167  0EC0  00F2               	movwf	___aldiv@divisor+2
  4168  0EC1  00F3               	movwf	___aldiv@divisor+3
  4169  0EC2  3000               	movlw	0
  4170  0EC3  00F7               	movwf	___aldiv@dividend+3
  4171  0EC4  3000               	movlw	0
  4172  0EC5  00F6               	movwf	___aldiv@dividend+2
  4173  0EC6  30EA               	movlw	234
  4174  0EC7  00F5               	movwf	___aldiv@dividend+1
  4175  0EC8  3060               	movlw	96
  4176  0EC9  00F4               	movwf	___aldiv@dividend
  4177  0ECA  120A  118A  275F  120A  158A  	fcall	___aldiv
  4178  0ECF  0871               	movf	?___aldiv+1,w
  4179  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4181  0ED2  00C3               	movwf	_BPM+1
  4182  0ED3  0870               	movf	?___aldiv,w
  4183  0ED4  00C2               	movwf	_BPM
  4184                           
  4185                           ;newmain.c: 344:                     int i;;newmain.c: 345:                     for (i =
      +                           0; i <= 9; i++) {
  4186  0ED5  01B0               	clrf	isr@i
  4187  0ED6  01B1               	clrf	isr@i+1
  4188  0ED7                     i1l2287:	
  4189                           
  4190                           ;newmain.c: 346:                         rate[i] = IBI;
  4191  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  4192  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  4193  0ED9  0830               	movf	isr@i,w
  4194  0EDA  00A6               	movwf	??_isr
  4195  0EDB  0726               	addwf	??_isr,w
  4196  0EDC  3EC8               	addlw	(low (_rate| 0))& (0+255)
  4197  0EDD  0084               	movwf	4
  4198  0EDE  0858               	movf	_IBI,w
  4199  0EDF  1383               	bcf	3,7	;select IRP bank1
  4200  0EE0  0080               	movwf	0
  4201  0EE1  0A84               	incf	4,f
  4202  0EE2  0859               	movf	_IBI+1,w
  4203  0EE3  0080               	movwf	0
  4204                           
  4205                           ;newmain.c: 347:                     }
  4206  0EE4  3001               	movlw	1
  4207  0EE5  07B0               	addwf	isr@i,f
  4208  0EE6  1803               	skipnc
  4209  0EE7  0AB1               	incf	isr@i+1,f
  4210  0EE8  3000               	movlw	0
  4211  0EE9  07B1               	addwf	isr@i+1,f
  4212  0EEA  0831               	movf	isr@i+1,w
  4213  0EEB  3A80               	xorlw	128
  4214  0EEC  00FF               	movwf	127
  4215  0EED  3080               	movlw	128
  4216  0EEE  027F               	subwf	127,w
  4217  0EEF  1D03               	skipz
  4218  0EF0  2EF3               	goto	u304_25
  4219  0EF1  300A               	movlw	10
  4220  0EF2  0230               	subwf	isr@i,w
  4221  0EF3                     u304_25:	
  4222  0EF3  1C03               	skipc
  4223  0EF4  2ED7               	goto	i1l2287
  4224  0EF5                     i1l2293:	
  4225                           
  4226                           ;newmain.c: 350:                 if (firstBeat) {
  4227  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4228  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0EF7  084E               	movf	_firstBeat,w
  4230  0EF8  044F               	iorwf	_firstBeat+1,w
  4231  0EF9  1903               	btfsc	3,2
  4232  0EFA  2F02               	goto	i1l2301
  4233                           
  4234                           ;newmain.c: 351:                     firstBeat = 0;
  4235  0EFB  01CE               	clrf	_firstBeat
  4236  0EFC  01CF               	clrf	_firstBeat+1
  4237                           
  4238                           ;newmain.c: 352:                     secondBeat = 1;
  4239  0EFD  3001               	movlw	1
  4240  0EFE  00BC               	movwf	_secondBeat
  4241  0EFF  3000               	movlw	0
  4242  0F00  00BD               	movwf	_secondBeat+1
  4243  0F01  2FF3               	goto	i1l223
  4244  0F02                     i1l2301:	
  4245                           
  4246                           ;newmain.c: 355:                 int runningTotal = 0;
  4247  0F02  01AE               	clrf	isr@runningTotal
  4248  0F03  01AF               	clrf	isr@runningTotal+1
  4249                           
  4250                           ;newmain.c: 356:                 int i;;newmain.c: 357:                 for (i = 0; i <=
      +                           8; i++) {
  4251  0F04  01B4               	clrf	isr@i_356
  4252  0F05  01B5               	clrf	isr@i_356+1
  4253  0F06                     i1l2307:	
  4254                           
  4255                           ;newmain.c: 358:                     rate[i] = rate[i + 1];
  4256  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  4258  0F08  0834               	movf	isr@i_356,w
  4259  0F09  00A6               	movwf	??_isr
  4260  0F0A  0726               	addwf	??_isr,w
  4261  0F0B  3ECA               	addlw	(low ((_rate| 0+2)))& (0+255)
  4262  0F0C  0084               	movwf	4
  4263  0F0D  1383               	bcf	3,7	;select IRP bank1
  4264  0F0E  0800               	movf	0,w
  4265  0F0F  00A7               	movwf	??_isr+1
  4266  0F10  0A84               	incf	4,f
  4267  0F11  0800               	movf	0,w
  4268  0F12  00A8               	movwf	??_isr+2
  4269  0F13  0834               	movf	isr@i_356,w
  4270  0F14  00A9               	movwf	??_isr+3
  4271  0F15  0729               	addwf	??_isr+3,w
  4272  0F16  3EC8               	addlw	(low (_rate| 0))& (0+255)
  4273  0F17  0084               	movwf	4
  4274  0F18  0827               	movf	??_isr+1,w
  4275  0F19  0080               	movwf	0
  4276  0F1A  0A84               	incf	4,f
  4277  0F1B  0828               	movf	??_isr+2,w
  4278  0F1C  0080               	movwf	0
  4279                           
  4280                           ;newmain.c: 359:                     runningTotal += rate[i];
  4281  0F1D  0834               	movf	isr@i_356,w
  4282  0F1E  00A6               	movwf	??_isr
  4283  0F1F  0726               	addwf	??_isr,w
  4284  0F20  3EC8               	addlw	(low (_rate| 0))& (0+255)
  4285  0F21  0084               	movwf	4
  4286  0F22  0800               	movf	0,w
  4287  0F23  00A7               	movwf	??_isr+1
  4288  0F24  0A84               	incf	4,f
  4289  0F25  0800               	movf	0,w
  4290  0F26  00A8               	movwf	??_isr+2
  4291  0F27  0827               	movf	??_isr+1,w
  4292  0F28  07AE               	addwf	isr@runningTotal,f
  4293  0F29  1803               	skipnc
  4294  0F2A  0AAF               	incf	isr@runningTotal+1,f
  4295  0F2B  0828               	movf	??_isr+2,w
  4296  0F2C  07AF               	addwf	isr@runningTotal+1,f
  4297                           
  4298                           ;newmain.c: 360:                 }
  4299  0F2D  3001               	movlw	1
  4300  0F2E  07B4               	addwf	isr@i_356,f
  4301  0F2F  1803               	skipnc
  4302  0F30  0AB5               	incf	isr@i_356+1,f
  4303  0F31  3000               	movlw	0
  4304  0F32  07B5               	addwf	isr@i_356+1,f
  4305  0F33  0835               	movf	isr@i_356+1,w
  4306  0F34  3A80               	xorlw	128
  4307  0F35  00FF               	movwf	127
  4308  0F36  3080               	movlw	128
  4309  0F37  027F               	subwf	127,w
  4310  0F38  1D03               	skipz
  4311  0F39  2F3C               	goto	u306_25
  4312  0F3A  3009               	movlw	9
  4313  0F3B  0234               	subwf	isr@i_356,w
  4314  0F3C                     u306_25:	
  4315  0F3C  1C03               	skipc
  4316  0F3D  2F06               	goto	i1l2307
  4317                           
  4318                           ;newmain.c: 362:                 rate[9] = IBI;
  4319  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  4321  0F40  0859               	movf	_IBI+1,w
  4322  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  4323  0F42  1303               	bcf	3,6	;RP1=0, select bank1
  4324  0F43  00DB               	movwf	((_rate+1)^(0+128)+18)	;volatile
  4325  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0F46  0858               	movf	_IBI,w
  4328  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  4329  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  4330  0F49  00DA               	movwf	(_rate^(0+128)+18)	;volatile
  4331                           
  4332                           ;newmain.c: 363:                 runningTotal += rate[9];
  4333  0F4A  085A               	movf	(_rate^(0+128)+18),w	;volatile
  4334  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0F4D  07AE               	addwf	isr@runningTotal,f
  4337  0F4E  1803               	skipnc
  4338  0F4F  0AAF               	incf	isr@runningTotal+1,f
  4339  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0F52  085B               	movf	((_rate+1)^(0+128)+18),w	;volatile
  4342  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0F55  07AF               	addwf	isr@runningTotal+1,f
  4345                           
  4346                           ;newmain.c: 364:                 runningTotal /= 10;
  4347  0F56  300A               	movlw	10
  4348  0F57  00F0               	movwf	i1___awdiv@divisor
  4349  0F58  3000               	movlw	0
  4350  0F59  00F1               	movwf	i1___awdiv@divisor+1
  4351  0F5A  082F               	movf	isr@runningTotal+1,w
  4352  0F5B  00F3               	movwf	i1___awdiv@dividend+1
  4353  0F5C  082E               	movf	isr@runningTotal,w
  4354  0F5D  00F2               	movwf	i1___awdiv@dividend
  4355  0F5E  120A  158A  2493  120A  158A  	fcall	i1___awdiv
  4356  0F63  0871               	movf	?i1___awdiv+1,w
  4357  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0F66  00AF               	movwf	isr@runningTotal+1
  4360  0F67  0870               	movf	?i1___awdiv,w
  4361  0F68  00AE               	movwf	isr@runningTotal
  4362                           
  4363                           ;newmain.c: 365:                 BPM = 60000 / runningTotal;
  4364  0F69  082E               	movf	isr@runningTotal,w
  4365  0F6A  00F0               	movwf	___aldiv@divisor
  4366  0F6B  082F               	movf	isr@runningTotal+1,w
  4367  0F6C  00F1               	movwf	___aldiv@divisor+1
  4368  0F6D  3000               	movlw	0
  4369  0F6E  1BF1               	btfsc	___aldiv@divisor+1,7
  4370  0F6F  30FF               	movlw	255
  4371  0F70  00F2               	movwf	___aldiv@divisor+2
  4372  0F71  00F3               	movwf	___aldiv@divisor+3
  4373  0F72  3000               	movlw	0
  4374  0F73  00F7               	movwf	___aldiv@dividend+3
  4375  0F74  3000               	movlw	0
  4376  0F75  00F6               	movwf	___aldiv@dividend+2
  4377  0F76  30EA               	movlw	234
  4378  0F77  00F5               	movwf	___aldiv@dividend+1
  4379  0F78  3060               	movlw	96
  4380  0F79  00F4               	movwf	___aldiv@dividend
  4381  0F7A  120A  118A  275F  120A  158A  	fcall	___aldiv
  4382  0F7F  0871               	movf	?___aldiv+1,w
  4383  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0F82  00C3               	movwf	_BPM+1
  4386  0F83  0870               	movf	?___aldiv,w
  4387  0F84  00C2               	movwf	_BPM
  4388  0F85                     i1l217:	
  4389                           ;newmain.c: 367:         }
  4390                           
  4391                           
  4392                           ;newmain.c: 369:         if (Signal < thresh && Pulse == 1) {
  4393  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0F87  0841               	movf	_Signal+1,w
  4396  0F88  3A80               	xorlw	128
  4397  0F89  00A6               	movwf	??_isr
  4398  0F8A  0853               	movf	_thresh+1,w
  4399  0F8B  3A80               	xorlw	128
  4400  0F8C  0226               	subwf	??_isr,w
  4401  0F8D  1D03               	skipz
  4402  0F8E  2F91               	goto	u307_25
  4403  0F8F  0852               	movf	_thresh,w
  4404  0F90  0240               	subwf	_Signal,w
  4405  0F91                     u307_25:	
  4406  0F91  1803               	skipnc
  4407  0F92  2FC2               	goto	i1l2331
  4408  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0F95  0344               	decf	_Pulse,w
  4411  0F96  0445               	iorwf	_Pulse+1,w
  4412  0F97  1D03               	btfss	3,2
  4413  0F98  2FC2               	goto	i1l2331
  4414                           
  4415                           ;newmain.c: 370:             Pulse = 0;
  4416  0F99  01C4               	clrf	_Pulse
  4417  0F9A  01C5               	clrf	_Pulse+1
  4418                           
  4419                           ;newmain.c: 371:             amp = P - T;
  4420  0F9B  0854               	movf	_T,w
  4421  0F9C  0256               	subwf	_P,w
  4422  0F9D  00D0               	movwf	_amp
  4423  0F9E  0855               	movf	_T+1,w
  4424  0F9F  1C03               	skipc
  4425  0FA0  0A55               	incf	_T+1,w
  4426  0FA1  0257               	subwf	_P+1,w
  4427  0FA2  00D1               	movwf	_amp+1
  4428                           
  4429                           ;newmain.c: 372:             thresh = amp / 2 + T;
  4430  0FA3  3002               	movlw	2
  4431  0FA4  00F0               	movwf	i1___awdiv@divisor
  4432  0FA5  3000               	movlw	0
  4433  0FA6  00F1               	movwf	i1___awdiv@divisor+1
  4434  0FA7  0851               	movf	_amp+1,w
  4435  0FA8  00F3               	movwf	i1___awdiv@dividend+1
  4436  0FA9  0850               	movf	_amp,w
  4437  0FAA  00F2               	movwf	i1___awdiv@dividend
  4438  0FAB  120A  158A  2493  120A  158A  	fcall	i1___awdiv
  4439  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0FB2  0854               	movf	_T,w
  4442  0FB3  0770               	addwf	?i1___awdiv,w
  4443  0FB4  00D2               	movwf	_thresh
  4444  0FB5  0855               	movf	_T+1,w
  4445  0FB6  1803               	skipnc
  4446  0FB7  0A55               	incf	_T+1,w
  4447  0FB8  0771               	addwf	?i1___awdiv+1,w
  4448  0FB9  00D3               	movwf	_thresh+1
  4449                           
  4450                           ;newmain.c: 373:             P = thresh;
  4451  0FBA  0853               	movf	_thresh+1,w
  4452  0FBB  00D7               	movwf	_P+1
  4453  0FBC  0852               	movf	_thresh,w
  4454  0FBD  00D6               	movwf	_P
  4455                           
  4456                           ;newmain.c: 374:             T = thresh;
  4457  0FBE  0853               	movf	_thresh+1,w
  4458  0FBF  00D5               	movwf	_T+1
  4459  0FC0  0852               	movf	_thresh,w
  4460  0FC1  00D4               	movwf	_T
  4461  0FC2                     i1l2331:	
  4462                           
  4463                           ;newmain.c: 377:         if (N > 2500) {
  4464  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0FC4  0833               	movf	isr@N+1,w
  4467  0FC5  3A80               	xorlw	128
  4468  0FC6  00FF               	movwf	127
  4469  0FC7  3089               	movlw	137
  4470  0FC8  027F               	subwf	127,w
  4471  0FC9  1D03               	skipz
  4472  0FCA  2FCD               	goto	u309_25
  4473  0FCB  30C5               	movlw	197
  4474  0FCC  0232               	subwf	isr@N,w
  4475  0FCD                     u309_25:	
  4476  0FCD  1C03               	skipc
  4477  0FCE  2FF3               	goto	i1l223
  4478                           
  4479                           ;newmain.c: 378:             thresh = 512;
  4480  0FCF  3000               	movlw	0
  4481  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0FD2  00D2               	movwf	_thresh
  4484  0FD3  3002               	movlw	2
  4485  0FD4  00D3               	movwf	_thresh+1
  4486                           
  4487                           ;newmain.c: 379:             P = 512;
  4488  0FD5  3000               	movlw	0
  4489  0FD6  00D6               	movwf	_P
  4490  0FD7  3002               	movlw	2
  4491  0FD8  00D7               	movwf	_P+1
  4492                           
  4493                           ;newmain.c: 380:             T = 512;
  4494  0FD9  3000               	movlw	0
  4495  0FDA  00D4               	movwf	_T
  4496  0FDB  3002               	movlw	2
  4497  0FDC  00D5               	movwf	_T+1
  4498                           
  4499                           ;newmain.c: 381:             lastBeatTime = sampleCounter;
  4500  0FDD  083F               	movf	_sampleCounter+1,w
  4501  0FDE  00C7               	movwf	_lastBeatTime+1
  4502  0FDF  083E               	movf	_sampleCounter,w
  4503  0FE0  00C6               	movwf	_lastBeatTime
  4504                           
  4505                           ;newmain.c: 382:             firstBeat = 1;
  4506  0FE1  3001               	movlw	1
  4507  0FE2  00CE               	movwf	_firstBeat
  4508  0FE3  3000               	movlw	0
  4509  0FE4  00CF               	movwf	_firstBeat+1
  4510                           
  4511                           ;newmain.c: 383:             secondBeat = 0;
  4512  0FE5  01BC               	clrf	_secondBeat
  4513  0FE6  01BD               	clrf	_secondBeat+1
  4514                           
  4515                           ;newmain.c: 384:             BPM = 0;
  4516  0FE7  01C2               	clrf	_BPM
  4517  0FE8  01C3               	clrf	_BPM+1
  4518                           
  4519                           ;newmain.c: 385:             IBI = 600;
  4520  0FE9  3058               	movlw	88
  4521  0FEA  00D8               	movwf	_IBI
  4522  0FEB  3002               	movlw	2
  4523  0FEC  00D9               	movwf	_IBI+1
  4524                           
  4525                           ;newmain.c: 386:             Pulse = 0;
  4526  0FED  01C4               	clrf	_Pulse
  4527  0FEE  01C5               	clrf	_Pulse+1
  4528                           
  4529                           ;newmain.c: 387:             amp = 100;
  4530  0FEF  3064               	movlw	100
  4531  0FF0  00D0               	movwf	_amp
  4532  0FF1  3000               	movlw	0
  4533  0FF2  00D1               	movwf	_amp+1
  4534  0FF3                     i1l223:	
  4535  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0FF5  082D               	movf	??_isr+7,w
  4538  0FF6  00FF               	movwf	127
  4539  0FF7  082C               	movf	??_isr+6,w
  4540  0FF8  008A               	movwf	10
  4541  0FF9  082B               	movf	??_isr+5,w
  4542  0FFA  0084               	movwf	4
  4543  0FFB  0E2A               	swapf	(??_isr+4)^0,w
  4544  0FFC  0083               	movwf	3
  4545  0FFD  0EFE               	swapf	126,f
  4546  0FFE  0E7E               	swapf	126,w
  4547  0FFF  0009               	retfie
  4548  1000                     __end_of_isr:	
  4549                           
  4550                           	psect	intentry
  4551  0004                     __pintentry:	
  4552                           ;incstack = 0
  4553                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4554                           
  4555  0004                     interrupt_function:	
  4556  007E                     saved_w	set	btemp
  4557  0004  00FE               	movwf	btemp
  4558  0005  0E03               	swapf	3,w
  4559  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0008  00AA               	movwf	??_isr+4
  4562  0009  0804               	movf	4,w
  4563  000A  00AB               	movwf	??_isr+5
  4564  000B  080A               	movf	10,w
  4565  000C  00AC               	movwf	??_isr+6
  4566  000D  087F               	movf	btemp+1,w
  4567  000E  00AD               	movwf	??_isr+7
  4568  000F  120A  158A  2DC9   	ljmp	_isr
  4569                           
  4570                           	psect	text16
  4571  0BF4                     __ptext16:	
  4572 ;; *************** function i1___wmul *****************
  4573 ;; Defined at:
  4574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  multiplier      2    9[COMMON] unsigned int 
  4577 ;;  multiplicand    2   11[COMMON] unsigned int 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  __wmul          2    0[BANK0 ] unsigned int 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    9[COMMON] unsigned int 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4589 ;;      Params:         4       0       0       0       0
  4590 ;;      Locals:         0       2       0       0       0
  4591 ;;      Temps:          0       0       0       0       0
  4592 ;;      Totals:         4       2       0       0       0
  4593 ;;Total ram usage:        6 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_isr
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function i1___wmul
  4604  0BF4                     i1___wmul:	
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4608  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0BF6  01A0               	clrf	i1___wmul@product
  4611  0BF7  01A1               	clrf	i1___wmul@product+1
  4612  0BF8                     i1l2173:	
  4613  0BF8  1C79               	btfss	i1___wmul@multiplier,0
  4614  0BF9  2C02               	goto	i1l365
  4615  0BFA  087B               	movf	i1___wmul@multiplicand,w
  4616  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  4618  0BFD  07A0               	addwf	i1___wmul@product,f
  4619  0BFE  1803               	skipnc
  4620  0BFF  0AA1               	incf	i1___wmul@product+1,f
  4621  0C00  087C               	movf	i1___wmul@multiplicand+1,w
  4622  0C01  07A1               	addwf	i1___wmul@product+1,f
  4623  0C02                     i1l365:	
  4624  0C02  3001               	movlw	1
  4625  0C03                     u280_25:	
  4626  0C03  1003               	clrc
  4627  0C04  0DFB               	rlf	i1___wmul@multiplicand,f
  4628  0C05  0DFC               	rlf	i1___wmul@multiplicand+1,f
  4629  0C06  3EFF               	addlw	-1
  4630  0C07  1D03               	skipz
  4631  0C08  2C03               	goto	u280_25
  4632  0C09  3001               	movlw	1
  4633  0C0A                     u281_25:	
  4634  0C0A  1003               	clrc
  4635  0C0B  0CFA               	rrf	i1___wmul@multiplier+1,f
  4636  0C0C  0CF9               	rrf	i1___wmul@multiplier,f
  4637  0C0D  3EFF               	addlw	-1
  4638  0C0E  1D03               	skipz
  4639  0C0F  2C0A               	goto	u281_25
  4640  0C10  0879               	movf	i1___wmul@multiplier,w
  4641  0C11  047A               	iorwf	i1___wmul@multiplier+1,w
  4642  0C12  1D03               	btfss	3,2
  4643  0C13  2BF8               	goto	i1l2173
  4644  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4646  0C16  0821               	movf	i1___wmul@product+1,w
  4647  0C17  00FA               	movwf	?i1___wmul+1
  4648  0C18  0820               	movf	i1___wmul@product,w
  4649  0C19  00F9               	movwf	?i1___wmul
  4650  0C1A  0008               	return
  4651  0C1B                     __end_ofi1___wmul:	
  4652                           
  4653                           	psect	text17
  4654  0C93                     __ptext17:	
  4655 ;; *************** function i1___awdiv *****************
  4656 ;; Defined at:
  4657 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  divisor         2    0[COMMON] int 
  4660 ;;  dividend        2    2[COMMON] int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  __awdiv         2    7[COMMON] int 
  4663 ;;  __awdiv         1    6[COMMON] unsigned char 
  4664 ;;  __awdiv         1    5[COMMON] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2    0[COMMON] int 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         4       0       0       0       0
  4675 ;;      Locals:         4       0       0       0       0
  4676 ;;      Temps:          1       0       0       0       0
  4677 ;;      Totals:         9       0       0       0       0
  4678 ;;Total ram usage:        9 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_isr
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function i1___awdiv
  4689  0C93                     i1___awdiv:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4693  0C93  01F6               	clrf	i1___awdiv@sign
  4694  0C94  1FF1               	btfss	i1___awdiv@divisor+1,7
  4695  0C95  2C9D               	goto	i1l2193
  4696  0C96  09F0               	comf	i1___awdiv@divisor,f
  4697  0C97  09F1               	comf	i1___awdiv@divisor+1,f
  4698  0C98  0AF0               	incf	i1___awdiv@divisor,f
  4699  0C99  1903               	skipnz
  4700  0C9A  0AF1               	incf	i1___awdiv@divisor+1,f
  4701  0C9B  01F6               	clrf	i1___awdiv@sign
  4702  0C9C  0AF6               	incf	i1___awdiv@sign,f
  4703  0C9D                     i1l2193:	
  4704  0C9D  1FF3               	btfss	i1___awdiv@dividend+1,7
  4705  0C9E  2CA8               	goto	i1l2199
  4706  0C9F  09F2               	comf	i1___awdiv@dividend,f
  4707  0CA0  09F3               	comf	i1___awdiv@dividend+1,f
  4708  0CA1  0AF2               	incf	i1___awdiv@dividend,f
  4709  0CA2  1903               	skipnz
  4710  0CA3  0AF3               	incf	i1___awdiv@dividend+1,f
  4711  0CA4  3001               	movlw	1
  4712  0CA5  00F4               	movwf	??i1___awdiv
  4713  0CA6  0874               	movf	??i1___awdiv,w
  4714  0CA7  06F6               	xorwf	i1___awdiv@sign,f
  4715  0CA8                     i1l2199:	
  4716  0CA8  01F7               	clrf	i1___awdiv@quotient
  4717  0CA9  01F8               	clrf	i1___awdiv@quotient+1
  4718  0CAA  0870               	movf	i1___awdiv@divisor,w
  4719  0CAB  0471               	iorwf	i1___awdiv@divisor+1,w
  4720  0CAC  1903               	btfsc	3,2
  4721  0CAD  2CDF               	goto	i1l2221
  4722  0CAE  01F5               	clrf	i1___awdiv@counter
  4723  0CAF  0AF5               	incf	i1___awdiv@counter,f
  4724  0CB0                     i1l2209:	
  4725  0CB0  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4726  0CB1  2CBE               	goto	i1l2211
  4727  0CB2  3001               	movlw	1
  4728  0CB3                     u286_25:	
  4729  0CB3  1003               	clrc
  4730  0CB4  0DF0               	rlf	i1___awdiv@divisor,f
  4731  0CB5  0DF1               	rlf	i1___awdiv@divisor+1,f
  4732  0CB6  3EFF               	addlw	-1
  4733  0CB7  1D03               	skipz
  4734  0CB8  2CB3               	goto	u286_25
  4735  0CB9  3001               	movlw	1
  4736  0CBA  00F4               	movwf	??i1___awdiv
  4737  0CBB  0874               	movf	??i1___awdiv,w
  4738  0CBC  07F5               	addwf	i1___awdiv@counter,f
  4739  0CBD  2CB0               	goto	i1l2209
  4740  0CBE                     i1l2211:	
  4741  0CBE  3001               	movlw	1
  4742  0CBF                     u288_25:	
  4743  0CBF  1003               	clrc
  4744  0CC0  0DF7               	rlf	i1___awdiv@quotient,f
  4745  0CC1  0DF8               	rlf	i1___awdiv@quotient+1,f
  4746  0CC2  3EFF               	addlw	-1
  4747  0CC3  1D03               	skipz
  4748  0CC4  2CBF               	goto	u288_25
  4749  0CC5  0871               	movf	i1___awdiv@divisor+1,w
  4750  0CC6  0273               	subwf	i1___awdiv@dividend+1,w
  4751  0CC7  1D03               	skipz
  4752  0CC8  2CCB               	goto	u289_25
  4753  0CC9  0870               	movf	i1___awdiv@divisor,w
  4754  0CCA  0272               	subwf	i1___awdiv@dividend,w
  4755  0CCB                     u289_25:	
  4756  0CCB  1C03               	skipc
  4757  0CCC  2CD4               	goto	i1l2217
  4758  0CCD  0870               	movf	i1___awdiv@divisor,w
  4759  0CCE  02F2               	subwf	i1___awdiv@dividend,f
  4760  0CCF  0871               	movf	i1___awdiv@divisor+1,w
  4761  0CD0  1C03               	skipc
  4762  0CD1  03F3               	decf	i1___awdiv@dividend+1,f
  4763  0CD2  02F3               	subwf	i1___awdiv@dividend+1,f
  4764  0CD3  1477               	bsf	i1___awdiv@quotient,0
  4765  0CD4                     i1l2217:	
  4766  0CD4  3001               	movlw	1
  4767  0CD5                     u290_25:	
  4768  0CD5  1003               	clrc
  4769  0CD6  0CF1               	rrf	i1___awdiv@divisor+1,f
  4770  0CD7  0CF0               	rrf	i1___awdiv@divisor,f
  4771  0CD8  3EFF               	addlw	-1
  4772  0CD9  1D03               	skipz
  4773  0CDA  2CD5               	goto	u290_25
  4774  0CDB  3001               	movlw	1
  4775  0CDC  02F5               	subwf	i1___awdiv@counter,f
  4776  0CDD  1D03               	btfss	3,2
  4777  0CDE  2CBE               	goto	i1l2211
  4778  0CDF                     i1l2221:	
  4779  0CDF  0876               	movf	i1___awdiv@sign,w
  4780  0CE0  1903               	btfsc	3,2
  4781  0CE1  2CE7               	goto	i1l2225
  4782  0CE2  09F7               	comf	i1___awdiv@quotient,f
  4783  0CE3  09F8               	comf	i1___awdiv@quotient+1,f
  4784  0CE4  0AF7               	incf	i1___awdiv@quotient,f
  4785  0CE5  1903               	skipnz
  4786  0CE6  0AF8               	incf	i1___awdiv@quotient+1,f
  4787  0CE7                     i1l2225:	
  4788  0CE7  0878               	movf	i1___awdiv@quotient+1,w
  4789  0CE8  00F1               	movwf	?i1___awdiv+1
  4790  0CE9  0877               	movf	i1___awdiv@quotient,w
  4791  0CEA  00F0               	movwf	?i1___awdiv
  4792  0CEB  0008               	return
  4793  0CEC                     __end_ofi1___awdiv:	
  4794                           
  4795                           	psect	text18
  4796  075F                     __ptext18:	
  4797 ;; *************** function ___aldiv *****************
  4798 ;; Defined at:
  4799 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  divisor         4    0[COMMON] long 
  4802 ;;  dividend        4    4[COMMON] long 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  quotient        4    2[BANK0 ] long 
  4805 ;;  sign            1    1[BANK0 ] unsigned char 
  4806 ;;  counter         1    0[BANK0 ] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  4    0[COMMON] long 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4816 ;;      Params:         8       0       0       0       0
  4817 ;;      Locals:         0       6       0       0       0
  4818 ;;      Temps:          1       0       0       0       0
  4819 ;;      Totals:         9       6       0       0       0
  4820 ;;Total ram usage:       15 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_isr
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           
  4830                           ;psect for function ___aldiv
  4831  075F                     ___aldiv:	
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4835  075F  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0760  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0761  01A1               	clrf	___aldiv@sign
  4838  0762  1FF3               	btfss	___aldiv@divisor+3,7
  4839  0763  2F71               	goto	i1l430
  4840  0764  09F0               	comf	___aldiv@divisor,f
  4841  0765  09F1               	comf	___aldiv@divisor+1,f
  4842  0766  09F2               	comf	___aldiv@divisor+2,f
  4843  0767  09F3               	comf	___aldiv@divisor+3,f
  4844  0768  0AF0               	incf	___aldiv@divisor,f
  4845  0769  1903               	skipnz
  4846  076A  0AF1               	incf	___aldiv@divisor+1,f
  4847  076B  1903               	skipnz
  4848  076C  0AF2               	incf	___aldiv@divisor+2,f
  4849  076D  1903               	skipnz
  4850  076E  0AF3               	incf	___aldiv@divisor+3,f
  4851  076F  01A1               	clrf	___aldiv@sign
  4852  0770  0AA1               	incf	___aldiv@sign,f
  4853  0771                     i1l430:	
  4854  0771  1FF7               	btfss	___aldiv@dividend+3,7
  4855  0772  2F82               	goto	i1l1947
  4856  0773  09F4               	comf	___aldiv@dividend,f
  4857  0774  09F5               	comf	___aldiv@dividend+1,f
  4858  0775  09F6               	comf	___aldiv@dividend+2,f
  4859  0776  09F7               	comf	___aldiv@dividend+3,f
  4860  0777  0AF4               	incf	___aldiv@dividend,f
  4861  0778  1903               	skipnz
  4862  0779  0AF5               	incf	___aldiv@dividend+1,f
  4863  077A  1903               	skipnz
  4864  077B  0AF6               	incf	___aldiv@dividend+2,f
  4865  077C  1903               	skipnz
  4866  077D  0AF7               	incf	___aldiv@dividend+3,f
  4867  077E  3001               	movlw	1
  4868  077F  00F8               	movwf	??___aldiv
  4869  0780  0878               	movf	??___aldiv,w
  4870  0781  06A1               	xorwf	___aldiv@sign,f
  4871  0782                     i1l1947:	
  4872  0782  3000               	movlw	0
  4873  0783  00A5               	movwf	___aldiv@quotient+3
  4874  0784  3000               	movlw	0
  4875  0785  00A4               	movwf	___aldiv@quotient+2
  4876  0786  3000               	movlw	0
  4877  0787  00A3               	movwf	___aldiv@quotient+1
  4878  0788  3000               	movlw	0
  4879  0789  00A2               	movwf	___aldiv@quotient
  4880  078A  0873               	movf	___aldiv@divisor+3,w
  4881  078B  0472               	iorwf	___aldiv@divisor+2,w
  4882  078C  0471               	iorwf	___aldiv@divisor+1,w
  4883  078D  0470               	iorwf	___aldiv@divisor,w
  4884  078E  1903               	skipnz
  4885  078F  2FD7               	goto	i1l1969
  4886  0790  01A0               	clrf	___aldiv@counter
  4887  0791  0AA0               	incf	___aldiv@counter,f
  4888  0792                     i1l1955:	
  4889  0792  1BF3               	btfsc	___aldiv@divisor+3,7
  4890  0793  2FA2               	goto	i1l1957
  4891  0794  3001               	movlw	1
  4892  0795  00F8               	movwf	??___aldiv
  4893  0796                     u226_25:	
  4894  0796  1003               	clrc
  4895  0797  0DF0               	rlf	___aldiv@divisor,f
  4896  0798  0DF1               	rlf	___aldiv@divisor+1,f
  4897  0799  0DF2               	rlf	___aldiv@divisor+2,f
  4898  079A  0DF3               	rlf	___aldiv@divisor+3,f
  4899  079B  0BF8               	decfsz	??___aldiv,f
  4900  079C  2F96               	goto	u226_25
  4901  079D  3001               	movlw	1
  4902  079E  00F8               	movwf	??___aldiv
  4903  079F  0878               	movf	??___aldiv,w
  4904  07A0  07A0               	addwf	___aldiv@counter,f
  4905  07A1  2F92               	goto	i1l1955
  4906  07A2                     i1l1957:	
  4907  07A2  3001               	movlw	1
  4908  07A3  00F8               	movwf	??___aldiv
  4909  07A4                     u228_25:	
  4910  07A4  1003               	clrc
  4911  07A5  0DA2               	rlf	___aldiv@quotient,f
  4912  07A6  0DA3               	rlf	___aldiv@quotient+1,f
  4913  07A7  0DA4               	rlf	___aldiv@quotient+2,f
  4914  07A8  0DA5               	rlf	___aldiv@quotient+3,f
  4915  07A9  0BF8               	decfsz	??___aldiv,f
  4916  07AA  2FA4               	goto	u228_25
  4917  07AB  0873               	movf	___aldiv@divisor+3,w
  4918  07AC  0277               	subwf	___aldiv@dividend+3,w
  4919  07AD  1D03               	skipz
  4920  07AE  2FB9               	goto	u229_25
  4921  07AF  0872               	movf	___aldiv@divisor+2,w
  4922  07B0  0276               	subwf	___aldiv@dividend+2,w
  4923  07B1  1D03               	skipz
  4924  07B2  2FB9               	goto	u229_25
  4925  07B3  0871               	movf	___aldiv@divisor+1,w
  4926  07B4  0275               	subwf	___aldiv@dividend+1,w
  4927  07B5  1D03               	skipz
  4928  07B6  2FB9               	goto	u229_25
  4929  07B7  0870               	movf	___aldiv@divisor,w
  4930  07B8  0274               	subwf	___aldiv@dividend,w
  4931  07B9                     u229_25:	
  4932  07B9  1C03               	skipc
  4933  07BA  2FCA               	goto	i1l1965
  4934  07BB  0870               	movf	___aldiv@divisor,w
  4935  07BC  02F4               	subwf	___aldiv@dividend,f
  4936  07BD  0871               	movf	___aldiv@divisor+1,w
  4937  07BE  1C03               	skipc
  4938  07BF  0F71               	incfsz	___aldiv@divisor+1,w
  4939  07C0  02F5               	subwf	___aldiv@dividend+1,f
  4940  07C1  0872               	movf	___aldiv@divisor+2,w
  4941  07C2  1C03               	skipc
  4942  07C3  0F72               	incfsz	___aldiv@divisor+2,w
  4943  07C4  02F6               	subwf	___aldiv@dividend+2,f
  4944  07C5  0873               	movf	___aldiv@divisor+3,w
  4945  07C6  1C03               	skipc
  4946  07C7  0F73               	incfsz	___aldiv@divisor+3,w
  4947  07C8  02F7               	subwf	___aldiv@dividend+3,f
  4948  07C9  1422               	bsf	___aldiv@quotient,0
  4949  07CA                     i1l1965:	
  4950  07CA  3001               	movlw	1
  4951  07CB                     u230_25:	
  4952  07CB  1003               	clrc
  4953  07CC  0CF3               	rrf	___aldiv@divisor+3,f
  4954  07CD  0CF2               	rrf	___aldiv@divisor+2,f
  4955  07CE  0CF1               	rrf	___aldiv@divisor+1,f
  4956  07CF  0CF0               	rrf	___aldiv@divisor,f
  4957  07D0  3EFF               	addlw	-1
  4958  07D1  1D03               	skipz
  4959  07D2  2FCB               	goto	u230_25
  4960  07D3  3001               	movlw	1
  4961  07D4  02A0               	subwf	___aldiv@counter,f
  4962  07D5  1D03               	btfss	3,2
  4963  07D6  2FA2               	goto	i1l1957
  4964  07D7                     i1l1969:	
  4965  07D7  0821               	movf	___aldiv@sign,w
  4966  07D8  1903               	btfsc	3,2
  4967  07D9  2FE5               	goto	i1l1973
  4968  07DA  09A2               	comf	___aldiv@quotient,f
  4969  07DB  09A3               	comf	___aldiv@quotient+1,f
  4970  07DC  09A4               	comf	___aldiv@quotient+2,f
  4971  07DD  09A5               	comf	___aldiv@quotient+3,f
  4972  07DE  0AA2               	incf	___aldiv@quotient,f
  4973  07DF  1903               	skipnz
  4974  07E0  0AA3               	incf	___aldiv@quotient+1,f
  4975  07E1  1903               	skipnz
  4976  07E2  0AA4               	incf	___aldiv@quotient+2,f
  4977  07E3  1903               	skipnz
  4978  07E4  0AA5               	incf	___aldiv@quotient+3,f
  4979  07E5                     i1l1973:	
  4980  07E5  0825               	movf	___aldiv@quotient+3,w
  4981  07E6  00F3               	movwf	?___aldiv+3
  4982  07E7  0824               	movf	___aldiv@quotient+2,w
  4983  07E8  00F2               	movwf	?___aldiv+2
  4984  07E9  0823               	movf	___aldiv@quotient+1,w
  4985  07EA  00F1               	movwf	?___aldiv+1
  4986  07EB  0822               	movf	___aldiv@quotient,w
  4987  07EC  00F0               	movwf	?___aldiv
  4988  07ED  0008               	return
  4989  07EE                     __end_of___aldiv:	
  4990                           
  4991                           	psect	text19
  4992  0BCE                     __ptext19:	
  4993 ;; *************** function ___adc_read *****************
  4994 ;; Defined at:
  4995 ;;		line 59 in file "newmain.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  adc_channel     2    0[COMMON] int 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  adc_value       2    4[COMMON] int 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  2    0[COMMON] int 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         2       0       0       0       0
  5010 ;;      Locals:         2       0       0       0       0
  5011 ;;      Temps:          2       0       0       0       0
  5012 ;;      Totals:         6       0       0       0       0
  5013 ;;Total ram usage:        6 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_isr
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function ___adc_read
  5024  0BCE                     ___adc_read:	
  5025                           
  5026                           ;newmain.c: 60:     ADCON0bits.ADON = 1;
  5027                           
  5028                           ;incstack = 0
  5029                           ; Regs used in ___adc_read: [wreg+status,2+status,0]
  5030  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0BD0  141F               	bsf	31,0	;volatile
  5033                           
  5034                           ;newmain.c: 61:     ADCON0bits.CHS = (unsigned char) adc_channel;
  5035  0BD1  0870               	movf	___adc_read@adc_channel,w
  5036  0BD2  00F2               	movwf	??___adc_read
  5037  0BD3  0DF2               	rlf	??___adc_read,f
  5038  0BD4  0DF2               	rlf	??___adc_read,f
  5039  0BD5  0DF2               	rlf	??___adc_read,f
  5040  0BD6  081F               	movf	31,w	;volatile
  5041  0BD7  0672               	xorwf	??___adc_read,w
  5042  0BD8  39C7               	andlw	-57
  5043  0BD9  0672               	xorwf	??___adc_read,w
  5044  0BDA  009F               	movwf	31	;volatile
  5045                           
  5046                           ;newmain.c: 62:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5047  0BDB  3041               	movlw	65
  5048  0BDC  00F3               	movwf	??___adc_read+1
  5049  0BDD  30EE               	movlw	238
  5050  0BDE  00F2               	movwf	??___adc_read
  5051  0BDF                     u528_27:	
  5052  0BDF  0BF2               	decfsz	??___adc_read,f
  5053  0BE0  2BDF               	goto	u528_27
  5054  0BE1  0BF3               	decfsz	??___adc_read+1,f
  5055  0BE2  2BDF               	goto	u528_27
  5056  0BE3  0000               	nop
  5057                           
  5058                           ;newmain.c: 63:     ADCON0bits.GO = 1;
  5059  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0BE6  151F               	bsf	31,2	;volatile
  5062  0BE7                     i1l96:	
  5063                           ;newmain.c: 66:     }
  5064                           
  5065                           
  5066                           ;newmain.c: 64:     while (ADCON0bits.GO_DONE == 1) {
  5067  0BE7  191F               	btfsc	31,2	;volatile
  5068  0BE8  2BE7               	goto	i1l96
  5069                           
  5070                           ;newmain.c: 67:     int adc_value = (ADRESH << 8) + (ADRESL);
  5071  0BE9  081E               	movf	30,w	;volatile
  5072  0BEA  00F5               	movwf	___adc_read@adc_value+1
  5073  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  5074  0BEC  1303               	bcf	3,6	;RP1=0, select bank1
  5075  0BED  081E               	movf	30,w	;volatile
  5076  0BEE  00F4               	movwf	___adc_read@adc_value
  5077                           
  5078                           ;newmain.c: 68:     return adc_value;
  5079  0BEF  0875               	movf	___adc_read@adc_value+1,w
  5080  0BF0  00F1               	movwf	?___adc_read+1
  5081  0BF1  0874               	movf	___adc_read@adc_value,w
  5082  0BF2  00F0               	movwf	?___adc_read
  5083  0BF3  0008               	return
  5084  0BF4                     __end_of___adc_read:	
  5085  007E                     btemp	set	126	;btemp
  5086  007E                     wtemp0	set	126


Data Sizes:
    Strings     201
    Constant    0
    Data        30
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     28      58
    BANK1            80     10      80
    BANK3            96     13      49
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 19
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[17]), STR_11(CODE[8]), STR_10(CODE[8]), 
		 -> STR_9(CODE[12]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[12]), 
		 -> STR_5(CODE[19]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___wmul
    i1___wmul->i1___awdiv

Critical Paths under _main in BANK0

    _main->___wmul
    _main->_show
    _show_num->___awdiv
    _show_num->___awmod
    _show_num->_dat
    _show->_dat
    _dat->_lcd_delay
    _lcd_init->_cmd
    _cmd->_lcd_delay

Critical Paths under _isr in BANK0

    _isr->___aldiv

Critical Paths under _main in BANK1

    _main->_show_num
    _show_num->___awdiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    7716
                                              6 BANK1      4     4      0
                                              0 BANK3     13    13      0
                         ___init_adc
                 ___init_interrupt__
                     ___init_timer__
                             ___wmul
                                _cmd
                                _dat
                                _key
                            _keyinit
                           _lcd_init
                               _show
                           _show_num
 ---------------------------------------------------------------------------------
 (1) _show_num                                             2     0      2    4832
                                              4 BANK1      2     0      2
                            ___awdiv
                            ___awmod
                                _dat
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                             22 BANK0      5     1      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1965
                                             22 BANK0      5     1      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     807
                                             27 BANK0      1     1      0
                                              0 BANK1      1     1      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0     130
                                             24 BANK0      3     3      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0     130
                                             24 BANK0      3     3      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (3) _lcd_delay                                            2     2      0      68
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _keyinit                                              1     1      0       0
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _key                                                  4     4      0      37
                                             22 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     536
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___init_timer__                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___init_interrupt__                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___init_adc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 16    16      0    1768
                                              6 BANK0     16    16      0
                         ___adc_read
                            ___aldiv
                          i1___awdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     196
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                          i1___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___awdiv                                            9     5      4     508
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___adc_read                                           6     4      2     121
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___init_adc
   ___init_interrupt__
   ___init_timer__
   ___wmul
   _cmd
     _lcd_delay
   _dat
     _lcd_delay
   _key
   _keyinit
   _lcd_init
     _cmd
       _lcd_delay
   _show
     _dat
       _lcd_delay
   _show_num
     ___awdiv
     ___awmod
     _dat
       _lcd_delay

 _isr (ROOT)
   ___adc_read
   ___aldiv
   i1___awdiv
   i1___wmul
     i1___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      31       9       51.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C8      12        0.0%
ABS                  0      0      C8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 12 21:09:53 2024

                          _P 0056                            _T 0054                            pc 0002  
                __CFG_CP$OFF 0000                           _Go 0048                 ___awdiv@sign 00E7  
                         fsr 0004          ___wmul@multiplicand 0038             i1___wmul@product 0020  
                        l151 071E                          l152 0700                          l161 0726  
                        l154 06FD                          l146 06D3                          l163 072F  
                        l155 070B                          l147 06D5                          l243 0100  
                        l148 06F4                          l252 014E                          l165 0737  
                        l168 0741                          l365 0BB7                          _IBI 0058  
                        _GIE 005F                          _BPM 0042                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RD2 0042  
                        _RB6 0036                          _RD3 0043                          _RB7 0037  
                        _PR2 0092                 __CFG_CPD$OFF 0000                          _IDs 0190  
                        _dat 0C57                          _cmd 0C1B                          _amp 0050  
                        _key 06CF                          _isr 0DC9                          fsr0 0004  
                        indf 0000                 ___awmod@sign 00E7                 __CFG_FOSC$HS 0000  
               __CFG_LVP$OFF 0000                         l3011 0D8A                         l3101 06F2  
                       l3021 0DB4                         ?_dat 0070                         l3025 0DBE  
                       l3017 0DA6                         l3009 0D78                         l3041 0D04  
                       ?_cmd 0070                         l3123 0714                         l3115 0709  
                       l3051 0D1E                         l3125 0719                         l3037 0CFC  
                       l3221 05E3                         l3301 0134                         l3063 0D46  
                       l3055 0D2D                         l3207 05AF                         l3049 0D0C  
                       l3321 0172                         l3059 0D3A                         l3229 0BAF  
                       l3341 01EF                         l3309 0144                         l3175 074C  
                       l3087 0B8C                         l3415 02F1                         l3407 02D9  
                       l3335 01DF                         l3185 0494                         l3361 026D  
                       l3195 0540                         l3451 03A7                         l3279 00D5  
                       l3369 0233                         l3379 0296                         l2943 07F2  
                       ?_key 0070                         l2993 0D5C                         l2999 0D6A  
                       ?_isr 0070                         STR_1 063D                         STR_2 064E  
                       STR_3 062C                         STR_4 0670                         STR_5 0619  
                       STR_6 068E                         STR_7 0681                         STR_8 0606  
                       STR_9 069A                         u5005 0BBF                         _BPMs 00A0  
                       u4305 0D8D                         u4235 0C3F                         u4315 0D9B  
                       u4245 0C7B                         u4325 0DA8                         u4405 0D25  
                       u4415 0D2E                         u5217 006E                         u4450 06DF  
                       u5227 009B                         _PEIE 005E                         u4460 06E8  
                       u4285 0D7D                         u5237 00BC                         u5247 020D  
                       u4464 06E2                         u4385 0D11                         u5257 0289  
                       u4474 06EB                         u5267 02AE                         u5277 0313  
                       u4905 03C3                         u4915 049F                         u4925 04AC  
                       u4935 054B                         i1l96 0BE7                         u4945 0558  
                       u4955 05BA                         u4965 05C7                         u4895 074F  
                       u4995 0BB8                         _Ages 00B4                 __CFG_WRT$OFF 0000  
         ___init_interrupt__ 0B19                         dat@b 003A                         cmd@a 003A  
                       _main 004D                         _rate 00C8                         _show 0B89  
                       btemp 007E                         isr@N 0032                         isr@i 0030  
              __CFG_BOREN$ON 0000                         start 0012      __size_of___init_timer__ 0007  
        ?___init_interrupt__ 0070                        ??_dat 0038                        ??_cmd 0038  
                      ??_key 0036                        ??_isr 0026              __end_of___aldiv 07EE  
                      ?_main 0070               i1___awdiv@sign 0076              __end_of___awdiv 0DC9  
                      STR_10 06B9                        STR_11 06B1                        STR_12 065F  
                      STR_13 06A6                        STR_14 068E                        STR_15 06CB  
                      STR_16 06C6                        STR_17 06C1                __CFG_WDTE$OFF 0000  
            __end_of___awmod 0D4C                        ?_show 0070              ___awdiv@divisor 0036  
                      i1l214 0E3A                        i1l223 0FF3                        i1l217 0F85  
                      i1l430 0771                        i1l365 0C02              ___awdiv@counter 00E6  
                      _TMR1H 000F                        _TMR1L 000E                        _PORTB 0006  
                      _PORTD 0008                        _TRISA 0085                        _TRISB 0086  
                      _TRISD 0088         ??___init_interrupt__ 0036                        _Pulse 0044  
            __end_of_keyinit 0B2F                        main@k 01C0                        pclath 000A  
           __end_ofi1___wmul 0C1B                        show@s 00E6                        status 0003  
        i1___wmul@multiplier 0079                        wtemp0 007E           __size_ofi1___awdiv 0059  
            __initialization 0015                 __end_of_main 03B8                 __end_of_show 0BAB  
         lcd_delay@lcd_delay 0036                       ??_main 00EC                       ??_show 003B  
                     _ADRESH 001E                       _ADRESL 009E                       _CCPR1L 0015  
           ___awdiv@dividend 0038                       i1l2211 0CBE                       i1l2221 0CDF  
                     i1l2301 0F02                       i1l2225 0CE7                       i1l2217 0CD4  
                     i1l2209 0CB0                       i1l2331 0FC2                       i1l2307 0F06  
                     i1l2173 0BF8                       i1l2193 0C9D                       i1l2265 0E5C  
                     i1l2293 0EF5                       i1l2199 0CA8                       i1l2287 0ED7  
                     i1l1955 0792                       i1l1947 0782                       i1l1973 07E5  
                     i1l1965 07CA                       i1l1957 07A2                       i1l1969 07D7  
                     u300_25 0E67                       u301_25 0E75                       u230_25 07CB  
                     u302_25 0E9F                       u304_25 0EF3                       u226_25 0796  
                     u306_25 0F3C                       u307_25 0F91                       u228_25 07A4  
                     u229_25 07B9                       u309_25 0FCD                       u280_25 0C03  
                     u281_25 0C0A                       u290_25 0CD5                       u286_25 0CB3  
                     u295_25 0DFA                       u288_25 0CBF                       u296_25 0E24  
                     u528_27 0BDF                       u289_25 0CCB                       u297_25 0E32  
                     u298_25 0E46                       u299_25 0E54                       _TMR1IE 0460  
                     _TMR1IF 0060                       _TMR1CS 0081                       _TMR1ON 0080  
             __CFG_PWRTE$OFF 0000                       _Signal 0040             __end_of_lcd_init 0B89  
                  ??___aldiv 0078                       ___wmul 0BAB                    ??___awdiv 003A  
                  ??___awmod 003A                       _colloc 004A                       _keypad 01A4  
           ___awdiv@quotient 00E8              ___awmod@divisor 0036              ___awmod@counter 00E6  
                     _thresh 0052                       _rowloc 004B            __end_ofi1___awdiv 0CEC  
             show_num@number 00EA                    ??_keyinit 0036                       saved_w 007E  
                 ___adc_read 0BCE             __end_of_show_num 0600         ___adc_read@adc_value 0074  
    __end_of__initialization 0049               ___init_timer__ 0B0A                   ___init_adc 0B2F  
             __pcstackCOMMON 0070                 __pidataBANK0 0B3D                 __pidataBANK3 0B4B  
                  ?i1___wmul 0079           __size_of_lcd_delay 0012                   __pbssBANK0 003C  
                 __pbssBANK1 00A0                   __pbssBANK3 0190       __end_of___init_timer__ 0B11  
                 __pmaintext 004D                      ?___wmul 0036                   __pintentry 0004  
                 ??i1___wmul 007D                      _T1CKPS0 0084                      _T1CKPS1 0085  
         i1___awdiv@dividend 0072                  ?___adc_read 0070                    ?_lcd_init 0070  
                 __stringtab 0600              ?___init_timer__ 0070                  ?___init_adc 0070  
         i1___awdiv@quotient 0077            __end_of_lcd_delay 0800                      ___aldiv 075F  
                  ?_show_num 00EA                      ___awdiv 0D4C                      ___awmod 0CEC  
            __size_of___wmul 0023                      __ptext1 03B8                      __ptext2 0CEC  
                    __ptext3 0D4C                      __ptext4 0B89                      __ptext5 0C57  
                    __ptext6 0B6C                      __ptext7 0C1B                      __ptext8 07EE  
                    __ptext9 0B22                    _T1CONbits 0010                      _counter 00E0  
                  _T2CONbits 0012                 __size_of_dat 003C                 __size_of_cmd 003C  
               _chossenIndex 004C                 __size_of_key 0090                 __size_of_isr 0237  
                    _keyinit 0B22             ___awmod@dividend 0038             ___aldiv@dividend 0074  
__size_of___init_interrupt__ 0009                      main@age 01B4                      clrloop0 0B12  
                 ??_lcd_init 003B                   _secondBeat 003C         end_of_initialization 0049  
        __size_of___adc_read 0026             ___aldiv@quotient 0022                   ??_show_num 003B  
            isr@runningTotal 002E        i1___wmul@multiplicand 007B                   main@BPMGlo 01BA  
                 main@AgeGlo 01B8                    _TRISCbits 0087          __size_of___init_adc 000E  
                  i1___awdiv 0C93                   main@agebuf 01BE                  _CCP1CONbits 0017  
                 key@no_push 0039               __end_of___wmul 0BCE                 _lastBeatTime 0046  
        start_initialization 0015            __size_ofi1___wmul 0027                  __end_of_dat 0C93  
                __end_of_cmd 0C57                  __end_of_key 075F                  __end_of_isr 1000  
                 ?i1___awdiv 0070                _sampleCounter 003E                     ??___wmul 003A  
                 init_fetch0 0B5B                  __pdataBANK0 004C                  __pdataBANK3 01A4  
               ??___adc_read 0072                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00E6                __pcstackBANK3 01B4             ??___init_timer__ 0036  
          __size_of_lcd_init 001D                 ??___init_adc 0036                     ?___aldiv 0070  
         __end_of___adc_read 0BF4                     ?___awdiv 0036                     ?___awmod 0036  
          i1___awdiv@divisor 0070                    _lcd_delay 07EE            __size_of_show_num 0248  
          i1___awdiv@counter 0075                    __pstrings 0600                    _firstBeat 004E  
                   ?_keyinit 0070                  ??i1___awdiv 0074           __end_of___init_adc 0B3D  
            ___aldiv@divisor 0070            interrupt_function 0004              ___aldiv@counter 0020  
             ___wmul@product 003A                    clear_ram0 0B11                     _PIE1bits 008C  
                  main@IDGlo 01B6                   ?_lcd_delay 0070                     _PWM_FREQ 00E2  
                 _ADCON0bits 001F                  __stringbase 0605                   _ADCON1bits 009F  
          ___wmul@multiplier 0036                     i1___wmul 0BF4   __end_of___init_interrupt__ 0B22  
           __size_of___aldiv 008F             __size_of___awdiv 007D             __size_of___awmod 0060  
         __end_of__stringtab 0606             __size_of_keyinit 000D                     __ptext10 06CF  
                   __ptext11 0BAB                     __ptext12 0B0A                     __ptext13 0B19  
                   __ptext14 0B2F                     __ptext15 0DC9                     __ptext16 0BF4  
                   __ptext17 0C93                     __ptext18 075F                     __ptext19 0BCE  
                   _lcd_init 0B6C                __size_of_main 036B                __size_of_show 0022  
                   _show_num 03B8                  ??_lcd_delay 0036                     main@flag 01BC  
                   isr@i_356 0034                     init_ram0 0B5F                     intlevel1 0000  
                  stringcode 0600                   _OPTION_REG 0081                     stringdir 0600  
                   stringtab 0600                 ___aldiv@sign 0021       ___adc_read@adc_channel 0070  
                 _PWM_PERIOD 00DC  
